<UserControl x:Class="NETworkManager.Views.PingMonitorHostView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:settings="clr-namespace:NETworkManager.Settings;assembly=NETworkManager.Settings"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:profiles="clr-namespace:NETworkManager.Profiles;assembly=NETworkManager.Profiles"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:PingMonitorHostViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:IntNotZeroToVisibilityCollapsedConverter x:Key="IntNotZeroToVisibilityCollapsedConverter" />
        <converters:IntZeroToVisibilityCollapsedConverter x:Key="IntZeroToVisibilityCollapsedConverter" />
        <converters:StringNullOrEmptyToBoolConverter x:Key="StringNullOrEmptyToBoolConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition MinWidth="{x:Static Member=settings:GlobalStaticConfiguration.Profile_WidthCollapsed}"
                              Width="{Binding Path=ProfileWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              MaxWidth="{x:Static Member=settings:GlobalStaticConfiguration.Profile_MaxWidthExpanded}" />
        </Grid.ColumnDefinitions>
        <TabControl Grid.Column="0" Grid.Row="0" Style="{StaticResource ResourceKey=DefaultTabControl}">
            <TabItem Grid.Row="0" Header="{x:Static Member=localization:Strings.PingMonitor}">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Style="{StaticResource ResourceKey=HeaderTextBlock}"
                               Text="{x:Static Member=localization:Strings.AddHost}" />
                    <Grid Grid.Row="1" Margin="0,0,0,20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0"
                                       Text="{x:Static Member=localization:Strings.Host}"
                                       Style="{DynamicResource ResourceKey=DefaultTextBlock}"
                                       VerticalAlignment="Center" />
                            <ComboBox Grid.Column="2" Grid.Row="0"
                                      x:Name="ComboBoxHost"
                                      ItemsSource="{Binding Path=HostHistoryView}"
                                      mah:TextBoxHelper.Watermark="{x:Static Member=localization:StaticStrings.ExampleHostRange}"
                                      IsReadOnly="{Binding Path=IsRunning}"
                                      Style="{StaticResource ResourceKey=HistoryComboBox}">
                                <ComboBox.Text>
                                    <Binding Path="Host" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                            <validators:MultipleHostsRangeValidator ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>
                            <Button Grid.Column="4" Grid.Row="0"
                                    Command="{Binding Path=PingCommand}"
                                    IsDefault="{Binding Path=IsRunning, Converter={StaticResource ResourceKey=BooleanReverseConverter}}"
                                    IsCancel="{Binding Path=IsRunning}">
                                <Button.Resources>
                                    <Style TargetType="{x:Type TypeName=Button}"
                                           BasedOn="{StaticResource ResourceKey=ImageWithTextButton}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding Path=(Validation.HasError), ElementName=ComboBoxHost}"
                                                Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsCanceling}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0" Grid.Row="0">
                                            <Rectangle.Resources>
                                                <VisualBrush x:Key="VisualControlPlay" Stretch="Uniform"
                                                             Visual="{iconPacks:Material Kind=Play}" />
                                                <VisualBrush x:Key="VisualClose" Stretch="Uniform"
                                                             Visual="{iconPacks:Material Kind=Close}" />
                                            </Rectangle.Resources>
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type TypeName=Rectangle}"
                                                       BasedOn="{StaticResource ResourceKey=ButtonWithImageRectangle}">
                                                    <Setter Property="OpacityMask"
                                                            Value="{StaticResource ResourceKey=VisualControlPlay}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                                            <Setter Property="OpacityMask"
                                                                    Value="{StaticResource ResourceKey=VisualClose}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Grid.Row="0">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TypeName=TextBlock}"
                                                       BasedOn="{StaticResource ResourceKey=ButtonWithImageTextBlock}">
                                                    <Setter Property="Text"
                                                            Value="{x:Static localization:Strings.Ping}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                                            <Setter Property="Text"
                                                                    Value="{x:Static localization:Strings.Cancel}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                        <mahAppsControls:MetroProgressBar Grid.Row="1" Margin="0,10,0,0"
                                                          Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                                          IsIndeterminate="True">
                            <mahAppsControls:MetroProgressBar.Style>
                                <Style TargetType="{x:Type TypeName=mahAppsControls:MetroProgressBar}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mahAppsControls:MetroProgressBar.Style>
                        </mahAppsControls:MetroProgressBar>
                        <TextBlock Grid.Row="2" Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                   Text="{Binding Path=StatusMessage}"
                                   Visibility="{Binding Path=IsStatusMessageDisplayed, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}"
                                   Style="{DynamicResource ResourceKey=StatusMessageTextBlock}" Margin="0,10,0,0" />
                    </Grid>
                    <ScrollViewer Grid.Column="0" Grid.Row="2"
                                  HorizontalScrollBarVisibility="Auto">
                        <ListView ItemsSource="{Binding Path=HostsView}"
                                  SelectedItem="{Binding Path=SelectedHost}"
                                  Visibility="{Binding Path=Hosts.Count, Converter={StaticResource ResourceKey=IntNotZeroToVisibilityCollapsedConverter}}"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  SelectionMode="Single">
                            <ListView.ContextMenu>
                                <ContextMenu Opened="ContextMenu_Opened" MinWidth="150">
                                    <MenuItem Header="{x:Static Member=localization:Strings.ExportDots}"
                                              Command="{Binding Path=ExportCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16"
                                                       Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Material Kind=Export}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type TypeName=GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Expander IsExpanded="True"
                                                                  Style="{StaticResource ResourceKey=DefaultExpander}">
                                                            <Expander.Header>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                        <ColumnDefinition Width="10" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Grid.Column="0" Grid.Row="0"
                                                                               Text="{Binding Path=(CollectionViewGroup.Name)}"
                                                                               Style="{DynamicResource ResourceKey=HeaderTextBlock}" />
                                                                    <Button Grid.Column="2" Grid.Row="0"
                                                                            HorizontalAlignment="Right"
                                                                            Command="{Binding Path=DataContext.CloseGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=ListView}}}"
                                                                            CommandParameter="{Binding Path=(CollectionViewGroup.Name)}"
                                                                            Style="{StaticResource ResourceKey=CleanButton}"
                                                                            ToolTip="{x:Static Member=localization:Strings.CloseGroup}">
                                                                        <Rectangle Width="16" Height="16">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Fill"
                                                                                    Visual="{iconPacks:Material Kind=WindowClose}" />
                                                                            </Rectangle.OpacityMask>
                                                                            <Rectangle.Style>
                                                                                <Style
                                                                                    TargetType="{x:Type TypeName=Rectangle}">
                                                                                    <Setter Property="Fill"
                                                                                        Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger
                                                                                            Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                                                            Value="True">
                                                                                            <Setter Property="Fill"
                                                                                                Value="Red" />
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Rectangle.Style>
                                                                        </Rectangle>
                                                                    </Button>
                                                                </Grid>
                                                            </Expander.Header>
                                                            <ItemsPresenter />
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ListBox.GroupStyle>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type TypeName=ListViewItem}"
                                       BasedOn="{StaticResource ResourceKey=MahApps.Styles.ListViewItem}">
                                    <Setter Property="Margin" Value="0,0,0,10" />
                                    <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="Transparent" />
                                    <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="Transparent" />
                                    <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                                    <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush"
                                            Value="Transparent" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <!-- BUGFIX This has to be set, to enable mouse wheel scrolling -->
                            <ListView.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <!-- /BUGFIX-->
                        </ListView>
                    </ScrollViewer>
                    <TextBlock Grid.Column="0" Grid.Row="2"
                               Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}"
                               Text="{x:Static Member=localization:Strings.AddAHostToMonitor}"
                               Visibility="{Binding Path=Hosts.Count, Converter={StaticResource ResourceKey=IntZeroToVisibilityCollapsedConverter}}"
                               Style="{StaticResource ResourceKey=HeaderTextBlock}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap"
                               TextAlignment="Center"
                               Margin="10,0" />
                </Grid>
            </TabItem>
        </TabControl>
        <GridSplitter Grid.Column="1" Grid.Row="0"
                      Focusable="False"
                      Style="{StaticResource ResourceKey=ProfileGridSplitter}" />
        <Expander Grid.Column="2" Grid.Row="0"
                  x:Name="ExpanderProfiles"
                  Header="{x:Static Member=localization:Strings.Profiles}"
                  Style="{StaticResource ResourceKey=ProfileExpander}"
                  IsExpanded="{Binding Path=ExpandProfileView}">
            <Grid>
                <Grid
                    Visibility="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerIsEnabled, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton Grid.Column="0" Grid.Row="0"
                                      Focusable="False"
                                      IsChecked="{Binding Path=ExpandProfileView}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type TypeName=ToggleButton}"
                                       BasedOn="{StaticResource ResourceKey=MahApps.Styles.Button.Circle}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TypeName=ToggleButton}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" RecognizesAccessKey="True" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <Rectangle Width="16" Height="16">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ChevronRight}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type TypeName=Rectangle}">
                                        <Setter Property="Fill"
                                                Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill"
                                                        Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </ToggleButton>
                        <TextBox x:Name="TextBoxSearch" Grid.Column="2" Grid.Row="0" VerticalAlignment="Center"
                                 Text="{Binding Path=Search, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource ResourceKey=SearchTextBox}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=PingProfileCommand}" Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Grid.Column="4" Grid.Row="0"
                                Focusable="False"
                                Style="{StaticResource ResourceKey=CleanButton}"
                                Command="{Binding Path=AddProfileCommand}"
                                ToolTip="{x:Static Member=localization:Strings.AddProfileDots}">
                            <Rectangle Width="16" Height="16">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type TypeName=Rectangle}">
                                        <Setter Property="Fill"
                                                Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                Value="True">
                                                <Setter Property="Fill"
                                                        Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                    </Grid>
                    <ListBox Grid.Column="0" Grid.Row="2" ItemsSource="{Binding Path=Profiles}"
                             Visibility="{Binding Path=IsSearching, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
                             SelectedItem="{Binding Path=SelectedProfile}"
                             Style="{StaticResource ResourceKey=ProfileListBox}"
                             ScrollViewer.CanContentScroll="True"
                             VirtualizingPanel.IsVirtualizing="True"
                             VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                             VirtualizingPanel.IsContainerVirtualizable="True"
                             VirtualizingPanel.VirtualizationMode="Recycling"
                             VirtualizingPanel.ScrollUnit="Item">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.Resources>
                            <ContextMenu x:Key="ProfileContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                                <MenuItem Header="{x:Static Member=localization:Strings.Ping}"
                                          Command="{Binding Path=PingProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16"
                                                   Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Play}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static Member=localization:Strings.EditDots}"
                                          Command="{Binding Path=EditProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16"
                                                   Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static Member=localization:Strings.CopyAsDots}"
                                          Command="{Binding Path=CopyAsProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16"
                                                   Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:Material Kind=ContentDuplicate}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static Member=localization:Strings.Delete}"
                                          Command="{Binding Path=DeleteProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16"
                                                   Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.Resources>
                        <ListBox.InputBindings>
                            <KeyBinding Command="{Binding Path=EditProfileCommand}" Key="F2" />
                            <KeyBinding Command="{Binding Path=DeleteProfileCommand}" Key="Delete" />
                            <KeyBinding Command="{Binding Path=PingProfileCommand}" Key="Enter" />
                        </ListBox.InputBindings>
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type TypeName=GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Expander IsExpanded="True"
                                                              Style="{StaticResource ResourceKey=DefaultExpander}">
                                                        <Expander.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="10" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <Rectangle Grid.Column="0" Grid.ColumnSpan="3"
                                                                           Fill="Transparent" />
                                                                <TextBlock Grid.Column="0"
                                                                           Text="{Binding Path=(CollectionViewGroup.Name)}"
                                                                           Style="{DynamicResource ResourceKey=ProfileGroupTextBlock}" />
                                                                <Button Grid.Column="2"
                                                                        ToolTip="{x:Static Member=localization:Strings.EditGroupDots}"
                                                                        Command="{Binding Path=DataContext.EditGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=ListBox}}}"
                                                                        CommandParameter="{Binding Path=(CollectionViewGroup.Name)}"
                                                                        Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Grid}}, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}"
                                                                        Style="{StaticResource ResourceKey=CleanButton}">
                                                                    <Rectangle Width="16" Height="16">
                                                                        <Rectangle.OpacityMask>
                                                                            <VisualBrush Stretch="Uniform"
                                                                                Visual="{iconPacks:Modern Kind=Edit}" />
                                                                        </Rectangle.OpacityMask>
                                                                        <Rectangle.Style>
                                                                            <Style
                                                                                TargetType="{x:Type TypeName=Rectangle}">
                                                                                <Setter Property="Fill"
                                                                                    Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                                                                <Style.Triggers>
                                                                                    <DataTrigger
                                                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                                                        Value="True">
                                                                                        <Setter Property="Fill"
                                                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Button>
                                                            </Grid>
                                                        </Expander.Header>
                                                        <ItemsPresenter />
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ListBox.GroupStyle>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type TypeName=ListBoxItem}"
                                   BasedOn="{StaticResource ResourceKey=MahApps.Styles.ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=ProfileContextMenu}" />
                                <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type profiles:ProfileInfo}">
                                <Grid Background="Transparent">
                                    <Grid.ToolTip>
                                        <ToolTip MinWidth="250">
                                            <StackPanel Margin="10">
                                                <TextBlock Text="{Binding PingMonitor_Host}" Style="{StaticResource DefaultTextBlock}" />
                                                <Separator Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,10" />
                                                <TextBlock Text="{Binding Description}" Style="{StaticResource InfoTextBlock}" TextWrapping="Wrap" />
                                            </StackPanel>
                                        </ToolTip>                                        
                                    </Grid.ToolTip>
                                    <TextBlock Text="{Binding Name}" Style="{StaticResource CenterTextBlock}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <mah:ProgressRing Grid.Row="2" Height="50" Width="50" IsActive="{Binding Path=IsSearching}" />
                    <Grid Grid.Row="2" VerticalAlignment="Center">
                        <Grid.Style>
                            <Style TargetType="{x:Type TypeName=Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Profiles.Count}" Value="0" />
                                            <Condition Binding="{Binding Path=IsSearching}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Button HorizontalAlignment="Center" Focusable="False">
                            <Button.Style>
                                <Style TargetType="{x:Type TypeName=Button}"
                                       BasedOn="{StaticResource ResourceKey=CleanButton}">
                                    <Setter Property="Command" Value="{Binding Path=AddProfileCommand}" />

                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Path=Search, Converter={StaticResource ResourceKey=StringNullOrEmptyToBoolConverter}}"
                                            Value="False">
                                            <Setter Property="Command" Value="{Binding Path=ClearSearchCommand}" />
                                            <Setter Property="ToolTip"
                                                    Value="{x:Static Member=localization:Strings.ClearFilter}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Width="20" Height="20">
                                    <Rectangle.Resources>
                                        <VisualBrush x:Key="VisualPlus" Stretch="Uniform"
                                                     Visual="{iconPacks:Material Kind=Plus}" />
                                        <VisualBrush x:Key="VisualClear" Stretch="Uniform"
                                                     Visual="{iconPacks:Material Kind=FilterRemoveOutline}" />
                                    </Rectangle.Resources>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type TypeName=Rectangle}">
                                            <Setter Property="OpacityMask"
                                                    Value="{StaticResource ResourceKey=VisualPlus}" />
                                            <Setter Property="Fill"
                                                    Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding Path=Search, Converter={StaticResource ResourceKey=StringNullOrEmptyToBoolConverter}}"
                                                    Value="False">
                                                    <Setter Property="OpacityMask"
                                                            Value="{StaticResource ResourceKey=VisualClear}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Grid.Column="1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TypeName=TextBlock}"
                                               BasedOn="{StaticResource ResourceKey=MessageTextBlock}">
                                            <Setter Property="Text"
                                                    Value="{x:Static Member=localization:Strings.NoProfilesFoundCreateOne}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding Path=Search, Converter={StaticResource ResourceKey=StringNullOrEmptyToBoolConverter}}"
                                                    Value="False">
                                                    <Setter Property="Text"
                                                            Value="{x:Static Member=localization:Strings.NothingFound}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button>
                    </Grid>
                </Grid>
                <Grid
                    Visibility="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerIsEnabled, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}">
                    <Grid.RowDefinitions>
                        <!-- Adjust the Height without TextBox -->
                        <RowDefinition Height="27" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToggleButton Grid.Row="0" Grid.Column="0"
                                  IsChecked="{Binding ExpandProfileView}"
                                  HorizontalAlignment="Left"
                                  Focusable="False">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type TypeName=ToggleButton}"
                                   BasedOn="{StaticResource ResourceKey=MahApps.Styles.Button.Circle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TypeName=ToggleButton}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                              RecognizesAccessKey="True" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                        <Rectangle Width="16" Height="16">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ChevronRight}" />
                            </Rectangle.OpacityMask>
                            <Rectangle.Style>
                                <Style TargetType="{x:Type TypeName=Rectangle}">
                                    <Setter Property="Fill" Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Fill"
                                                    Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </ToggleButton>
                    <Grid Grid.Column="0" Grid.Row="2">
                        <!-- Unlock profile button -->
                        <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                                Focusable="False"
                                Command="{Binding Path=UnlockProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=mah:MetroWindow}}}"
                                Style="{StaticResource ResourceKey=CleanButton}"
                                Visibility="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerShowUnlock, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Grid.Row="0"
                                           Width="20" Height="20">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform"
                                                     Visual="{iconPacks:Modern Kind=InterfacePassword}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type TypeName=Rectangle}">
                                            <Setter Property="Fill"
                                                    Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Grid.Row="0"
                                           Text="{x:Static Member=localization:Strings.UnlockTheProfileFileMessage}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TypeName=TextBlock}"
                                               BasedOn="{StaticResource ResourceKey=MessageTextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button>
                        <!-- Profile Manager error message -->
                        <TextBlock
                            Text="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerErrorMessage}"
                            Visibility="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerShowUnlock, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
                            Style="{StaticResource ResourceKey=MessageTextBlock}" />
                    </Grid>
                </Grid>
            </Grid>
        </Expander>
    </Grid>
</UserControl>