<UserControl x:Class="NETworkManager.Views.SNMPView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:controls="clr-namespace:NETworkManager.Controls;assembly=NETworkManager.Controls"
             xmlns:wpfHelpers="clr-namespace:NETworkManager.Utilities.WPF;assembly=NETworkManager.Utilities.WPF"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:SNMPViewModel}">
    <UserControl.Resources>
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Style="{StaticResource HeaderTextBlock}"
                   Text="{x:Static localization:Strings.SNMP}" />
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0"
                       Text="{x:Static localization:Strings.Host}"
                       Style="{StaticResource CenterTextBlock}" />
            <ComboBox Grid.Column="2" Grid.Row="0"
                      Grid.ColumnSpan="5"
                      x:Name="ComboBoxHost"
                      Height="{Binding ElementName=ComboBoxOid, Path=ActualHeight}"
                      ItemsSource="{Binding HostHistoryView}"
                      mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                      IsReadOnly="{Binding IsRunning}"
                      Style="{StaticResource HistoryComboBox}">
                <ComboBox.Text>
                    <Binding Path="Host" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.Text>
            </ComboBox>
            <TextBlock Grid.Column="8" Grid.Row="0"
                       Text="{x:Static localization:Strings.Mode}"
                       Style="{StaticResource CenterTextBlock}" />
            <ComboBox Grid.Column="10" Grid.Row="0"
                      ItemsSource="{Binding Modes}"
                      SelectedItem="{Binding Mode}"
                      IsReadOnly="{Binding IsRunning}" />
            <TextBlock Grid.Column="12" Grid.Row="0"
                       Text="{x:Static localization:Strings.Version}"
                       Style="{StaticResource CenterTextBlock}" />
            <ComboBox Grid.Column="14" Grid.Row="0"
                      ItemsSource="{Binding Versions}"
                      SelectedItem="{Binding Version}"
                      IsReadOnly="{Binding IsRunning}" />
            <TextBlock Grid.Column="0" Grid.Row="2"
                       Text="{x:Static localization:Strings.OID}"
                       Style="{StaticResource CenterTextBlock}" />
            <ComboBox Grid.Column="2" Grid.Row="2"
                      Grid.ColumnSpan="3"
                      x:Name="ComboBoxOid"
                      ItemsSource="{Binding OidHistoryView}"
                      IsReadOnly="{Binding IsRunning}">
                <ComboBox.Resources>
                    <wpfHelpers:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                </ComboBox.Resources>
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource HistoryComboBox}">
                        <Setter Property="mah:TextBoxHelper.Watermark"
                                Value="{x:Static localization:StaticStrings.ExampleSnmpOid}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Mode}" Value="Get">
                                <Setter Property="mah:TextBoxHelper.Watermark"
                                        Value="{x:Static localization:StaticStrings.ExampleSnmpOids}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.Text>
                    <Binding Path="Oid" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                            <validators:SNMPOIDValidator ValidatesOnTargetUpdated="True">
                                <validators:SNMPOIDValidator.Wrapper>
                                    <validators:SNMPOIDDependencyObjectWrapper
                                        Mode="{Binding Path=Data.(viewModels:SNMPViewModel.Mode), Source={StaticResource BindingProxy}}" />
                                </validators:SNMPOIDValidator.Wrapper>
                            </validators:SNMPOIDValidator>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.Text>
            </ComboBox>
            <Button Grid.Column="6" Grid.Row="2" Command="{Binding OpenOIDProfilesCommand}"
                    ToolTip="{x:Static localization:Strings.OpenOIDProfilesDots}">
                <Button.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
                <Rectangle Width="20" Height="20" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=FolderSearchOutline}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <TextBlock Grid.Column="8" Grid.Row="2" Text="{x:Static localization:Strings.Community}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Version}" Value="v3">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <PasswordBox Grid.Column="10" Grid.Row="2"
                         Grid.ColumnSpan="5">
                <PasswordBox.Style>
                    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource DefaultPasswordBox}">
                        <Setter Property="mah:TextBoxHelper.Watermark"
                                Value="{x:Static localization:Strings.FromProfile}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCommunityEmpty}" Value="True">
                                <Setter Property="mah:TextBoxHelper.Watermark"
                                        Value="{x:Static localization:StaticStrings.ExampleSNMPCommunity}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Version}" Value="V3">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </PasswordBox.Style>
                <interactivity:Interaction.Behaviors>
                    <wpfHelpers:PasswordBoxBindingBehavior
                        Password="{Binding Community, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </interactivity:Interaction.Behaviors>
            </PasswordBox>
            <TextBlock Grid.Column="8" Grid.Row="2" Text="{x:Static localization:Strings.Security}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Version}" Value="v3">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <ComboBox Grid.Column="10" Grid.Row="2"
                      ItemsSource="{Binding Securities}" SelectedItem="{Binding Security}">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Version}" Value="v3">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <TextBlock Grid.Column="12" Grid.Row="2" Text="{x:Static localization:Strings.Username}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Version}" Value="v3">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBox Grid.Column="14" Grid.Row="2"
                     x:Name="TextBoxUsername"
                     VerticalAlignment="Stretch"
                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                     IsReadOnly="{Binding IsRunning}">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Version}" Value="v3">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding Path="Username" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Column="0" Grid.Row="3" Text="{x:Static localization:Strings.Auth}" Margin="0,10,0,0">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="v3" />
                                    <Condition Binding="{Binding Security}" Value="AuthNoPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="v3" />
                                    <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <ComboBox Grid.Column="2" Grid.Row="3"
                      Height="{Binding ElementName=ComboBoxOid, Path=ActualHeight}"
                      ItemsSource="{Binding AuthenticationProviders}"
                      SelectedItem="{Binding AuthenticationProvider}"
                      Margin="0,10,0,0">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="V3" />
                                    <Condition Binding="{Binding Security}" Value="AuthNoPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="V3" />
                                    <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <PasswordBox Grid.Column="4" Grid.Row="3" Grid.ColumnSpan="3"
                         Margin="0,10,0,0">
                <PasswordBox.Style>
                    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource DefaultPasswordBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="mah:TextBoxHelper.Watermark"
                                Value="{x:Static localization:Strings.FromProfile}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAuthEmpty}" Value="True">
                                <Setter Property="mah:TextBoxHelper.Watermark"
                                        Value="{x:Static localization:StaticStrings.ExampleSNMPAuthSecret}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="V3" />
                                    <Condition Binding="{Binding Security}" Value="AuthNoPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="V3" />
                                    <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </PasswordBox.Style>
                <interactivity:Interaction.Behaviors>
                    <wpfHelpers:PasswordBoxBindingBehavior
                        Password="{Binding Auth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </interactivity:Interaction.Behaviors>
            </PasswordBox>
            <TextBlock Grid.Column="8" Grid.Row="3" Text="{x:Static localization:Strings.Priv}" Margin="0,10,0,0">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="V3" />
                                    <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <ComboBox Grid.Column="10" Grid.Row="3" ItemsSource="{Binding PrivacyProviders}"
                      SelectedItem="{Binding PrivacyProvider}" Margin="0,10,0,0">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="v3" />
                                    <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <PasswordBox Grid.Column="12" Grid.Row="3"
                         Grid.ColumnSpan="3"
                         Margin="0,10,0,0">
                <PasswordBox.Style>
                    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource DefaultPasswordBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="mah:TextBoxHelper.Watermark"
                                Value="{x:Static localization:Strings.FromProfile}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPrivEmpty}" Value="True">
                                <Setter Property="mah:TextBoxHelper.Watermark"
                                        Value="{x:Static localization:StaticStrings.ExampleSNMPPrivSecret}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Version}" Value="V3" />
                                    <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </PasswordBox.Style>
                <interactivity:Interaction.Behaviors>
                    <wpfHelpers:PasswordBoxBindingBehavior
                        Password="{Binding Priv, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </interactivity:Interaction.Behaviors>
            </PasswordBox>
        </Grid>
        <!-- ReSharper disable once Xaml.MissingGridIndex -->
        <Button Grid.Column="2"
                Command="{Binding WorkCommand}"
                IsDefault="{Binding IsRunning, Converter={StaticResource BooleanReverseConverter}}"
                IsCancel="{Binding IsRunning}">
            <Button.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                    <Setter Property="IsDefault" Value="False" />
                    <Setter Property="IsCancel" Value="False" />
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Grid.Row" Value="1" />
                    <Setter Property="VerticalAlignment" Value="Bottom" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode}" Value="Set">
                            <Setter Property="Grid.Row" Value="5" />
                            <Setter Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Version}" Value="v1" />
                                <Condition Binding="{Binding ElementName=ComboBoxHost, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=ComboBoxOid, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding IsCommunityEmpty}" Value="False" />
                                <Condition Binding="{Binding IsRunning}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Version}" Value="v2c" />
                                <Condition Binding="{Binding ElementName=ComboBoxHost, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=ComboBoxOid, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding IsCommunityEmpty}" Value="False" />
                                <Condition Binding="{Binding IsRunning}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Version}" Value="v3" />
                                <Condition Binding="{Binding Security}" Value="noAuthNoPriv" />
                                <Condition Binding="{Binding ElementName=ComboBoxHost, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=ComboBoxOid, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=TextBoxUsername, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding IsRunning}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Version}" Value="v3" />
                                <Condition Binding="{Binding Security}" Value="AuthNoPriv" />
                                <Condition Binding="{Binding ElementName=ComboBoxHost, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=ComboBoxOid, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=TextBoxUsername, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding IsAuthEmpty}" Value="False" />
                                <Condition Binding="{Binding IsRunning}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Version}" Value="v3" />
                                <Condition Binding="{Binding Security}" Value="AuthPriv" />
                                <Condition Binding="{Binding ElementName=ComboBoxHost, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=ComboBoxOid, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=TextBoxUsername, Path=(Validation.HasError)}"
                                           Value="False" />
                                <Condition Binding="{Binding IsAuthEmpty}" Value="False" />
                                <Condition Binding="{Binding IsPrivEmpty}" Value="False" />
                                <Condition Binding="{Binding IsRunning}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CancelScan}" Value="False" />
                                <Condition Binding="{Binding IsRunning}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
            <Button.Content>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle>
                        <Rectangle.Resources>
                            <VisualBrush x:Key="VisualControlPlay" Stretch="Uniform"
                                         Visual="{iconPacks:Material Kind=Play}" />
                            <VisualBrush x:Key="VisualMagnify" Stretch="Uniform"
                                         Visual="{iconPacks:Material Kind=Magnify}" />
                            <VisualBrush x:Key="VisualClose" Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                        </Rectangle.Resources>
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}" BasedOn="{StaticResource ButtonWithImageRectangle}">
                                <Setter Property="OpacityMask" Value="{StaticResource VisualMagnify}" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Mode}" Value="Set" />
                                            <Condition Binding="{Binding IsRunning}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="OpacityMask" Value="{StaticResource VisualControlPlay}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                        <Setter Property="OpacityMask" Value="{StaticResource VisualClose}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <TextBlock Grid.Column="1">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ButtonWithImageTextBlock}">
                                <Setter Property="Text" Value="{x:Static localization:Strings.Query}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                        <Setter Property="Text" Value="{x:Static localization:Strings.Cancel}" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Mode}" Value="Set" />
                                            <Condition Binding="{Binding IsRunning}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Text" Value="{x:Static localization:Strings.Send}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Button.Content>
        </Button>
        <!-- ReSharper disable once Xaml.MissingGridIndex -->
        <Grid Grid.Column="0" Grid.ColumnSpan="3" Margin="0,10,0,0">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="Row" Value="2" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsStatusMessageDisplayed}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode}" Value="Set">
                            <Setter Property="Grid.Row" Value="6" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode}" Value="Trap">
                            <Setter Property="Grid.Row" Value="6" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <mah:MetroProgressBar Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                  IsIndeterminate="True"
                                  Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
            <TextBlock Foreground="{DynamicResource MahApps.Brushes.Accent}"
                       Text="{Binding StatusMessage}"
                       Visibility="{Binding IsStatusMessageDisplayed, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                       Style="{StaticResource StatusMessageTextBlock}" />
        </Grid>
        <TextBlock Grid.Row="4" Grid.ColumnSpan="3" Grid.Column="0">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderTextBlock}">
                    <Setter Property="Text" Value="{x:Static localization:Strings.Result}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode}" Value="Set">
                            <Setter Property="Text" Value="{ x:Static localization:Strings.Data}" />
                            <Setter Property="Grid.ColumnSpan" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode}" Value="Trap">
                            <Setter Property="Text" Value="{x:Static localization:Strings.Data}" />
                            <Setter Property="Grid.ColumnSpan" Value="1" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <controls:MultiSelectDataGrid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"
                                      ItemsSource="{Binding ResultsView}"
                                      SelectedItem="{Binding SelectedResult}"
                                      Sorting="DataGrid_OnSorting"
                                      SelectedItemsList="{Binding SelectedResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <controls:MultiSelectDataGrid.Resources>
                <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static Member=localization:Strings.CopyDots}"
                              Style="{StaticResource ResourceKey=CopyMenuItem}">
                        <MenuItem Header="{x:Static Member=localization:Strings.OID}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.OID}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.Data}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.Data}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </controls:MultiSelectDataGrid.Resources>
            <controls:MultiSelectDataGrid.Style>
                <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DefaultDataGrid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode}" Value="Get">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode}" Value="Walk">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:MultiSelectDataGrid.Style>
            <controls:MultiSelectDataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource MultiRowContextMenu}" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                            Value="1">
                            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:MultiSelectDataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static localization:Strings.OID}"
                                    Binding="{Binding (network:SNMPInfo.OID)}"
                                    SortMemberPath="OID"
                                    MinWidth="200" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Data}"
                                    Binding="{Binding (network:SNMPInfo.Data)}"
                                    SortMemberPath="Data" MinWidth="300" />
            </DataGrid.Columns>
        </controls:MultiSelectDataGrid>
        <TextBox Grid.Row="5" Grid.Column="0" 
                 MinHeight="{Binding ElementName=ComboBoxOid, Path=ActualHeight}"
                 VerticalAlignment="Top"
                 TextWrapping="Wrap"
                 Text="{Binding Data}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ConsoleTextBox}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode}" Value="Set">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode}" Value="Trap">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
    </Grid>
</UserControl>