<simpleChildWindow:ChildWindow x:Class="NETworkManager.Views.ExportChildWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:wpfHelpers="clr-namespace:NETworkManager.Utilities.WPF;assembly=NETworkManager.Utilities.WPF"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:simpleChildWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             ChildWindowWidth="450"
             ChildWindowMaxHeight="500"
             ShowTitleBar="True"
             TitleBarBackground="Transparent"
             TitleBarNonActiveBackground="Transparent"
             ShowCloseButton="True"
             CloseButtonCommand="{Binding Path=CancelCommand}"
             AllowMove="True"
             TitleForeground="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}"
             CloseByEscape="False" 
             OverlayBrush="{DynamicResource ResourceKey=MahApps.Brushes.Gray.SemiTransparent}"             
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:ExportViewModel}">
    <simpleChildWindow:ChildWindow.Resources>
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
    </simpleChildWindow:ChildWindow.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.Entries}"
               Style="{StaticResource CenterTextBlock}" />
            <WrapPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButton}">
                        <Setter Property="Margin" Value="0,5,10,5" />
                    </Style>
                </WrapPanel.Resources>
                <RadioButton Content="{x:Static localization:Strings.All}" IsChecked="{Binding ExportAll}" />
                <RadioButton Content="{x:Static localization:Strings.Selected}" IsChecked="{Binding ExportSelected}"
                     Visibility="{Binding ShowExportSelected, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                     Margin="10,0,0,0" />
            </WrapPanel>
            <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Format}"
               Style="{StaticResource CenterTextBlock}" />
            <WrapPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButton}">
                        <Setter Property="Margin" Value="0,5,10,5" />
                    </Style>
                </WrapPanel.Resources>
                <RadioButton Content="{x:Static localization:StaticStrings.CSV}" IsChecked="{Binding UseCsv}"
                     Visibility="{Binding ShowCsv, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                     Margin="0,0,10,0" />
                <RadioButton Content="{x:Static localization:StaticStrings.XML}" IsChecked="{Binding UseXml}"
                     Visibility="{Binding ShowXml, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                     Margin="0,0,10,0" />
                <RadioButton Content="{x:Static localization:StaticStrings.JSON}" IsChecked="{Binding UseJson}"
                     Visibility="{Binding ShowJson, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                     Margin="0,0,10,0" />
                <RadioButton Content="{x:Static localization:StaticStrings.TXT}" IsChecked="{Binding UseTxt}"
                     Visibility="{Binding ShowTxt, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
            </WrapPanel>
            <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static localization:Strings.Path}"
               Style="{StaticResource CenterTextBlock}" />
            <TextBox Grid.Column="2" Grid.Row="4" x:Name="TextBoxExportFilePath"
             mah:TextBoxHelper.Watermark="{x:Static localization:Strings.Location}"
             Style="{StaticResource BrowseFolderTextBox}"
             mah:TextBoxHelper.ButtonCommand="{Binding BrowseFileCommand}">
                <TextBox.Text>
                    <Binding Path="FilePath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                            <validators:FilePathValidator ValidatesOnTargetUpdated="True" />
                            <validators:FolderInPathExistsValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="{x:Static localization:Strings.Export}" Command="{Binding ExportCommand}" IsDefault="True"
            Margin="0,0,10,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource HighlightedButton}">
                        <Style.Triggers>
                            <DataTrigger
                        Binding="{Binding ElementName=TextBoxExportFilePath, Path=(Validation.HasError)}"
                        Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="{x:Static localization:Strings.Cancel}" Command="{Binding CancelCommand}" IsCancel="True"
            Style="{StaticResource DefaultButton}" />
        </StackPanel>
    </Grid>
</simpleChildWindow:ChildWindow>
