<UserControl x:Class="NETworkManager.Views.WiFiView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:liveChart="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:controls="clr-namespace:NETworkManager.Controls"
             xmlns:controls2="clr-namespace:NETworkManager.Controls;assembly=NETworkManager.Controls"
             xmlns:loadingIndicators="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:utilities="clr-namespace:NETworkManager.Utilities;assembly=NETworkManager.Utilities"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:WiFiViewModel}">
    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="{Binding Path=ScanNetworksCommand}" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <converters:AutoRefreshTimeToStringConverter x:Key="AutoRefreshTimeToStringConverter" />
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:IntNotZeroToVisibilityCollapsedConverter x:Key="IntNotZeroToVisibilityCollapsedConverter" />
        <converters:IntZeroToVisibilityCollapsedConverter x:Key="IntZeroToVisibilityCollapsedConverter" />
        <converters:MACAddressToVendorConverter x:Key="MACAddressToVendorConverter" />
        <converters:TimeSpanToMillisecondConverter x:Key="TimeSpanToMillisecondConverter" />
        <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter" />
        <converters:WiFiAuthenticationTypeToHumanReadableStringConverter
            x:Key="WiFiAuthenticationTypeToHumanReadableStringConverter" />
        <converters:WiFiChannelCenterFrequencyToChannelStringConverter
            x:Key="WiFiChannelCenterFrequencyToChannelStringConverter" />
        <converters:WiFiChannelCenterFrequencyToFrequencyStringConverter
            x:Key="WiFiChannelCenterFrequencyToFrequencyStringConverter" />
        <converters:WiFiNetworkRssiInDecibelMilliwattsToSignalStrengthStringConverter
            x:Key="WiFiNetworkRssiInDecibelMilliwattsToSignalStrengthStringConverter" />
        <converters:WiFiPhyKindToStringConverter x:Key="WiFiPhyKindToStringConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SdkContractAvailable}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WiFiAdapterAccessEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid Grid.Column="0" Grid.Row="0"
                  Visibility="{Binding Path=Adapters.Count, Converter={StaticResource ResourceKey=IntNotZeroToVisibilityCollapsedConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabControl Grid.Column="0" Grid.Row="0"
                            Style="{StaticResource ResourceKey=DefaultTabControl}">
                    <TabItem Header="{x:Static Member=localization:Strings.WiFi}">
                        <Grid Margin="10">
                            <!-- Adapter / WiFi networks -->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0">
                                    <TextBlock Style="{StaticResource ResourceKey=HeaderTextBlock}"
                                               Text="{x:Static Member=localization:Strings.Interface}" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ComboBox Grid.Column="0" x:Name="ComboBoxAdapters"
                                                  ItemsSource="{Binding Path=Adapters}"
                                                  SelectedItem="{Binding Path=SelectedAdapter}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Rectangle Width="24" Height="24">
                                                            <Rectangle.Resources>
                                                                <VisualBrush x:Key="VisualUp" Stretch="Uniform"
                                                                             Visual="{iconPacks:Modern Kind=Network}" />
                                                                <VisualBrush x:Key="VisualDown" Stretch="Uniform"
                                                                             Visual="{iconPacks:Modern Kind=NetworkDisconnect}" />
                                                            </Rectangle.Resources>
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type TypeName=Rectangle}">
                                                                    <Setter Property="OpacityMask"
                                                                            Value="{StaticResource ResourceKey=VisualDown}" />
                                                                    <Setter Property="Fill"
                                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger
                                                                            Binding="{Binding Path=NetworkInterfaceInfo.IsOperational}"
                                                                            Value="True">
                                                                            <Setter Property="OpacityMask"
                                                                                Value="{StaticResource ResourceKey=VisualUp}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                        <StackPanel Margin="10,0,0,0">
                                                            <TextBlock Text="{Binding Path=NetworkInterfaceInfo.Name}" />
                                                            <TextBlock
                                                                Text="{Binding Path=NetworkInterfaceInfo.Description}"
                                                                Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                                        </StackPanel>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                            <ComboBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type TypeName=ComboBoxItem}"
                                                       BasedOn="{StaticResource ResourceKey=MahApps.Styles.ComboBoxItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ComboBoxItem">
                                                                <Grid
                                                                    Background="{TemplateBinding Property=Background}"
                                                                    RenderOptions.ClearTypeHint="{TemplateBinding Property=RenderOptions.ClearTypeHint}">
                                                                    <Border x:Name="Border"
                                                                            Background="{TemplateBinding Property=Background}"
                                                                            BorderBrush="{TemplateBinding Property=BorderBrush}"
                                                                            BorderThickness="{TemplateBinding Property=BorderThickness}"
                                                                            SnapsToDevicePixels="{TemplateBinding Property=SnapsToDevicePixels}" />
                                                                    <Grid
                                                                        Margin="{TemplateBinding Property=BorderThickness}">
                                                                        <ContentPresenter x:Name="contentPresenter"
                                                                            Margin="{TemplateBinding Property=Padding}"
                                                                            HorizontalAlignment="{TemplateBinding Property=HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding Property=VerticalContentAlignment}"
                                                                            SnapsToDevicePixels="{TemplateBinding Property=SnapsToDevicePixels}" />
                                                                    </Grid>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsSelected" Value="True">
                                                                        <Setter Property="Foreground"
                                                                            Value="{DynamicResource ResourceKey=AccentSelectedColorBrush}" />
                                                                        <Setter TargetName="Border"
                                                                            Property="Background"
                                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray9}" />
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsSelected"
                                                                                Value="False" />
                                                                            <Condition Property="IsMouseOver"
                                                                                Value="True" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter TargetName="Border"
                                                                            Property="Background"
                                                                            Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray10}" />
                                                                    </MultiTrigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter TargetName="contentPresenter"
                                                                            Property="Opacity" Value=".55" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ComboBox.ItemContainerStyle>
                                        </ComboBox>
                                        <Button Grid.Column="1" Grid.Row="0"
                                                Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                                                Height="{Binding ElementName=ComboBoxAdapters, Path=ActualHeight}"
                                                Command="{Binding Path=ReloadAdaptersCommand}" Margin="10,0,0,0">
                                            <Button.Style>
                                                <Style TargetType="{x:Type TypeName=Button}"
                                                       BasedOn="{StaticResource ResourceKey=CleanButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsNetworksLoading}"
                                                                     Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsBackgroundSearchRunning}"
                                                                     Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=AutoRefreshEnabled}"
                                                                     Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsConnecting}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <Rectangle Width="24" Height="24">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Material Kind=Refresh}" />
                                                </Rectangle.OpacityMask>
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type TypeName=Rectangle}"
                                                           BasedOn="{StaticResource ResourceKey=ReloadAnimation}">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}" />
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                                Value="True">
                                                                <Setter Property="Fill"
                                                                        Value="{DynamicResource ResourceKey=MahApps.Brushes.Gray5}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                                <Grid Grid.Row="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="10" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{x:Static Member=localization:Strings.Networks}"
                                                   Style="{StaticResource ResourceKey=HeaderTextBlock}"
                                                   Margin="0,0,0,0" />
                                        <CheckBox Grid.Column="4" Grid.Row="0"
                                                  Content="{x:Static Member=localization:Strings.GHz2dot4}"
                                                  IsChecked="{Binding Path=Show2dot4GHzNetworks}" />
                                        <CheckBox Grid.Column="6" Grid.Row="0"
                                                  Content="{x:Static Member=localization:Strings.GHz5}"
                                                  IsChecked="{Binding Path=Show5GHzNetworks}" />
                                        <TextBox Grid.Column="8" Grid.Row="0"
                                                 Width="250"
                                                 Text="{Binding Path=Search, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource ResourceKey=SearchTextBox}" />
                                    </Grid>
                                    <controls2:MultiSelectDataGrid Grid.Row="2"
                                                                   Visibility="{Binding Path=IsNetworksLoading, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
                                                                   ItemsSource="{Binding Path=NetworksView}"
                                                                   SelectedItem="{Binding Path=SelectedNetwork}"
                                                                   SelectedItemsList="{Binding Path=SelectedNetworks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <controls2:MultiSelectDataGrid.Resources>
                                            <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened"
                                                         MinWidth="150">
                                                <MenuItem Header="{x:Static Member=localization:Strings.ConnectDots}"
                                                          Command="{Binding ConnectCommand}"
                                                          Visibility="{Binding Path=SelectedNetwork.IsConnected, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                                                    <MenuItem.Icon>
                                                        <Rectangle Width="16" Height="16"
                                                                   Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiPlus}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Header="{x:Static Member=localization:Strings.Disconnect}"
                                                          Command="{Binding Path=DisconnectCommand}"
                                                          Visibility="{Binding Path=SelectedNetwork.IsConnected, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                                    <MenuItem.Icon>
                                                        <Rectangle Width="16" Height="16"
                                                                   Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=Close}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <Separator />
                                                <MenuItem Header="{x:Static Member=localization:Strings.CopyDots}"
                                                          Style="{StaticResource ResourceKey=CopyMenuItem}">
                                                    <MenuItem Header="{x:Static Member=localization:Strings.SSID}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.Ssid}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.Connected}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.IsConnected}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.Security}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.SecuritySettings.NetworkAuthenticationType, Converter={StaticResource ResourceKey=WiFiAuthenticationTypeToHumanReadableStringConverter}}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.Frequency}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.ChannelCenterFrequencyInKilohertz, Converter={StaticResource ResourceKey=WiFiChannelCenterFrequencyToFrequencyStringConverter}}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.Channel}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.ChannelCenterFrequencyInKilohertz, Converter={StaticResource ResourceKey=WiFiChannelCenterFrequencyToChannelStringConverter}}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem
                                                        Header="{x:Static Member=localization:Strings.SignalStrength}"
                                                        Command="{Binding Path=CopyDataToClipboardCommand}"
                                                        CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.NetworkRssiInDecibelMilliwatts, Converter={StaticResource ResourceKey=WiFiNetworkRssiInDecibelMilliwattsToSignalStrengthStringConverter}}"
                                                        Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem
                                                        Header="{x:Static Member=localization:Strings.Authentication}"
                                                        Command="{Binding Path=CopyDataToClipboardCommand}"
                                                        CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.SecuritySettings.NetworkAuthenticationType}"
                                                        Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem
                                                        Header="{x:Static Member=localization:Strings.Encryption}"
                                                        Command="{Binding Path=CopyDataToClipboardCommand}"
                                                        CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.SecuritySettings.NetworkEncryptionType}"
                                                        Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.BSSID}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.Bssid}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.Vendor}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.Bssid, Converter={StaticResource ResourceKey=MACAddressToVendorConverter}}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.PhyKind}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.PhyKind, Converter={StaticResource ResourceKey=WiFiPhyKindToStringConverter}}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem
                                                        Header="{x:Static Member=localization:Strings.NetworkKind}"
                                                        Command="{Binding Path=CopyDataToClipboardCommand}"
                                                        CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.NetworkKind}"
                                                        Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem
                                                        Header="{x:Static Member=localization:Strings.BeaconInterval}"
                                                        Command="{Binding Path=CopyDataToClipboardCommand}"
                                                        CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.BeaconInterval, Converter={StaticResource ResourceKey=TimeSpanToMillisecondConverter}}"
                                                        Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                    <MenuItem Header="{x:Static Member=localization:Strings.Uptime}"
                                                              Command="{Binding Path=CopyDataToClipboardCommand}"
                                                              CommandParameter="{Binding Path=SelectedNetwork.AvailableNetwork.Uptime, Converter={StaticResource ResourceKey=TimeSpanToStringConverter}}"
                                                              Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                                </MenuItem>
                                                <MenuItem Header="{x:Static Member=localization:Strings.ExportDots}"
                                                          Command="{Binding Path=ExportCommand}">
                                                    <MenuItem.Icon>
                                                        <Rectangle Width="16" Height="16"
                                                                   Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=Export}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                            <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened"
                                                         MinWidth="150">
                                                <MenuItem Header="{x:Static Member=localization:Strings.ExportDots}"
                                                          Command="{Binding Path=ExportCommand}">
                                                    <MenuItem.Icon>
                                                        <Rectangle Width="16" Height="16"
                                                                   Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=Export}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </controls2:MultiSelectDataGrid.Resources>
                                        <controls2:MultiSelectDataGrid.RowStyle>
                                            <Style TargetType="{x:Type TypeName=DataGridRow}"
                                                   BasedOn="{StaticResource ResourceKey=MahApps.Styles.DataGridRow}">
                                                <Setter Property="ContextMenu"
                                                        Value="{StaticResource ResourceKey=MultiRowContextMenu}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Path=SelectedItems.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TypeName=DataGrid}}}"
                                                        Value="1">
                                                        <Setter Property="ContextMenu"
                                                                Value="{StaticResource ResourceKey=RowContextMenu}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls2:MultiSelectDataGrid.RowStyle>
                                        <controls2:MultiSelectDataGrid.Columns>
                                            <DataGridTemplateColumn SortMemberPath="ChannelCenterFrequencyInKilohertz">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Rectangle Width="24" Height="24"
                                                                   Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                                            <Rectangle.Resources>
                                                                <VisualBrush x:Key="VisualBars4"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength4}" />
                                                                <VisualBrush x:Key="VisualBars4Lock"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength4Lock}" />
                                                                <VisualBrush x:Key="VisualBars3"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength3}" />
                                                                <VisualBrush x:Key="VisualBars3Lock"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength3Lock}" />
                                                                <VisualBrush x:Key="VisualBars2"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength2}" />
                                                                <VisualBrush x:Key="VisualBars2Lock"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength2Lock}" />
                                                                <VisualBrush x:Key="VisualBars1"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength1}" />
                                                                <VisualBrush x:Key="VisualBars1Lock"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrength1Lock}" />
                                                                <VisualBrush x:Key="VisualBars0"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrengthOutline}" />
                                                                <VisualBrush x:Key="VisualBars0Lock"
                                                                             Stretch="Uniform"
                                                                             Visual="{iconPacks:Material Kind=WifiStrengthLockOutline}" />
                                                            </Rectangle.Resources>
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type TypeName=Rectangle}">
                                                                    <Setter Property="OpacityMask"
                                                                            Value="{StaticResource ResourceKey=VisualBars0Lock}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger
                                                                            Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                            Value="1">
                                                                            <Setter Property="OpacityMask"
                                                                                Value="{StaticResource ResourceKey=VisualBars1Lock}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger
                                                                            Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                            Value="2">
                                                                            <Setter Property="OpacityMask"
                                                                                Value="{StaticResource ResourceKey=VisualBars2Lock}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger
                                                                            Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                            Value="3">
                                                                            <Setter Property="OpacityMask"
                                                                                Value="{StaticResource ResourceKey=VisualBars3Lock}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger
                                                                            Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                            Value="4">
                                                                            <Setter Property="OpacityMask"
                                                                                Value="{StaticResource ResourceKey=VisualBars4Lock}" />
                                                                        </DataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                                    Value="0" />
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType}"
                                                                                    Value="Open80211" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="OpacityMask"
                                                                                    Value="{StaticResource ResourceKey=VisualBars0}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                                    Value="1" />
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType}"
                                                                                    Value="Open80211" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="OpacityMask"
                                                                                    Value="{StaticResource ResourceKey=VisualBars1}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                                    Value="2" />
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType}"
                                                                                    Value="Open80211" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="OpacityMask"
                                                                                    Value="{StaticResource ResourceKey=VisualBars2}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                                    Value="3" />
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType}"
                                                                                    Value="Open80211" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="OpacityMask"
                                                                                    Value="{StaticResource ResourceKey=VisualBars3}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SignalBars}"
                                                                                    Value="4" />
                                                                                <Condition
                                                                                    Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType}"
                                                                                    Value="Open80211" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="OpacityMask"
                                                                                    Value="{StaticResource ResourceKey=VisualBars4}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Header="{x:Static Member=localization:Strings.SSID}"
                                                                SortMemberPath="AvailableNetwork.Ssid">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TypeName=TextBlock}">
                                                        <Setter Property="Text"
                                                                Value="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).Ssid}" />
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding Path=(network:WiFiNetworkInfo.IsHidden)}"
                                                                Value="True">
                                                                <Setter Property="Text"
                                                                        Value="{x:Static Member=localization:Strings.HiddenNetwork}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridCheckBoxColumn
                                                Header="{x:Static Member=localization:Strings.Connected}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.IsConnected)}"
                                                SortMemberPath="IsConnected" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.Security}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType, Converter={StaticResource ResourceKey=WiFiAuthenticationTypeToHumanReadableStringConverter}}"
                                                SortMemberPath="AvailableNetwork.SecuritySettings.NetworkAuthenticationType" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.Frequency}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).ChannelCenterFrequencyInKilohertz, Converter={StaticResource ResourceKey=WiFiChannelCenterFrequencyToFrequencyStringConverter}}"
                                                SortMemberPath="AvailableNetwork.ChannelCenterFrequencyInKilohertz" />
                                            <DataGridTextColumn Header="{x:Static Member=localization:Strings.Channel}"
                                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).ChannelCenterFrequencyInKilohertz, Converter={StaticResource ResourceKey=WiFiChannelCenterFrequencyToChannelStringConverter}}"
                                                                SortMemberPath="AvailableNetwork.ChannelCenterFrequencyInKilohertz" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.SignalStrength}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).NetworkRssiInDecibelMilliwatts, Converter={StaticResource ResourceKey=WiFiNetworkRssiInDecibelMilliwattsToSignalStrengthStringConverter}}"
                                                SortMemberPath="AvailableNetwork.NetworkRssiInDecibelMilliwatts" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.Authentication}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkAuthenticationType}"
                                                SortMemberPath="AvailableNetwork.SecuritySettings.NetworkAuthenticationType" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.Encryption}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).SecuritySettings.NetworkEncryptionType}"
                                                SortMemberPath="AvailableNetwork.NetworkEncryptionType" />
                                            <DataGridTextColumn Header="{x:Static Member=localization:Strings.BSSID}"
                                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).Bssid}"
                                                                SortMemberPath="AvailableNetwork.Bssid" />
                                            <DataGridTextColumn Header="{x:Static Member=localization:Strings.Vendor}"
                                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).Bssid, Converter={StaticResource ResourceKey=MACAddressToVendorConverter}}"
                                                                SortMemberPath="AvailableNetwork.Bssid" />
                                            <DataGridTextColumn Header="{x:Static Member=localization:Strings.PhyKind}"
                                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).PhyKind, Converter={StaticResource ResourceKey=WiFiPhyKindToStringConverter}}"
                                                                SortMemberPath="AvailableNetwork.PhyKind" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.NetworkKind}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).NetworkKind}"
                                                SortMemberPath="AvailableNetwork.NetworkKind" />
                                            <DataGridTextColumn
                                                Header="{x:Static Member=localization:Strings.BeaconInterval}"
                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).BeaconInterval, Converter={StaticResource ResourceKey=TimeSpanToMillisecondConverter}}"
                                                SortMemberPath="AvailableNetwork.BeaconInterval" />
                                            <DataGridTextColumn Header="{x:Static Member=localization:Strings.Uptime}"
                                                                Binding="{Binding Path=(network:WiFiNetworkInfo.AvailableNetwork).Uptime, Converter={StaticResource ResourceKey=TimeSpanToStringConverter}}"
                                                                SortMemberPath="AvailableNetwork.Uptime" />
                                        </controls2:MultiSelectDataGrid.Columns>
                                    </controls2:MultiSelectDataGrid>
                                    <TextBlock Grid.Row="2"
                                               Text="{x:Static Member=localization:Strings.NoWiFiNetworksFound}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TypeName=TextBlock}"
                                                   BasedOn="{StaticResource ResourceKey=MessageTextBlock}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsNetworksLoading}"
                                                                       Value="False" />
                                                            <Condition Binding="{Binding Path=Networks.Count}"
                                                                       Value="0" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <StackPanel Grid.Column="0" Grid.Row="2"
                                                VerticalAlignment="Center"
                                                Visibility="{Binding Path=IsNetworksLoading, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}">
                                        <loadingIndicators:LoadingIndicator IsActive="True"
                                                                            Style="{DynamicResource ResourceKey=LoadingIndicatorArcsStyle}"
                                                                            SpeedRatio="1"
                                                                            Margin="0,0,0,10" />
                                        <TextBlock
                                            Text="{x:Static Member=localization:Strings.SearchingForNetworksDots}"
                                            Style="{StaticResource ResourceKey=MessageTextBlock}" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="{x:Static Member=localization:Strings.Channels}">
                        <Grid Margin="10">
                            <!-- Channels -->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{x:Static Member=localization:Strings.GHz2dot4}"
                                           Style="{StaticResource ResourceKey=HeaderTextBlock}" />
                                <liveChart:CartesianChart Grid.Row="1" Series="{Binding Path=Radio2dot4GHzSeries}"
                                                          LegendLocation="Bottom" DisableAnimations="True">
                                    <liveChart:CartesianChart.DataTooltip>
                                        <controls:LvlChartsWiFiChannelTooltip Background="Transparent" />
                                    </liveChart:CartesianChart.DataTooltip>
                                    <liveChart:CartesianChart.AxisX>
                                        <liveChart:Axis Title="{x:Static Member=localization:Strings.Channel}"
                                                        MinValue="0"
                                                        MaxValue="16" Labels="{Binding Path=Radio2dot4GHzLabels}">
                                            <liveChart:Axis.Separator>
                                                <liveChart:Separator Step="1" StrokeThickness="0" />
                                            </liveChart:Axis.Separator>
                                        </liveChart:Axis>
                                    </liveChart:CartesianChart.AxisX>
                                    <liveChart:CartesianChart.AxisY>
                                        <liveChart:Axis Title="{x:Static Member=localization:Strings.SignalStrength}"
                                                        MaxValue="100" MinValue="0"
                                                        LabelFormatter="{Binding Path=FormattedDbm}">
                                            <liveChart:Axis.Separator>
                                                <liveChart:Separator StrokeThickness="1"
                                                                     Stroke="{DynamicResource ResourceKey=MahApps.Brushes.Gray8}"
                                                                     StrokeDashArray="10" />
                                            </liveChart:Axis.Separator>
                                            <liveChart:Axis.Sections>
                                                <liveChart:AxisSection Value="70" SectionWidth="30">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#5EA4BF" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                                <liveChart:AxisSection Value="33" SectionWidth="37">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#badc58" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                                <liveChart:AxisSection Value="20" SectionWidth="13">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#FF970D" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                                <liveChart:AxisSection Value="0" SectionWidth="20">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#A4442B" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                            </liveChart:Axis.Sections>
                                        </liveChart:Axis>
                                    </liveChart:CartesianChart.AxisY>
                                </liveChart:CartesianChart>
                                <TextBlock Grid.Row="3" Text="{x:Static Member=localization:Strings.GHz5}"
                                           Style="{StaticResource ResourceKey=HeaderTextBlock}" />
                                <liveChart:CartesianChart Grid.Row="4" Series="{Binding Path=Radio5GHzSeries}"
                                                          LegendLocation="Bottom" DisableAnimations="True">
                                    <liveChart:CartesianChart.DataTooltip>
                                        <controls:LvlChartsWiFiChannelTooltip Background="Transparent" />
                                    </liveChart:CartesianChart.DataTooltip>
                                    <liveChart:CartesianChart.AxisX>
                                        <liveChart:Axis Title="{x:Static Member=localization:Strings.Channel}"
                                                        MinValue="0"
                                                        MaxValue="32" Labels="{Binding Path=Radio5GHzLabels}">
                                            <liveChart:Axis.Separator>
                                                <liveChart:Separator Step="1" StrokeThickness="0" />
                                            </liveChart:Axis.Separator>
                                        </liveChart:Axis>
                                    </liveChart:CartesianChart.AxisX>
                                    <liveChart:CartesianChart.AxisY>
                                        <liveChart:Axis Title="{x:Static Member=localization:Strings.SignalStrength}"
                                                        MaxValue="100" MinValue="0"
                                                        LabelFormatter="{Binding Path=FormattedDbm}">
                                            <liveChart:Axis.Separator>
                                                <liveChart:Separator StrokeThickness="1"
                                                                     Stroke="{DynamicResource ResourceKey=MahApps.Brushes.Gray8}"
                                                                     StrokeDashArray="10" />
                                            </liveChart:Axis.Separator>
                                            <liveChart:Axis.Sections>
                                                <liveChart:AxisSection Value="70" SectionWidth="30">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#5EA4BF" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                                <liveChart:AxisSection Value="33" SectionWidth="37">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#badc58" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                                <liveChart:AxisSection Value="20" SectionWidth="13">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#FF970D" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                                <liveChart:AxisSection Value="0" SectionWidth="20">
                                                    <liveChart:AxisSection.Fill>
                                                        <SolidColorBrush Opacity="0.25" Color="#A4442B" />
                                                    </liveChart:AxisSection.Fill>
                                                </liveChart:AxisSection>
                                            </liveChart:Axis.Sections>
                                        </liveChart:Axis>
                                    </liveChart:CartesianChart.AxisY>
                                </liveChart:CartesianChart>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <Grid Grid.Column="0" Grid.Row="1" Margin="10,0,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <WrapPanel Grid.Column="0" Grid.Row="0"
                               Orientation="Horizontal"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center">
                        <loadingIndicators:LoadingIndicator IsActive="True"
                                                            Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                                            Style="{DynamicResource ResourceKey=LoadingIndicatorPulseStyle}"
                                                            Visibility="{Binding Path=IsBackgroundSearchRunning, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}"
                                                            Width="24" Height="24"
                                                            VerticalAlignment="Center"
                                                            SpeedRatio="1"
                                                            Margin="0,0,10,0" />
                        <TextBlock Style="{StaticResource ResourceKey=AccentTextBlock}"
                                   Visibility="{Binding Path=IsStatusMessageDisplayed, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}"
                                   Text="{Binding Path=StatusMessage}"
                                   VerticalAlignment="Center" />
                        <WrapPanel Orientation="Horizontal"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Margin="10,0,0,0"
                                   Visibility="{Binding Path=IsConnectionStatusMessageDisplayed,Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}">
                            <Rectangle Width="1"
                                       Stroke="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                       VerticalAlignment="Stretch" />
                            <loadingIndicators:LoadingIndicator IsActive="True"
                                                                Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                                                Style="{DynamicResource LoadingIndicatorPulseStyle}"
                                                                Visibility="{Binding IsConnecting, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}"
                                                                Width="24" Height="24"
                                                                VerticalAlignment="Center"
                                                                SpeedRatio="1"
                                                                Margin="10,0,0,0" />
                            <TextBlock Style="{StaticResource ResourceKey=AccentTextBlock}"
                                       Text="{Binding Path=ConnectionStatusMessage}"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0" />
                        </WrapPanel>
                    </WrapPanel>
                    <WrapPanel Grid.Column="2" Grid.Row="0"
                               Orientation="Horizontal"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Right">
                        <CheckBox IsChecked="{Binding AutoRefreshEnabled}"
                                  Content="{x:Static Member=localization:Strings.AutomaticallyUpdateEvery}"
                                  Margin="0,0,10,0">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type TypeName=CheckBox}"
                                       BasedOn="{StaticResource ResourceKey=DefaultCheckBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsNetworksLoading}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsBackgroundSearchRunning}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsConnecting}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <ComboBox ItemsSource="{Binding Path=AutoRefreshTimes}"
                                  SelectedItem="{Binding Path=SelectedAutoRefreshTime}"
                                  MinWidth="150">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type TypeName=utilities:AutoRefreshTimeInfo}">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} {1}">
                                                <Binding Path="Value" />
                                                <Binding Path="TimeUnit"
                                                         Converter="{StaticResource ResourceKey=AutoRefreshTimeToStringConverter}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </WrapPanel>
                    <Button Grid.Column="4" Grid.Row="0" Command="{Binding Path=ScanNetworksCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type TypeName=Button}"
                                   BasedOn="{StaticResource ResourceKey=ImageWithTextButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsNetworksLoading}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsBackgroundSearchRunning}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=AutoRefreshEnabled}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsConnecting}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Grid.Row="0"
                                           Style="{StaticResource ResourceKey=ButtonWithImageRectangle}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Refresh}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Grid.Row="0"
                                           Text="{x:Static Member=localization:Strings.Refresh}"
                                           Style="{StaticResource ResourceKey=ButtonWithImageTextBlock}" />
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>
            </Grid>
            <!-- Reload Adapter -->
            <StackPanel VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Visibility="{Binding Path=Adapters.Count, Converter={StaticResource ResourceKey=IntZeroToVisibilityCollapsedConverter}}">
                <TextBlock Text="{x:Static Member=localization:Strings.NoWiFiAdaptersFound}"
                           Visibility="{Binding Path=IsAdaptersLoading, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
                           Style="{StaticResource ResourceKey=MessageTextBlock}"
                           Margin="0,0,0,10" />
                <Button Command="{Binding Path=ReloadAdaptersCommand}"
                        IsEnabled="{Binding Path=IsAdaptersLoading, Converter={StaticResource ResourceKey=BooleanReverseConverter}}"
                        Visibility="{Binding Path=IsAdaptersLoading, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
                        HorizontalAlignment="Center"
                        Style="{StaticResource ResourceKey=ImageWithTextButton}">
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Grid.Row="0"
                                       Style="{StaticResource ResourceKey=ButtonWithImageRectangle}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform"
                                                 Visual="{iconPacks:Material Kind=Refresh}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Grid.Row="0"
                                       Text="{x:Static Member=localization:Strings.Refresh}"
                                       Style="{StaticResource ResourceKey=ButtonWithImageTextBlock}" />
                        </Grid>
                    </Button.Content>
                </Button>
                <StackPanel VerticalAlignment="Center"
                            Visibility="{Binding Path=IsAdaptersLoading, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}">
                    <loadingIndicators:LoadingIndicator IsActive="True"
                                                        Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                                        Style="{DynamicResource ResourceKey=LoadingIndicatorArcsStyle}"
                                                        SpeedRatio="1"
                                                        Margin="0,0,0,10" />
                    <TextBlock Text="{x:Static Member=localization:Strings.SearchingWiFiAdaptersDots}"
                               Style="{StaticResource ResourceKey=MessageTextBlock}" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <!-- SDK.Contracts not found -->
        <Grid
            Visibility="{Binding Path=SdkContractAvailable, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
            Margin="10">
            <TextBlock Text="{x:Static Member=localization:Strings.MicrosoftWindowsSDKContractsIsNotAvailable}"
                       Style="{StaticResource ResourceKey=MessageTextBlock}" />
        </Grid>
        <!-- WiFi adapter access disabled -->
        <StackPanel VerticalAlignment="Center" Margin="10">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=SdkContractAvailable}" Value="True" />
                                <Condition Binding="{Binding Path=WiFiAdapterAccessEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="{x:Static localization:Strings.WiFiAccessNotAvailableMessage}"
                       Style="{StaticResource MessageTextBlock}" Margin="0,0,0,10" />
            <Button HorizontalAlignment="Center" Command="{Binding Path=OpenSettingsCommand}"
                    Style="{StaticResource ImageWithTextButton}">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Cog}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.OpenSettings}"
                                   Style="{StaticResource ButtonWithImageTextBlock}" />
                    </Grid>
                </Button.Content>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>