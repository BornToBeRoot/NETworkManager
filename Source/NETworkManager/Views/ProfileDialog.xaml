<!--
    Note: The validation is performed several times. In the "Save" button 
    to enable/disable it AND in the list view (rectangle) to indicate that 
    a page has an error.
-->
<UserControl x:Class="NETworkManager.Views.ProfileDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:wpfHelpers="clr-namespace:NETworkManager.Utilities.WPF;assembly=NETworkManager.Utilities.WPF"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:profiles="clr-namespace:NETworkManager.Profiles;assembly=NETworkManager.Profiles"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             d:DataContext="{d:DesignInstance viewModels:ProfileViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:RemoteDesktopAudioCaptureRedirectionModeToStringConverter
            x:Key="RemoteDesktopAudioCaptureRedirectionModeToStringConverter" />
        <converters:RemoteDesktopAudioRedirectionModeToStringConverter
            x:Key="RemoteDesktopAudioRedirectionModeToStringConverter" />
        <converters:RemoteDesktopKeyboardHookModeToStringConverter
            x:Key="RemoteDesktopKeyboardHookModeToStringConverter" />
        <converters:RemoteDesktopGatewayServerLogonMethodToStringConverter
            x:Key="RemoteDesktopGatewayServerLogonMethodToStringConverter" />
        <converters:RemoteDesktopNetworkConnectionTypeToStringConverter
            x:Key="RemoteDesktopNetworkConnectionTypeToStringConverter" />
        <converters:ProfileNameToTranslatedStringConverter x:Key="ProfileNameToTranslatedStringConverter" />
        <converters:PuTTYLogModeToStringConverter x:Key="PuTTYLogModeToStringConverter" />
        <converters:StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter
            x:Key="StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter" />
    </UserControl.Resources>
    <Grid Margin="0,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="0,0,1,0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}">
                <ScrollViewer ManipulationBoundaryFeedback="ScrollViewer_ManipulationBoundaryFeedback"
                              Margin="0,0,10,0">
                    <ListBox x:Name="ListBoxViews" ItemsSource="{Binding ProfileViews}" Margin="0,0,10,0">
                        <ListBox.Resources>
                            <wpfHelpers:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Width="20" Height="20" Margin="10,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{Binding Icon}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding (profiles:ProfileViewInfo.Name), Converter={StaticResource ProfileNameToTranslatedStringConverter}}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground"
                                                        Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Setter Property="Margin" Value="0,0,10,0" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="FontSize" Value="14" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="0"
                                               ToolTip="{x:Static localization:Strings.ErrorMessage_TabPageHasError}">
                                        <Rectangle.Resources>
                                            <Style TargetType="{x:Type ToolTip}"
                                                   BasedOn="{StaticResource ErrorToolTip}" />
                                        </Rectangle.Resources>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}"
                                                   BasedOn="{StaticResource ErrorImageRectangle}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <!-- General -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.General}" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxName, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.General}" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.General}" />
                                                            <Condition
                                                                Binding="{Binding ElementName=ComboBoxGroup, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Network Interface -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_EnableStaticIPAddress, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxNetworkInterfaceIPAddress, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_EnableStaticIPAddress, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=ComboBoxNetworkInterfaceSubnetmask, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_EnableStaticIPAddress, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxNetworkInterfaceGateway, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_EnableStaticDNS, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxNetworkInterfacePrimaryDNSServer, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.NetworkInterface_EnableStaticDNS, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxNetworkInterfaceSecondaryDNSServer, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- IP Scanner -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.IPScanner}" />
                                                            <Condition
                                                                Binding="{Binding Data.IPScanner_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.IPScanner_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxIPScannerIPRange, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Port Scanner -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PortScanner}" />
                                                            <Condition
                                                                Binding="{Binding Data.PortScanner_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PortScanner_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPortScannerHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PortScanner}" />
                                                            <Condition
                                                                Binding="{Binding Data.PortScanner_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPortScannerPorts, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Ping Monitor -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PingMonitor}" />
                                                            <Condition
                                                                Binding="{Binding Data.PingMonitor_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PingMonitor_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPingMonitorHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Traceroute -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.Traceroute}" />
                                                            <Condition
                                                                Binding="{Binding Data.Traceroute_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.Traceroute_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxTracerouteHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- DNS Lookup -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.DNSLookup}" />
                                                            <Condition
                                                                Binding="{Binding Data.DNSLookup_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.DNSLookup_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxDNSLookupHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Remote Desktop -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_UseCredentials, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopUsername, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_UseCredentials, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopDomain, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_UseCredentials, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_IsPasswordEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_OverridePort, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopPort, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerHostname, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_GatewayServerLogonMethod, Source={StaticResource BindingProxy}}"
                                                                Value="Userpass" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_UseGatewayServerCredentials, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerUsername, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_GatewayServerLogonMethod, Source={StaticResource BindingProxy}}"
                                                                Value="Userpass" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_UseGatewayServerCredentials, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerDomain, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_GatewayServerLogonMethod, Source={StaticResource BindingProxy}}"
                                                                Value="Userpass" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_UseGatewayServerCredentials, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.RemoteDesktop_IsGatewayServerPasswordEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- PowerShell -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PowerShell}" />
                                                            <Condition
                                                                Binding="{Binding Data.PowerShell_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PowerShell_EnableRemoteConsole, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PowerShell_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPowerShellHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- PuTTY -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYSerialLine, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_OverridePortOrBaud, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYPort, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_OverridePortOrBaud, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYBaud, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_OverrideUsername, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYUsername, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_OverridePrivateKeyFile, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYPrivateKeyFile, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_OverrideLogPath, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYLogPath, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.PuTTY_OverrideLogFileName, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxPuTTYLogFileName, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- AWS Session Manager -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.AWSSessionManager}" />
                                                            <Condition
                                                                Binding="{Binding Data.AWSSessionManager_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxAwsSessionManagerInstanceId, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.AWSSessionManager}" />
                                                            <Condition
                                                                Binding="{Binding Data.AWSSessionManager_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.AWSSessionManager_OverrideProfile, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxAwsSessionManagerProfile, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.AWSSessionManager}" />
                                                            <Condition
                                                                Binding="{Binding Data.AWSSessionManager_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.AWSSessionManager_OverrideRegion, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxAwsSessionManagerRegion, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- TigerVNC -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.TigerVNC}" />
                                                            <Condition
                                                                Binding="{Binding Data.TigerVNC_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.TigerVNC_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxTigerVncHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.TigerVNC}" />
                                                            <Condition
                                                                Binding="{Binding Data.TigerVNC_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.TigerVNC_OverridePort, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxTigerVncPort, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- WebConsole -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.WebConsole}" />
                                                            <Condition
                                                                Binding="{Binding Data.WebConsole_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxWebConsoleUrl, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- SNMP -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxSnmpHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideOIDAndMode, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxSnmpoid, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}"
                                                                Value="V1" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_IsCommunityEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}"
                                                                Value="V2C" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_IsCommunityEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}"
                                                                Value="V3" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxSnmpUsername, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}"
                                                                Value="V3" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Security, Source={StaticResource BindingProxy}}"
                                                                Value="AuthNoPriv" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_IsAuthEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}"
                                                                Value="V3" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Security, Source={StaticResource BindingProxy}}"
                                                                Value="AuthPriv" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_IsAuthEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}"
                                                                Value="V3" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_Security, Source={StaticResource BindingProxy}}"
                                                                Value="AuthPriv" />
                                                            <Condition
                                                                Binding="{Binding Data.SNMP_IsPrivEmpty, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Wake on LAN -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.WakeOnLAN}" />
                                                            <Condition
                                                                Binding="{Binding Data.WakeOnLAN_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxWakeOnLanMacAddress, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding Data.WakeOnLAN_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.WakeOnLAN}" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxWakeOnLanBroadcast, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- Whois -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.Whois}" />
                                                            <Condition
                                                                Binding="{Binding Data.Whois_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.Whois_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxWhoisDomain, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!-- IP Geolocation -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                Value="{x:Static profiles:ProfileName.IPGeolocation}" />
                                                            <Condition
                                                                Binding="{Binding Data.IPGeolocation_Enabled, Source={StaticResource BindingProxy}}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding Data.IPGeolocation_InheritHost, Source={StaticResource BindingProxy}}"
                                                                Value="False" />
                                                            <Condition
                                                                Binding="{Binding ElementName=TextBoxIPGeolocationHost, Path=(Validation.HasError)}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <CheckBox Grid.Column="5">
                                        <CheckBox.Style>
                                            <Style TargetType="{x:Type CheckBox}"
                                                   BasedOn="{StaticResource DefaultCheckBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.General}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.NetworkInterface}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.NetworkInterface_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.IPScanner}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.IPScanner_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.PortScanner}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.PortScanner_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.PingMonitor}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.PingMonitor_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.Traceroute}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.Traceroute_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.DNSLookup}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.DNSLookup_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.RemoteDesktop}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.RemoteDesktop_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.PowerShell}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.PowerShell_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.PuTTY}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.PuTTY_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.AWSSessionManager}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.AWSSessionManager_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.TigerVNC}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.TigerVNC_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.WebConsole}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.WebConsole_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.SNMP}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.SNMP_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.WakeOnLAN}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.WakeOnLAN_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.Whois}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.Whois_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                                 Value="{x:Static profiles:ProfileName.IPGeolocation}">
                                                        <Setter Property="IsChecked"
                                                                Value="{Binding DataContext.IPGeolocation_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Background="Transparent" BorderThickness="0">
                                                <Grid MinHeight="30">
                                                    <ContentPresenter />
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <!-- BUGFIX This has to be set, to enable mouse wheel scrolling -->
                        <ListBox.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <!-- /BUGFIX-->
                    </ListBox>
                </ScrollViewer>
            </Border>
            <TabControl Grid.Column="1" Margin="10"
                        SelectedIndex="{Binding ElementName=ListBoxViews, Path=SelectedIndex}">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ProfileTabItem}" />
                </TabControl.Resources>
                <TabItem Header="{x:Static localization:Strings.General}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.Name}" />
                                <TextBox x:Name="TextBoxName" GotFocus="TextBoxName_OnGotFocus"
                                         TextChanged="TextBoxName_OnTextChanged" Grid.Column="2" Grid.Row="0"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleProfileName}">
                                    <TextBox.Text>
                                        <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxHost" Grid.Column="2" Grid.Row="2"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Text>
                                        <Binding Path="Host" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPAddressOrHostnameValidator
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Grid.Column="3" Grid.Row="2" Command="{Binding ResolveHostCommand}"
                                        ToolTip="{x:Static localization:Strings.ResolveIPAddressForThisHost}"
                                        IsEnabled="{Binding Host, Converter={StaticResource StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter}}"
                                        Margin="10,0,0,0">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsResolveHostnameRunning}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ShowCouldNotResolveHostnameWarning}"
                                                             Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Rectangle Width="24" Height="24">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=SearchWeb}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Button>
                                <mah:ProgressRing Grid.Column="3" Grid.Row="2" Width="24" Height="24" Margin="10,0,0,0"
                                                  Visibility="{Binding IsResolveHostnameRunning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="2"
                                           ToolTip="{x:Static localization:Strings.WarningMessage_CouldNotResolveIPAddressForHostname}"
                                           Visibility="{Binding ShowCouldNotResolveHostnameWarning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                           Style="{StaticResource WarnImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource WarnToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock Grid.Column="0" Grid.Row="4" 
                                           Text="{x:Static Member=localization:Strings.Description}" 
                                           Margin="0,5,0,0"
                                           VerticalAlignment="Top" />
                                <TextBox Grid.Column="2" Grid.Row="4"
                                         AcceptsReturn="True"
                                         TextWrapping="Wrap"
                                         VerticalScrollBarVisibility="Auto"
                                         VerticalContentAlignment="Top"
                                         Height="150"
                                         Text="{Binding Path=Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         mah:TextBoxHelper.Watermark="{x:Static Member=localization:Strings.ExampleProfileDescription}" />
                                <TextBlock Grid.Column="0" Grid.Row="6" Text="{x:Static localization:Strings.Group}" />
                                <ComboBox x:Name="ComboBoxGroup" Grid.Column="2" Grid.Row="6"
                                          Style="{StaticResource EditableComboBox}" ItemsSource="{Binding Groups}"
                                          mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleGroupServers}">
                                    <ComboBox.Text>
                                        <Binding Path="Group" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:GroupNameValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                                <TextBlock Grid.Column="0" Grid.Row="8" Text="{x:Static Member=localization:Strings.Tags}" />
                                <TextBox Grid.Column="2" Grid.Row="8"
                                         Text="{Binding Path=Tags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         mah:TextBoxHelper.Watermark="{x:Static Member=localization:StaticStrings.ExampleTags}" />
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="6"
                                           ToolTip="{x:Static Member=localization:Strings.HelpMessage_Tags}"
                                           Style="{StaticResource ResourceKey=HelpImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type TypeName=ToolTip}" BasedOn="{StaticResource ResourceKey=HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static Member=localization:Strings.NetworkInterface}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding NetworkInterface_Enabled}">
                            <RadioButton x:Name="RadioButtonEnableDynamicIPAddress"
                                         GroupName="NetworkInterface_IPAddressConfig"
                                         IsChecked="{Binding NetworkInterface_EnableDynamicIPAddress}"
                                         Content="{x:Static localization:Strings.ObtainAnIPAddressAutomatically}"
                                         Margin="0,0,0,10" />
                            <RadioButton x:Name="RadioButtonEnableStaticIPAddress"
                                         GroupName="NetworkInterface_IPAddressConfig"
                                         IsChecked="{Binding NetworkInterface_EnableStaticIPAddress}"
                                         Content="{x:Static localization:Strings.UseTheFollowingIPAddress}"
                                         Margin="0,0,0,10" />
                            <Grid IsEnabled="{Binding NetworkInterface_EnableStaticIPAddress}" Margin="0,0,0,10">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.IPv4Address}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <TextBox x:Name="TextBoxNetworkInterfaceIPAddress" Grid.Column="2" Grid.Row="0"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Address}">
                                    <TextBox.Text>
                                        <Binding Path="NetworkInterface_IPAddress" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="2"
                                           Text="{x:Static localization:Strings.SubnetMask}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <ComboBox x:Name="ComboBoxNetworkInterfaceSubnetmask" Grid.Column="2" Grid.Row="2"
                                          Style="{StaticResource EditableComboBox}"
                                          mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4SubnetmaskIPv4CIDR}"
                                          ItemsSource="{x:Static network:Subnetmask.List}">
                                    <ComboBox.Text>
                                        <Binding Path="NetworkInterface_Subnetmask" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPv4SubnetmaskOrCIDRValidator
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                                <TextBlock Grid.Column="0" Grid.Row="4"
                                           Text="{x:Static localization:Strings.DefaultGateway}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <TextBox x:Name="TextBoxNetworkInterfaceGateway" Grid.Column="2" Grid.Row="4"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Gateway}">
                                    <TextBox.Text>
                                        <Binding Path="NetworkInterface_Gateway" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrIPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                            <RadioButton x:Name="RadioButtonEnableDynamicDNS"
                                         GroupName="NetworkInterface_DNSServerConfig"
                                         Content="{x:Static localization:Strings.ObtainDNSServerAddressAutomatically}"
                                         IsChecked="{Binding NetworkInterface_EnableDynamicDNS}" Margin="0,0,0,10"
                                         IsEnabled="{Binding NetworkInterface_EnableDynamicIPAddress}" />
                            <RadioButton x:Name="RadioButtonEnableStaticDNS"
                                         GroupName="NetworkInterface_DNSServerConfig"
                                         Content="{x:Static localization:Strings.UseTheFollowingDNSServerAddresses}"
                                         IsChecked="{Binding NetworkInterface_EnableStaticDNS}" Margin="0,0,0,10" />
                            <Grid IsEnabled="{Binding NetworkInterface_EnableStaticDNS}">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.PrimaryDNSServer}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <TextBox x:Name="TextBoxNetworkInterfacePrimaryDNSServer" Grid.Column="2" Grid.Row="0"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Gateway}">
                                    <TextBox.Text>
                                        <Binding Path="NetworkInterface_PrimaryDNSServer" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrIPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="2"
                                           Text="{x:Static localization:Strings.SecondaryDNSServer}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <TextBox x:Name="TextBoxNetworkInterfaceSecondaryDNSServer" Grid.Column="2"
                                         Grid.Row="2"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4DNSServer}">
                                    <TextBox.Text>
                                        <Binding Path="NetworkInterface_SecondaryDNSServer" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrIPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.IPScanner}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding IPScanner_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding IPScanner_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxIPScannerIPRange" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding IPScanner_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostRange}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IPScanner_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IPScanner_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="IPScanner_HostOrIPRange" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:MultipleHostsRangeValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PortScanner}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PortScanner_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding PortScanner_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxPortScannerHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding PortScanner_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostRange}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PortScanner_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PortScanner_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="PortScanner_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:MultipleHostsRangeValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static localization:Strings.Ports}" />
                                <TextBox x:Name="TextBoxPortScannerPorts" Grid.Column="2" Grid.Row="4"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePortScanRange}">
                                    <TextBox.Text>
                                        <Binding Path="PortScanner_Ports" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrPortRangeValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PingMonitor}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PingMonitor_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding PingMonitor_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxPingMonitorHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding PingMonitor_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostRange}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PingMonitor_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PingMonitor_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="PingMonitor_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:MultipleHostsRangeValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.Traceroute}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding Traceroute_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding Traceroute_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxTracerouteHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding Traceroute_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Traceroute_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Traceroute_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Traceroute_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.DNSLookup}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding DNSLookup_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding DNSLookup_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxDNSLookupHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding DNSLookup_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameAndOrIPAddress}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DNSLookup_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DNSLookup_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="DNSLookup_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.RemoteDesktop}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding RemoteDesktop_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding RemoteDesktop_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxRemoteDesktopHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding RemoteDesktop_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RemoteDesktop_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RemoteDesktop_InheritHost}"
                                                             Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="RemoteDesktop_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="4"
                                           Text="{x:Static localization:Strings.UseCredentials}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="4" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_UseCredentials}" />
                                <TextBlock Grid.Column="0" Grid.Row="6" Text="{x:Static localization:Strings.Username}" />
                                <TextBox Grid.Column="2" Grid.Row="6" x:Name="TextBoxRemoteDesktopUsername"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                                         IsEnabled="{Binding RemoteDesktop_UseCredentials}"
                                         Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_Username" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="8" Text="{x:Static localization:Strings.Domain}" />
                                <TextBox Grid.Column="2" Grid.Row="8" x:Name="TextBoxRemoteDesktopDomain"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}"
                                         IsEnabled="{Binding RemoteDesktop_UseCredentials}"
                                         Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_Domain" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrWindowsDomainValidator
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="10"
                                           Text="{x:Static localization:Strings.Password}" />
                                <PasswordBox Grid.Column="2" Grid.Row="10" x:Name="PasswordBoxRemoteDesktopPassword"
                                             IsEnabled="{Binding RemoteDesktop_UseCredentials}">
                                    <PasswordBox.Style>
                                        <Style TargetType="{x:Type PasswordBox}"
                                               BasedOn="{StaticResource DefaultPasswordBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark"
                                                    Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RemoteDesktop_IsPasswordEmpty}"
                                                             Value="true">
                                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                                            Value="{x:Static localization:StaticStrings.ExamplePassword}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior
                                            Password="{Binding RemoteDesktop_Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="10"
                                           ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                           Visibility="{Binding IsProfileFileEncrypted, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                           Style="{StaticResource WarnImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock Grid.Column="0" Grid.Row="12" Grid.ColumnSpan="4"
                                           Text="{x:Static localization:Strings.OverrideDefaultSettings}"
                                           Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0" />
                                <Separator Grid.Column="0" Grid.Row="14" Grid.ColumnSpan="4"
                                           Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="16" VerticalAlignment="Top"
                                          Content="{x:Static localization:Strings.Display}"
                                          IsChecked="{Binding RemoteDesktop_OverrideDisplay}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <StackPanel Grid.Column="2" Grid.Row="16"
                                            IsEnabled="{Binding RemoteDesktop_OverrideDisplay}">
                                    <RadioButton x:Name="RadioButtonAdjustScreenAutomatically"
                                                 Content="{x:Static localization:Strings.AdjustScreenAutomatically}"
                                                 IsChecked="{Binding RemoteDesktop_AdjustScreenAutomatically}"
                                                 Margin="0,0,0,10" />
                                    <RadioButton x:Name="RadioButtonUseCurrentViewSize"
                                                 Content="{x:Static localization:Strings.UseCurrentViewSize}"
                                                 IsChecked="{Binding RemoteDesktop_UseCurrentViewSize}"
                                                 Margin="0,0,0,10" />
                                    <RadioButton x:Name="RadioButtonFixedScreenSize"
                                                 Content="{x:Static localization:Strings.FixedScreenSize}"
                                                 IsChecked="{Binding RemoteDesktop_UseFixedScreenSize}"
                                                 Margin="0,0,0,10" />
                                    <GroupBox x:Name="GroupBoxFixedScreenSize"
                                              Style="{StaticResource WithoutHeaderGroupBox}"
                                              IsEnabled="{Binding RemoteDesktop_UseFixedScreenSize}" Margin="25,0,0,10">
                                        <StackPanel>
                                            <TextBlock Text="{x:Static localization:Strings.SelectAScreenResolution}"
                                                       Style="{DynamicResource DefaultTextBlock}" Margin="0,0,0,10" />
                                            <ComboBox ItemsSource="{Binding RemoteDesktop_ScreenResolutions}"
                                                      SelectedItem="{Binding RemoteDesktop_SelectedScreenResolution}" />
                                        </StackPanel>
                                    </GroupBox>
                                    <RadioButton x:Name="RadioButtonCustomScreenSize"
                                                 Content="{x:Static localization:Strings.CustomScreenSize}"
                                                 IsChecked="{Binding RemoteDesktop_UseCustomScreenSize}"
                                                 Margin="0,0,0,10" />
                                    <GroupBox Style="{StaticResource WithoutHeaderGroupBox}"
                                              Width="{Binding ElementName=GroupBoxFixedScreenSize, Path=ActualWidth}"
                                              IsEnabled="{Binding RemoteDesktop_UseCustomScreenSize}"
                                              Margin="25,0,0,10">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0"
                                                       Text="{x:Static localization:Strings.Width}"
                                                       Style="{StaticResource CenterTextBlock}" />
                                            <TextBox Grid.Column="2" Grid.Row="0">
                                                <TextBox.Text>
                                                    <Binding Path="RemoteDesktop_CustomScreenWidth" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:Int32Validator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock Grid.Column="0" Grid.Row="2"
                                                       Text="{x:Static localization:Strings.Height}"
                                                       Style="{StaticResource CenterTextBlock}" />
                                            <TextBox Grid.Column="2" Grid.Row="2">
                                                <TextBox.Text>
                                                    <Binding Path="RemoteDesktop_CustomScreenHeight" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:Int32Validator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                                <CheckBox Grid.Column="0" Grid.Row="18"
                                          Content="{x:Static localization:Strings.ColorDepthBit}"
                                          IsChecked="{Binding RemoteDesktop_OverrideColorDepth}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="18"
                                          ItemsSource="{Binding RemoteDesktop_ColorDepths}"
                                          SelectedItem="{Binding RemoteDesktop_SelectedColorDepth}"
                                          IsEnabled="{Binding RemoteDesktop_OverrideColorDepth}" />
                                <CheckBox Grid.Column="0" Grid.Row="20" Content="{x:Static localization:Strings.Port}"
                                          IsChecked="{Binding RemoteDesktop_OverridePort}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="20" x:Name="TextBoxRemoteDesktopPort"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort3389}"
                                         IsEnabled="{Binding RemoteDesktop_OverridePort}"
                                         Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_Port" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="22"
                                          Content="{x:Static localization:Strings.CredentialSecuritySupportProvider}"
                                          IsChecked="{Binding RemoteDesktop_OverrideCredSspSupport}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="22" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_EnableCredSspSupport}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideCredSspSupport}" />
                                <CheckBox Grid.Column="0" Grid.Row="24"
                                          Content="{x:Static localization:Strings.AuthenticationLevel}"
                                          IsChecked="{Binding RemoteDesktop_OverrideAuthenticationLevel}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:NumericUpDown Grid.Column="2" Grid.Row="24"
                                                   Value="{Binding RemoteDesktop_AuthenticationLevel}" Maximum="3"
                                                   Minimum="0" Interval="1"
                                                   IsEnabled="{Binding RemoteDesktop_OverrideAuthenticationLevel}" />
                                <Rectangle Grid.Column="3" Grid.Row="24" Width="24" Height="24"
                                           ToolTip="{x:Static localization:Strings.HelpMessage_RDPAuthenticationLevel}"
                                           Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox Grid.Column="0" Grid.Row="26"
                                          Content="{x:Static localization:Strings.EnableGatewayServer}"
                                          IsChecked="{Binding RemoteDesktop_OverrideGatewayServer}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="26" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_EnableGatewayServer}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideGatewayServer}" />
                                <TextBlock Grid.Column="0" Grid.Row="28"
                                           Text="{x:Static localization:Strings.ServerName}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <TextBox x:Name="TextBoxRemoteDesktopGatewayServerHostname" Grid.Column="2"
                                         Grid.Row="28"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleGatewayDomain}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_OverrideGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_GatewayServerHostname" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:RemoteDesktopHostnameAndPortValidator
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="30"
                                           Text="{x:Static localization:Strings.BypassForLocalAddresses}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="30" Content="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_GatewayServerBypassLocalAddresses}">
                                    <mah:ToggleSwitch.Style>
                                        <Style TargetType="{x:Type mah:ToggleSwitch}"
                                               BasedOn="{StaticResource DefaultToggleSwitch}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_OverrideGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:ToggleSwitch.Style>
                                </mah:ToggleSwitch>
                                <TextBlock Grid.Column="0" Grid.Row="32"
                                           Text="{x:Static localization:Strings.LogonMethod}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <ComboBox Grid.Column="2" Grid.Row="32"
                                          ItemsSource="{Binding RemoteDesktop_GatewayServerLogonMethods}"
                                          SelectedItem="{Binding RemoteDesktop_GatewayServerLogonMethod}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}"
                                               BasedOn="{StaticResource DefaultComboBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_OverrideGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Converter={StaticResource RemoteDesktopGatewayServerLogonMethodToStringConverter}}"
                                                Style="{StaticResource DefaultTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Grid.Column="0" Grid.Row="34"
                                           Text="{x:Static localization:Strings.ShareGatewayCredentialsWithRemoteComputer}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="34" Content="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_GatewayServerShareCredentialsWithRemoteComputer}">
                                    <mah:ToggleSwitch.Style>
                                        <Style TargetType="{x:Type mah:ToggleSwitch}"
                                               BasedOn="{StaticResource DefaultToggleSwitch}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_OverrideGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:ToggleSwitch.Style>
                                </mah:ToggleSwitch>
                                <TextBlock Grid.Column="0" Grid.Row="36"
                                           Text="{x:Static localization:Strings.UseGatewayCredentials}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="36" Content="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_UseGatewayServerCredentials}">
                                    <mah:ToggleSwitch.Style>
                                        <Style TargetType="{x:Type mah:ToggleSwitch}"
                                               BasedOn="{StaticResource DefaultToggleSwitch}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_OverrideGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                                            Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:ToggleSwitch.Style>
                                </mah:ToggleSwitch>
                                <TextBlock Grid.Column="0" Grid.Row="38"
                                           Text="{x:Static localization:Strings.Username}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <TextBox Grid.Column="2" Grid.Row="38"
                                         x:Name="TextBoxRemoteDesktopGatewayServerUsername"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                                            Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_GatewayServerUsername" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="40" Text="{x:Static localization:Strings.Domain}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <TextBox Grid.Column="2" Grid.Row="40" x:Name="TextBoxRemoteDesktopGatewayServerDomain"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                                            Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_GatewayServerDomain" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrWindowsDomainValidator
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="42"
                                           Text="{x:Static localization:Strings.Password}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <PasswordBox Grid.Column="2" Grid.Row="42"
                                             x:Name="PasswordBoxRemoteDesktopGatewayServerPassword">
                                    <PasswordBox.Style>
                                        <Style TargetType="{x:Type PasswordBox}"
                                               BasedOn="{StaticResource DefaultPasswordBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="mah:TextBoxHelper.Watermark"
                                                    Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RemoteDesktop_IsGatewayServerPasswordEmpty}"
                                                    Value="true">
                                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                                            Value="{x:Static localization:StaticStrings.ExamplePassword}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_EnableGatewayServer}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                                            Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior
                                            Password="{Binding RemoteDesktop_GatewayServerPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="42"
                                           ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                           Visibility="{Binding IsProfileFileEncrypted, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                           Style="{StaticResource WarnImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox Grid.Column="0" Grid.Row="44"
                                          Content="{x:Static localization:Strings.RemoteAudioPlayback}"
                                          IsChecked="{Binding RemoteDesktop_OverrideAudioRedirectionMode}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="44"
                                          ItemsSource="{Binding RemoteDesktop_AudioRedirectionModes}"
                                          SelectedItem="{Binding RemoteDesktop_AudioRedirectionMode}"
                                          IsEnabled="{Binding RemoteDesktop_OverrideAudioRedirectionMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Converter={StaticResource RemoteDesktopAudioRedirectionModeToStringConverter}}"
                                                Style="{StaticResource DefaultTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="46"
                                          Content="{x:Static localization:Strings.RemoteAudioRecording}"
                                          IsChecked="{Binding RemoteDesktop_OverrideAudioCaptureRedirectionMode}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="46"
                                          ItemsSource="{Binding RemoteDesktop_AudioCaptureRedirectionModes}"
                                          SelectedItem="{Binding RemoteDesktop_AudioCaptureRedirectionMode}"
                                          IsEnabled="{Binding RemoteDesktop_OverrideAudioCaptureRedirectionMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Converter={StaticResource RemoteDesktopAudioCaptureRedirectionModeToStringConverter}}"
                                                Style="{StaticResource DefaultTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="48"
                                          Content="{x:Static localization:Strings.ApplyWindowsKeyCombinations}"
                                          IsChecked="{Binding RemoteDesktop_OverrideApplyWindowsKeyCombinations}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="48"
                                          ItemsSource="{Binding RemoteDesktop_KeyboardHookModes}"
                                          SelectedItem="{Binding RemoteDesktop_KeyboardHookMode}"
                                          IsEnabled="{Binding RemoteDesktop_OverrideApplyWindowsKeyCombinations}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Converter={StaticResource RemoteDesktopKeyboardHookModeToStringConverter}}"
                                                Style="{StaticResource DefaultTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="50"
                                          Content="{x:Static localization:Strings.RedirectClipboard}"
                                          IsChecked="{Binding RemoteDesktop_OverrideRedirectClipboard}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="50" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_RedirectClipboard}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideRedirectClipboard}" />
                                <CheckBox Grid.Column="0" Grid.Row="52"
                                          Content="{x:Static localization:Strings.RedirectDevices}"
                                          IsChecked="{Binding RemoteDesktop_OverrideRedirectDevices}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="52" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_RedirectDevices}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideRedirectDevices}" />
                                <CheckBox Grid.Column="0" Grid.Row="54"
                                          Content="{x:Static localization:Strings.RedirectDrives}"
                                          IsChecked="{Binding RemoteDesktop_OverrideRedirectDrives}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="54" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_RedirectDrives}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideRedirectDrives}" />
                                <CheckBox Grid.Column="0" Grid.Row="56"
                                          Content="{x:Static localization:Strings.RedirectPorts}"
                                          IsChecked="{Binding RemoteDesktop_OverrideRedirectPorts}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="56" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_RedirectPorts}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideRedirectPorts}" />
                                <CheckBox Grid.Column="0" Grid.Row="58"
                                          Content="{x:Static localization:Strings.RedirectSmartcards}"
                                          IsChecked="{Binding RemoteDesktop_OverrideRedirectSmartcards}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="58" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_RedirectSmartCards}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideRedirectSmartcards}" />
                                <CheckBox Grid.Column="0" Grid.Row="60"
                                          Content="{x:Static localization:Strings.RedirectPrinters}"
                                          IsChecked="{Binding RemoteDesktop_OverrideRedirectPrinters}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="60" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_RedirectPrinters}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideRedirectPrinters}" />
                                <CheckBox Grid.Column="0" Grid.Row="62"
                                          Content="{x:Static localization:Strings.PersistentBitmapCaching}"
                                          IsChecked="{Binding RemoteDesktop_OverridePersistentBitmapCaching}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="62" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_PersistentBitmapCaching}"
                                                  IsEnabled="{Binding RemoteDesktop_OverridePersistentBitmapCaching}" />
                                <CheckBox Grid.Column="0" Grid.Row="64"
                                          Content="{x:Static localization:Strings.ReconnectIfTheConnectionIsDropped}"
                                          IsChecked="{Binding RemoteDesktop_OverrideReconnectIfTheConnectionIsDropped}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="64" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_ReconnectIfTheConnectionIsDropped}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideReconnectIfTheConnectionIsDropped}" />
                                <CheckBox Grid.Column="0" Grid.Row="66"
                                          Content="{x:Static localization:Strings.NetworkConnectionType}"
                                          IsChecked="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="66"
                                          ItemsSource="{Binding RemoteDesktop_NetworkConnectionTypes}"
                                          SelectedItem="{Binding RemoteDesktop_NetworkConnectionType}"
                                          IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Converter={StaticResource RemoteDesktopNetworkConnectionTypeToStringConverter}}"
                                                Style="{StaticResource DefaultTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Grid.Column="0" Grid.Row="68"
                                           Text="{x:Static localization:Strings.DesktopBackground}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="68" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_DesktopBackground}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="70"
                                           Text="{x:Static localization:Strings.FontSmoothing}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="70" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_FontSmoothing}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="72"
                                           Text="{x:Static localization:Strings.DesktopComposition}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="72" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_DesktopComposition}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="74"
                                           Text="{x:Static localization:Strings.ShowWindowContentsWhileDragging}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="74" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_ShowWindowContentsWhileDragging}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="76"
                                           Text="{x:Static localization:Strings.MenuAndWindowAnimation}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="76" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_MenuAndWindowAnimation}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="78"
                                           Text="{x:Static localization:Strings.VisualStyles}" Margin="24,0,0,0"
                                           VerticalAlignment="Center" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="78" OffContent="" OnContent=""
                                                  IsOn="{Binding RemoteDesktop_VisualStyles}"
                                                  IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PowerShell}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PowerShell_Enabled}" Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.RemoteConsole}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding PowerShell_EnableRemoteConsole}" />
                                <TextBlock Grid.Column="0" Grid.Row="2"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="2" OnContent="" OffContent=""
                                                  IsOn="{Binding PowerShell_InheritHost}"
                                                  IsEnabled="{Binding PowerShell_EnableRemoteConsole}" />
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxPowerShellHost" Grid.Column="2" Grid.Row="4"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PowerShell_Enabled}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PowerShell_EnableRemoteConsole}"
                                                             Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PowerShell_InheritHost}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PowerShell_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PowerShell_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="PowerShell_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="4"
                                           Text="{x:Static localization:Strings.OverrideDefaultSettings}"
                                           Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0" />
                                <Separator Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="4"
                                           Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="10"
                                          Content="{x:Static localization:Strings.Command}"
                                          IsChecked="{Binding PowerShell_OverrideCommand}"
                                          IsEnabled="{Binding PowerShell_EnableRemoteConsole, Converter={StaticResource BooleanReverseConverter}}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="10"
                                         Text="{Binding PowerShell_Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PowerShell_EnableRemoteConsole}"
                                                             Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PowerShell_OverrideCommand}"
                                                             Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="12"
                                          Content="{x:Static localization:Strings.AdditionalCommandLine}"
                                          IsChecked="{Binding PowerShell_OverrideAdditionalCommandLine}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="12"
                                         Text="{Binding PowerShell_AdditionalCommandLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsEnabled="{Binding PowerShell_OverrideAdditionalCommandLine}"
                                         Style="{StaticResource DefaultTextBox}" />
                                <CheckBox Grid.Column="0" Grid.Row="14"
                                          Content="{x:Static localization:Strings.ExecutionPolicy}"
                                          IsChecked="{Binding PowerShell_OverrideExecutionPolicy}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="14"
                                          ItemsSource="{Binding PowerShell_ExecutionPolicies}"
                                          SelectedItem="{Binding PowerShell_ExecutionPolicy}"
                                          IsEnabled="{Binding PowerShell_OverrideExecutionPolicy}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PuTTY}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PuTTY_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.Mode}" />
                                <WrapPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal">
                                    <WrapPanel.Resources>
                                        <Style TargetType="{x:Type RadioButton}"
                                               BasedOn="{StaticResource DefaultRadioButton}">
                                            <Setter Property="Margin" Value="0,5,10,5" />
                                        </Style>
                                    </WrapPanel.Resources>
                                    <RadioButton Content="{x:Static localization:Strings.SSH}"
                                                 IsChecked="{Binding PuTTY_UseSSH}" />
                                    <RadioButton Content="{x:Static localization:Strings.Telnet}"
                                                 IsChecked="{Binding PuTTY_UseTelnet}" />
                                    <RadioButton Content="{x:Static localization:Strings.Serial}"
                                                 IsChecked="{Binding PuTTY_UseSerial}" />
                                    <RadioButton Content="{x:Static localization:Strings.Rlogin}"
                                                 IsChecked="{Binding PuTTY_UseRlogin}" />
                                    <RadioButton Content="{x:Static localization:Strings.RAW}"
                                                 IsChecked="{Binding PuTTY_UseRAW}" />
                                </WrapPanel>
                                <TextBlock Grid.Column="0" Grid.Row="2"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}"
                                           Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="2" OnContent="" OffContent=""
                                                  Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                                  IsOn="{Binding PuTTY_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="4">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource CenterTextBlock}">
                                            <Setter Property="Text" Value="{x:Static localization:Strings.Host}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PuTTY_UseSerial}" Value="True">
                                                    <Setter Property="Text"
                                                            Value="{x:Static localization:Strings.SerialLine}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox x:Name="TextBoxPuTTYHost" Grid.Column="2" Grid.Row="4"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                         Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <Binding Path="PuTTY_Host" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:IPAddressOrHostnameValidator
                                                                ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding PuTTY_InheritHost}" Value="True" />
                                                        <Condition Binding="{Binding PuTTY_UseSerial}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                        <Setter Property="TextBox.Text">
                                                            <Setter.Value>
                                                                <Binding Path="Host" Mode="TwoWay"
                                                                         UpdateSourceTrigger="PropertyChanged" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBox x:Name="TextBoxPuTTYSerialLine" Grid.Column="2" Grid.Row="4"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                         Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                         Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_SerialLine" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="4"
                                           Text="{x:Static localization:Strings.OverrideDefaultSettings}"
                                           Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0" />
                                <Separator Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="4"
                                           Background="{DynamicResource MahApps.Brushes.Gray8}"
                                           Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="10" IsChecked="{Binding PuTTY_OverridePortOrBaud}">
                                    <CheckBox.Style>
                                        <Style TargetType="{x:Type CheckBox}"
                                               BasedOn="{StaticResource DefaultCheckBox}">
                                            <Setter Property="Content" Value="{x:Static localization:Strings.Port}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PuTTY_UseSerial}" Value="True">
                                                    <Setter Property="Content"
                                                            Value="{x:Static localization:Strings.BaudRate}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                                <TextBox Grid.Column="2" x:Name="TextBoxPuTTYPort" Grid.Row="10"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort22}"
                                         Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                         IsEnabled="{Binding PuTTY_OverridePortOrBaud}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_Port" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox Grid.Column="2" Grid.Row="10" x:Name="TextBoxPuTTYBaud"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleSerialLine}"
                                         Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                         IsEnabled="{Binding PuTTY_OverridePortOrBaud}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_Baud" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:BaudValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="12"
                                          Content="{x:Static localization:Strings.Username}"
                                          IsChecked="{Binding PuTTY_OverrideUsername}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="12" x:Name="TextBoxPuTTYUsername"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                                         IsEnabled="{Binding PuTTY_OverrideUsername}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_Username" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="12"
                                           ToolTip="{x:Static localization:Strings.HelpMessage_PuTTYUsername}"
                                           Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox Grid.Column="0" Grid.Row="14"
                                          Content="{x:Static localization:Strings.PrivateKeyFile}"
                                          IsChecked="{Binding PuTTY_OverridePrivateKeyFile}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="14" x:Name="TextBoxPuTTYPrivateKeyFile"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.PrivateKeyFileLocationDots}"
                                         IsEnabled="{Binding PuTTY_OverridePrivateKeyFile}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_PrivateKeyFile" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:FileExistsValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="14"
                                           ToolTip="{x:Static localization:Strings.HelpMessage_PuTTYPrivateKeyFile}"
                                           Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox Grid.Column="0" Grid.Row="16"
                                          Content="{x:Static localization:Strings.Profile}"
                                          IsChecked="{Binding PuTTY_OverrideProfile}"
                                          mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePuTTYProfile}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="16"
                                         Text="{Binding PuTTY_Profile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsEnabled="{Binding PuTTY_OverrideProfile}" />
                                <CheckBox Grid.Column="0" Grid.Row="18"
                                          Content="{x:Static localization:Strings.Hostkey}"
                                          IsChecked="{Binding PuTTY_OverrideHostkey}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="18"
                                           ToolTip="{x:Static localization:Strings.HelpMessage_PuTTYHostkey}"
                                           Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBox Grid.Column="2" Grid.Row="18"
                                         Text="{Binding PuTTY_Hostkey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostkey}"
                                         IsEnabled="{Binding PuTTY_OverrideHostkey}" />
                                <CheckBox Grid.Column="0" Grid.Row="20"
                                          Content="{x:Static localization:Strings.EnableLog}"
                                          IsChecked="{Binding PuTTY_OverrideEnableLog}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="20" OnContent="" OffContent=""
                                                  IsOn="{Binding PuTTY_EnableLog}"
                                                  IsEnabled="{Binding PuTTY_OverrideEnableLog}" />
                                <CheckBox Grid.Column="0" Grid.Row="22"
                                          Content="{x:Static localization:Strings.LogMode}"
                                          IsChecked="{Binding PuTTY_OverrideLogMode}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="22" ItemsSource="{Binding PuTTY_LogModes}"
                                          SelectedItem="{Binding PuTTY_LogMode}"
                                          IsEnabled="{Binding PuTTY_OverrideLogMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Converter={StaticResource PuTTYLogModeToStringConverter}}"
                                                Style="{StaticResource DefaultTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="24"
                                          Content="{x:Static localization:Strings.LogPath}"
                                          IsChecked="{Binding PuTTY_OverrideLogPath}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="24" x:Name="TextBoxPuTTYLogPath"
                                         IsEnabled="{Binding PuTTY_OverrideLogPath}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_LogPath" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:DirectoryPathWithEnvironmentVariablesValidator
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="26"
                                          Content="{x:Static localization:Strings.LogFileName}"
                                          IsChecked="{Binding PuTTY_OverrideLogFileName}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="26" x:Name="TextBoxPuTTYLogFileName"
                                         IsEnabled="{Binding PuTTY_OverrideLogFileName}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_LogFileName" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:FileNameValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="28"
                                          Content="{x:Static localization:Strings.AdditionalCommandLine}"
                                          IsChecked="{Binding PuTTY_OverrideAdditionalCommandLine}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="28" Text="{Binding PuTTY_AdditionalCommandLine}"
                                         IsEnabled="{Binding PuTTY_OverrideAdditionalCommandLine}"
                                         Style="{StaticResource DefaultTextBox}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.AWSSessionManager}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding AWSSessionManager_Enabled}" Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InstanceId}" />
                                <TextBox x:Name="TextBoxAwsSessionManagerInstanceId" Grid.Column="2" Grid.Row="0"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleAWSInstanceId}">
                                    <TextBox.Text>
                                        <Binding Path="AWSSessionManager_InstanceID" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4"
                                           Text="{x:Static localization:Strings.OverrideDefaultSettings}"
                                           Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0" />
                                <Separator Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="4"
                                           Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="6"
                                          Content="{x:Static localization:Strings.Profile}"
                                          IsChecked="{Binding AWSSessionManager_OverrideProfile}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox x:Name="TextBoxAwsSessionManagerProfile" Grid.Column="2" Grid.Row="6"
                                         IsEnabled="{Binding AWSSessionManager_OverrideProfile}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleAWSProfile}">
                                    <TextBox.Text>
                                        <Binding Path="AWSSessionManager_Profile" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="8" Content="{x:Static localization:Strings.Region}"
                                          IsChecked="{Binding AWSSessionManager_OverrideRegion}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox x:Name="TextBoxAwsSessionManagerRegion" Grid.Column="2" Grid.Row="8"
                                         IsEnabled="{Binding AWSSessionManager_OverrideRegion}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleAWSRegion}">
                                    <TextBox.Text>
                                        <Binding Path="AWSSessionManager_Region" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:AWSRegionExistsValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.TigerVNC}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding TigerVNC_Enabled}" Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding TigerVNC_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxTigerVncHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding TigerVNC_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding TigerVNC_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TigerVNC_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="TigerVNC_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="4"
                                           Text="{x:Static localization:Strings.OverrideDefaultSettings}"
                                           Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0" />
                                <Separator Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="4"
                                           Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="8" Content="{x:Static localization:Strings.Port}"
                                          IsChecked="{Binding TigerVNC_OverridePort}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox x:Name="TextBoxTigerVncPort" Grid.Column="2" Grid.Row="8"
                                         IsEnabled="{Binding TigerVNC_OverridePort}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort5900}">
                                    <TextBox.Text>
                                        <Binding Path="TigerVNC_Port" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.WebConsole}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding WebConsole_Enabled}" Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.URL}" />
                                <TextBox x:Name="TextBoxWebConsoleUrl" Grid.Column="2" Grid.Row="0"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleWebsiteUri}">
                                    <TextBox.Text>
                                        <Binding Path="WebConsole_Url" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:HttpAndHttpsUriValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.SNMP}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding SNMP_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding SNMP_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxSnmpHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding SNMP_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameAndOrIPAddress}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SNMP_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="SNMP_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameAsRangeValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="4"
                                           Text="{x:Static localization:Strings.OverrideDefaultSettings}"
                                           Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0" />
                                <Separator Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="4"
                                           Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="8" Content="{x:Static localization:Strings.OID}"
                                          IsChecked="{Binding SNMP_OverrideOIDAndMode}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <TextBox x:Name="TextBoxSnmpoid" Grid.Column="2" Grid.Row="8"
                                         IsEnabled="{Binding SNMP_OverrideOIDAndMode}">
                                    <TextBox.Resources>
                                        <wpfHelpers:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                                    </TextBox.Resources>
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark"
                                                    Value="{x:Static localization:StaticStrings.ExampleSnmpOid}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=SNMP_Mode}" Value="Get">
                                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                                            Value="{x:Static localization:StaticStrings.ExampleSnmpOids}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding Path="SNMP_OID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:SNMPOIDValidator ValidatesOnTargetUpdated="True">
                                                    <validators:SNMPOIDValidator.Wrapper>
                                                        <validators:SNMPOIDDependencyObjectWrapper
                                                            Mode="{Binding Data.SNMP_Mode, Source={StaticResource BindingProxy}}" />
                                                    </validators:SNMPOIDValidator.Wrapper>
                                                </validators:SNMPOIDValidator>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="10" Text="{x:Static localization:Strings.Mode}"
                                           Margin="24,0,0,0" VerticalAlignment="Center"
                                           Style="{StaticResource DisabledTextBlock}" />
                                <ComboBox Grid.Column="2" Grid.Row="10" ItemsSource="{Binding SNMP_Modes}"
                                          SelectedItem="{Binding SNMP_Mode}"
                                          IsEnabled="{Binding SNMP_OverrideOIDAndMode}" />
                                <CheckBox Grid.Column="0" Grid.Row="12"
                                          Content="{x:Static localization:Strings.Version}"
                                          IsChecked="{Binding SNMP_OverrideVersionAndAuth}"
                                          Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="12" ItemsSource="{Binding SNMP_Versions}"
                                          SelectedItem="{Binding SNMP_Version}"
                                          IsEnabled="{Binding SNMP_OverrideVersionAndAuth}" />
                                <TextBlock Grid.Column="0" Grid.Row="14"
                                           Text="{x:Static localization:Strings.Community}" Margin="24,0,0,0"
                                           VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource DisabledTextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_Version}" Value="V3">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <PasswordBox Grid.Column="2" Grid.Row="14" x:Name="PasswordBoxSnmpCommunity"
                                             IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <PasswordBox.Style>
                                        <Style TargetType="{x:Type PasswordBox}"
                                               BasedOn="{StaticResource DefaultPasswordBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark"
                                                    Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_IsCommunityEmpty}" Value="True">
                                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                                            Value="{x:Static localization:StaticStrings.ExampleSNMPCommunity}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SNMP_Version}" Value="V3">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior
                                            Password="{Binding SNMP_Community, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="14"
                                           ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                           Margin="10,0,0,0">
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}"
                                               BasedOn="{StaticResource WarnImageRectangle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V1" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V2C" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock Grid.Column="0" Grid.Row="16"
                                           Text="{x:Static localization:Strings.Security}" Margin="24,0,0,0"
                                           VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource DisabledTextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_Version}" Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox Grid.Column="2" Grid.Row="16" ItemsSource="{Binding SNMP_Securities}"
                                          SelectedItem="{Binding SNMP_Security}"
                                          IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}"
                                               BasedOn="{StaticResource DefaultComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_Version}" Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <TextBlock Grid.Column="0" Grid.Row="18"
                                           Text="{x:Static localization:Strings.Username}" Margin="24,0,0,0"
                                           VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource DisabledTextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_Version}" Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox Grid.Column="2" Grid.Row="18" x:Name="TextBoxSnmpUsername"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                                         IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_Version}" Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding Path="SNMP_Username" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="20" Text="{x:Static localization:Strings.Auth}"
                                           Margin="24,0,0,0" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource DisabledTextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox Grid.Column="2" Grid.Row="20"
                                          ItemsSource="{Binding SNMP_AuthenticationProviders}"
                                          SelectedItem="{Binding SNMP_AuthenticationProvider}"
                                          IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}"
                                               BasedOn="{StaticResource DefaultComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <PasswordBox Grid.Column="2" Grid.Row="22" x:Name="PasswordBoxSnmpAuth"
                                             IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <PasswordBox.Style>
                                        <Style TargetType="{x:Type PasswordBox}"
                                               BasedOn="{StaticResource DefaultPasswordBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="mah:TextBoxHelper.Watermark"
                                                    Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_IsAuthEmpty}" Value="True">
                                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                                            Value="{x:Static localization:StaticStrings.ExampleSNMPAuthSecret}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior
                                            Password="{Binding SNMP_Auth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="22"
                                           ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                           Margin="10,0,0,0">
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}"
                                               BasedOn="{StaticResource WarnImageRectangle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock Grid.Column="0" Grid.Row="24" Text="{x:Static localization:Strings.Priv}"
                                           Margin="24,0,0,0" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource DisabledTextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox Grid.Column="2" Grid.Row="24" ItemsSource="{Binding SNMP_PrivacyProviders}"
                                          SelectedItem="{Binding SNMP_PrivacyProvider}"
                                          IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}"
                                               BasedOn="{StaticResource DefaultComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <PasswordBox Grid.Column="2" Grid.Row="26" x:Name="PasswordBoxSnmpPriv"
                                             IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <PasswordBox.Style>
                                        <Style TargetType="{x:Type PasswordBox}"
                                               BasedOn="{StaticResource DefaultPasswordBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="mah:TextBoxHelper.Watermark"
                                                    Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SNMP_IsPrivEmpty}" Value="True">
                                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                                            Value="{x:Static localization:StaticStrings.ExampleSNMPPrivSecret}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior
                                            Password="{Binding SNMP_Priv, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="26"
                                           ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                           Margin="10,0,0,0">
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}"
                                               BasedOn="{StaticResource WarnImageRectangle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.WakeOnLAN}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding WakeOnLAN_Enabled}" Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.MACAddress}" />
                                <TextBox x:Name="TextBoxWakeOnLanMacAddress" Grid.Column="2" Grid.Row="0"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleMACAddress}">
                                    <TextBox.Text>
                                        <Binding Path="WakeOnLAN_MACAddress" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:MACAddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="2"
                                           Text="{x:Static localization:Strings.Broadcast}" />
                                <TextBox x:Name="TextBoxWakeOnLanBroadcast" Grid.Column="2" Grid.Row="2"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Broadcast}">
                                    <TextBox.Text>
                                        <Binding Path="WakeOnLAN_Broadcast" Mode="TwoWay"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.Whois}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding Whois_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding Whois_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Domain}" />
                                <TextBox x:Name="TextBoxWhoisDomain" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding Whois_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Whois_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Whois_InheritHost}" Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Whois_Domain" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:DomainValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.IPGeolocation}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding IPGeolocation_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0"
                                           Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OnContent="" OffContent=""
                                                  IsOn="{Binding IPGeolocation_InheritHost}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Host}" />
                                <TextBox x:Name="TextBoxIPGeolocationHost" Grid.Column="2" Grid.Row="2"
                                         IsEnabled="{Binding IPGeolocation_InheritHost, Converter={StaticResource BooleanReverseConverter}}"
                                         mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleFqdnOrIPAddressPublic}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IPGeolocation_InheritHost}" Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IPGeolocation_InheritHost}"
                                                             Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding Path="IPGeolocation_Host" Mode="TwoWay"
                                                                     UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator
                                                                        ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="{x:Static localization:Strings.Save}" Command="{Binding SaveCommand}" IsDefault="True"
                    Margin="0,0,10,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource HighlightedButton}">
                        <Style.Triggers>
                            <!-- General -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TextBoxName,Path=(Validation.HasError)}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TextBoxHost,Path=(Validation.HasError)}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ComboBoxGroup,Path=(Validation.HasError)}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Network Interface -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticIPAddress}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxNetworkInterfaceIPAddress, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticIPAddress}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=ComboBoxNetworkInterfaceSubnetmask, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticIPAddress}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxNetworkInterfaceGateway, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticDNS}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxNetworkInterfacePrimaryDNSServer, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticDNS}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxNetworkInterfaceSecondaryDNSServer, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- IP Scanner -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IPScanner_Enabled}" Value="True" />
                                    <Condition Binding="{Binding IPScanner_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxIPScannerIPRange, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Port Scanner -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PortScanner_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PortScanner_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPortScannerHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PortScanner_Enabled}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPortScannerPorts, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Ping Monitor -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PingMonitor_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PingMonitor_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPingMonitorHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Traceroute -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Traceroute_Enabled}" Value="True" />
                                    <Condition Binding="{Binding Traceroute_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxTracerouteHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- DNS Lookup -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DNSLookup_Enabled}" Value="True" />
                                    <Condition Binding="{Binding DNSLookup_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxDNSLookupHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Remote Desktop -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopUsername, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopDomain, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_IsPasswordEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverridePort}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopPort, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerHostname, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                               Value="Userpass" />
                                    <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                               Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerUsername, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                               Value="Userpass" />
                                    <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                               Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerDomain, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}"
                                               Value="Userpass" />
                                    <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                               Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_IsGatewayServerPasswordEmpty}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- PowerShell -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PowerShell_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PowerShell_EnableRemoteConsole}" Value="True" />
                                    <Condition Binding="{Binding PowerShell_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPowerShellHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- PuTTY -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYSerialLine, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePortOrBaud}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYPort, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePortOrBaud}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYBaud, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideUsername}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYUsername, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePrivateKeyFile}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYPrivateKeyFile, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideLogPath}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYLogPath, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideLogFileName}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxPuTTYLogFileName, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- AWS Session Manager -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AWSSessionManager_Enabled}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxAwsSessionManagerInstanceId, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AWSSessionManager_Enabled}" Value="True" />
                                    <Condition Binding="{Binding AWSSessionManager_OverrideProfile}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxAwsSessionManagerProfile, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AWSSessionManager_Enabled}" Value="True" />
                                    <Condition Binding="{Binding AWSSessionManager_OverrideRegion}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxAwsSessionManagerRegion, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- TigerVNC -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding TigerVNC_Enabled}" Value="True" />
                                    <Condition Binding="{Binding TigerVNC_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxTigerVncHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding TigerVNC_Enabled}" Value="True" />
                                    <Condition Binding="{Binding TigerVNC_OverridePort}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxTigerVncPort, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- WebConsole -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WebConsole_Enabled}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxWebConsoleUrl, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- SNMP -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxSnmpHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideOIDAndMode}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxSnmpoid, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V1" />
                                    <Condition Binding="{Binding SNMP_IsCommunityEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V2C" />
                                    <Condition Binding="{Binding SNMP_IsCommunityEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxSnmpUsername, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                    <Condition Binding="{Binding SNMP_IsAuthEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                    <Condition Binding="{Binding SNMP_IsAuthEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                    <Condition Binding="{Binding SNMP_IsPrivEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Wake on LAN -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WakeOnLAN_Enabled}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxWakeOnLanMacAddress, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WakeOnLAN_Enabled}" Value="True" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxWakeOnLanBroadcast, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- Whois -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Whois_Enabled}" Value="True" />
                                    <Condition Binding="{Binding Whois_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxWhoisDomain, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- IP Geolocation -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IPGeolocation_Enabled}" Value="True" />
                                    <Condition Binding="{Binding IPGeolocation_InheritHost}" Value="False" />
                                    <Condition
                                        Binding="{Binding ElementName=TextBoxIPGeolocationHost, Path=(Validation.HasError)}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="{x:Static localization:Strings.Cancel}" Command="{Binding CancelCommand}" IsCancel="True"
                    Style="{StaticResource DefaultButton}" />
        </StackPanel>
    </Grid>
</UserControl>