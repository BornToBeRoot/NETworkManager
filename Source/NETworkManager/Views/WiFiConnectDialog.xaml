<UserControl x:Class="NETworkManager.Views.WiFiConnectDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:networkManager="clr-namespace:NETworkManager"
             xmlns:wpfHelpers="clr-namespace:NETworkManager.Utilities.WPF;assembly=NETworkManager.Utilities.WPF"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             d:DataContext="{d:DesignInstance viewModels:WiFiConnectViewModel}">
    <UserControl.Resources>
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
    </UserControl.Resources>
    <Grid Margin="0,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- SSID -->
        <Grid Grid.Row="0" Grid.Column="0"
              Visibility="{Binding IsSsidRequired, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
              Margin="0,0,0,10">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.SSID}" />
            <TextBox x:Name="TextBoxSsid" Grid.Column="2" Grid.Row="0"
                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleSsid}">
                <TextBox.Text>
                    <Binding Path="Ssid" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <!-- Connect automatically -->
        <Grid Grid.Row="1" Grid.Column="0" Margin="0,0,0,10">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.ConnectAutomatically}" />
            <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OffContent="" OnContent=""
                              IsOn="{Binding ConnectAutomatically}" />
        </Grid>
        <!-- Pre-Shared-Key -->
        <Grid Grid.Row="2" Grid.Column="0" Margin="0,0,0,10">
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ConnectMode}" Value="Psk">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.PreSharedKey}" />
            <PasswordBox x:Name="PasswordBoxPreSharedKey" Grid.Column="2" Grid.Row="0"
                         Style="{StaticResource DefaultPasswordBox}">
                <interactivity:Interaction.Behaviors>
                    <wpfHelpers:PasswordBoxBindingBehavior
                        Password="{Binding PreSharedKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </interactivity:Interaction.Behaviors>
            </PasswordBox>
        </Grid>
        <!-- Username, Domain & Password -->
        <Grid Grid.Row="2" Margin="0,0,0,10">
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ConnectMode}" Value="Eap">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.UseCredentials}" />
            <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OffContent="" OnContent="" IsOn="{Binding UseCredentials}" />
            <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Username}" />
            <TextBox Grid.Column="2" Grid.Row="2" x:Name="TextBoxUsername"
                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                     IsEnabled="{Binding UseCredentials}">
                <TextBox.Text>
                    <Binding Path="Username" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                            <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static localization:Strings.Domain}" />
            <TextBox Grid.Column="2" Grid.Row="4" x:Name="TextBoxDomain"
                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}"
                     IsEnabled="{Binding UseCredentials}">
                <TextBox.Text>
                    <Binding Path="Domain" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:EmptyOrWindowsDomainValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Column="0" Grid.Row="6" Text="{x:Static localization:Strings.Password}" />
            <PasswordBox x:Name="PasswordBoxPassword" Grid.Column="2" Grid.Row="6"
                         Style="{StaticResource DefaultPasswordBox}" IsEnabled="{Binding UseCredentials}">
                <interactivity:Interaction.Behaviors>
                    <wpfHelpers:PasswordBoxBindingBehavior
                        Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </interactivity:Interaction.Behaviors>
            </PasswordBox>
        </Grid>
        <!-- Buttons -->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <WrapPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Visibility="{Binding IsWpsChecking,Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <networkManager:LoadingIndicator IsActive="True"
                                                    Style="{DynamicResource ResourceKey=LoadingIndicatorPulseStyle}"
                                                    Width="24"
                                                    Height="24" 
                                                    SpeedRatio="1" />
                <TextBlock Style="{StaticResource AccentTextBlock}"
                           Text="{x:Static localization:Strings.CheckingWPSDots}" VerticalAlignment="Center"
                           Margin="10,0,0,0" />
            </WrapPanel>
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="{x:Static localization:Strings.WPS}" Command="{Binding ConnectWpsCommand}"
                        Visibility="{Binding IsWpsAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter} }"
                        Style="{StaticResource DefaultButton}" Margin="0,0,10,0" />
                <Button Content="{x:Static localization:Strings.Connect}" Command="{Binding ConnectCommand}"
                        IsDefault="True" Margin="0,0,10,0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource HighlightedButton}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <!-- SSID -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSsidRequired}" Value="True" />
                                        <Condition
                                            Binding="{Binding Path=(Validation.HasError), ElementName=TextBoxSsid}"
                                            Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <!-- Pre-shared key -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ConnectMode}" Value="Psk" />
                                        <Condition Binding="{Binding IsPreSharedKeyEmpty}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <!-- Username, Domain & Password -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ConnectMode}" Value="Eap" />
                                        <Condition Binding="{Binding UseCredentials}" Value="True" />
                                        <Condition
                                            Binding="{Binding Path=(Validation.HasError), ElementName=TextBoxUsername}"
                                            Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ConnectMode}" Value="Eap" />
                                        <Condition Binding="{Binding UseCredentials}" Value="True" />
                                        <Condition
                                            Binding="{Binding Path=(Validation.HasError), ElementName=TextBoxDomain}"
                                            Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ConnectMode}" Value="Eap" />
                                        <Condition Binding="{Binding UseCredentials}" Value="True" />
                                        <Condition Binding="{Binding IsPasswordEmpty}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="{x:Static localization:Strings.Cancel}" Command="{Binding CancelCommand}"
                        IsCancel="True" Style="{StaticResource DefaultButton}" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>