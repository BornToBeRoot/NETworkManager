<UserControl x:Class="NETworkManager.Views.NetworkInterfaceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:settings="clr-namespace:NETworkManager.Settings;assembly=NETworkManager.Settings"
             xmlns:controls="clr-namespace:NETworkManager.Controls"
             xmlns:liveChart="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:profiles="clr-namespace:NETworkManager.Profiles;assembly=NETworkManager.Profiles"
             dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:NetworkInterfaceViewModel}">
    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="{Binding ReloadNetworkInterfacesCommand}" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:BooleanToStringConverter x:Key="BooleanToStringConverter" />
        <converters:Bytes1000ToSpeedConverter x:Key="Bytes1000ToSpeedConverter" />
        <converters:Bytes1000ToSizeConverter x:Key="Bytes1000ToSizeConverter" />
        <converters:BandwidthBytesToSpeedConverter x:Key="BandwidthBytesToSpeedConverter" />
        <converters:BandwidthBytesWithSizeConverter x:Key="BandwidthBytesWithSizeConverter" />
        <converters:IPAddressArrayToStringConverter x:Key="IPAddressArrayToStringConverter" />
        <converters:IPAddressSubnetmaskTupleArrayToStringConverter
            x:Key="IPAddressSubnetmaskTupleArrayToStringConverter" />
        <converters:IntNotZeroToVisibilityCollapsedConverter x:Key="IntNotZeroToVisibilityCollapsedConverter" />
        <converters:IntZeroToVisibilityCollapsedConverter x:Key="IntZeroToVisibilityCollapsedConverter" />
        <converters:StringNullOrEmptyToBoolConverter x:Key="StringNullOrEmptyToBoolConverter" />
        <converters:OperationalStatusToStringConverter x:Key="OperationalStatusToStringConverter" />
        <converters:PhysicalAddressToStringConverter x:Key="PhysicalAddressToStringConverter" />
        <converters:ValidateNetworkInterfaceConfigConverter x:Key="ValidateNetworkInterfaceConfigConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid
            Visibility="{Binding NetworkInterfaces.Count, Converter={StaticResource IntNotZeroToVisibilityCollapsedConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="{x:Static settings:GlobalStaticConfiguration.Profile_WidthCollapsed}"
                                  Width="{Binding ProfileWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  MaxWidth="{x:Static settings:GlobalStaticConfiguration.Profile_MaxWidthExpanded}" />
            </Grid.ColumnDefinitions>
            <TabControl Style="{StaticResource DefaultTabControl}">
                <TabItem Header="{x:Static localization:Strings.Information}">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Margin="0,0,0,20">
                            <TextBlock Style="{StaticResource HeaderTextBlock}"
                                       Text="{x:Static localization:Strings.Interface}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" x:Name="ComboBoxNetworkInterfaceProfiles"
                                          ItemsSource="{Binding NetworkInterfaces}"
                                          SelectedItem="{Binding SelectedNetworkInterface}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Rectangle Width="24" Height="24">
                                                    <Rectangle.Resources>
                                                        <VisualBrush x:Key="VisualUp" Stretch="Uniform"
                                                                     Visual="{iconPacks:Modern Kind=Network}" />
                                                        <VisualBrush x:Key="VisualDown" Stretch="Uniform"
                                                                     Visual="{iconPacks:Modern Kind=NetworkDisconnect}" />
                                                    </Rectangle.Resources>
                                                    <Rectangle.Style>
                                                        <Style TargetType="{x:Type Rectangle}">
                                                            <Setter Property="OpacityMask"
                                                                    Value="{StaticResource VisualDown}" />
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsOperational}"
                                                                             Value="True">
                                                                    <Setter Property="OpacityMask"
                                                                            Value="{StaticResource VisualUp}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>
                                                </Rectangle>
                                                <StackPanel Margin="10,0,0,0">
                                                    <TextBlock Text="{Binding Path=Name}" />
                                                    <TextBlock Text="{Binding Path=Description}"
                                                               Foreground="{DynamicResource MahApps.Brushes.Gray3}" />
                                                </StackPanel>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}"
                                               BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ComboBoxItem">
                                                        <Grid Background="{TemplateBinding Background}"
                                                              RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                                            <Border x:Name="Border"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            <Grid Margin="{TemplateBinding BorderThickness}">
                                                                <ContentPresenter x:Name="contentPresenter"
                                                                    Margin="{TemplateBinding Padding}"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                                                                <Setter TargetName="Border" Property="Background"
                                                                        Value="{DynamicResource MahApps.Brushes.Gray9}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background"
                                                                        Value="{DynamicResource MahApps.Brushes.Gray10}" />
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="contentPresenter"
                                                                        Property="Opacity" Value=".55" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                                <Button Grid.Column="1"
                                        Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                        Height="{Binding ElementName=ComboBoxNetworkInterfaceProfiles, Path=ActualHeight}"
                                        Command="{Binding ReloadNetworkInterfacesCommand}"
                                        Style="{StaticResource CleanButton}"
                                        IsEnabled="{Binding IsNetworkInterfaceLoading, Converter={StaticResource BooleanReverseConverter}}"
                                        Margin="10,0,0,0">
                                    <Rectangle Width="24" Height="24">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Refresh}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}"
                                                   BasedOn="{StaticResource ReloadAnimation}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Button>
                            </Grid>
                        </StackPanel>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static localization:Strings.Details}"
                                   Style="{StaticResource HeaderTextBlock}" />
                        <ScrollViewer Grid.Column="0" Grid.Row="2">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBlockAsTextBox}">
                                        <Setter Property="ContextMenu" Value="{StaticResource CopyContextMenu}" />
                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <GridSplitter Grid.Column="1" Grid.RowSpan="20" Background="Transparent"
                                              HorizontalAlignment="Stretch" />
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.Name}" />
                                <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding SelectedNetworkInterface.Name}" />
                                <TextBlock Grid.Column="0" Grid.Row="1"
                                           Text="{x:Static localization:Strings.Description}" />
                                <TextBox Grid.Column="2" Grid.Row="1"
                                         Text="{Binding SelectedNetworkInterface.Description}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Type}" />
                                <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding SelectedNetworkInterface.Type}" />
                                <TextBlock Grid.Column="0" Grid.Row="3"
                                           Text="{x:Static localization:Strings.PhysicalAddress}" />
                                <TextBox Grid.Column="2" Grid.Row="3"
                                         Text="{Binding SelectedNetworkInterface.PhysicalAddress, Converter={StaticResource PhysicalAddressToStringConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static localization:Strings.Status}" />
                                <TextBox Grid.Column="2" Grid.Row="4"
                                         Text="{Binding SelectedNetworkInterface.Status, Converter={StaticResource OperationalStatusToStringConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="5" Text="{x:Static localization:Strings.Speed}" />
                                <TextBox Grid.Column="2" Grid.Row="5"
                                         Text="{Binding SelectedNetworkInterface.Speed, Converter={StaticResource Bytes1000ToSpeedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="6"
                                           Text="{x:Static localization:Strings.IPv4ProtocolAvailable}" />
                                <TextBox Grid.Column="2" Grid.Row="6"
                                         Text="{Binding SelectedNetworkInterface.IPv4ProtocolAvailable, Converter={StaticResource BooleanToStringConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="7"
                                           Text="{x:Static localization:Strings.IPv4Address}"
                                           Visibility="{Binding SelectedNetworkInterface.IPv4ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="7"
                                         Text="{Binding SelectedNetworkInterface.IPv4Address, Converter={StaticResource IPAddressSubnetmaskTupleArrayToStringConverter}}"
                                         Visibility="{Binding SelectedNetworkInterface.IPv4ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="8"
                                           Text="{x:Static localization:Strings.IPv4DefaultGateway}"
                                           Visibility="{Binding SelectedNetworkInterface.IPv4ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="8"
                                         Text="{Binding SelectedNetworkInterface.IPv4Gateway, Converter={StaticResource IPAddressArrayToStringConverter}}"
                                         Visibility="{Binding SelectedNetworkInterface.IPv4ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="9"
                                           Text="{x:Static localization:Strings.DHCPEnabled}" />
                                <TextBox Grid.Column="2" Grid.Row="9"
                                         Text="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToStringConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="10"
                                           Text="{x:Static localization:Strings.DHCPServer}"
                                           Visibility="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="10"
                                         Text="{Binding SelectedNetworkInterface.DhcpServer, Converter={StaticResource IPAddressArrayToStringConverter}}"
                                         Visibility="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="11"
                                           Text="{x:Static localization:Strings.DHCPLeaseObtained}"
                                           Visibility="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="11"
                                         Text="{Binding SelectedNetworkInterface.DhcpLeaseObtained}"
                                         Visibility="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="12"
                                           Text="{x:Static localization:Strings.DHCPLeaseExpires}"
                                           Visibility="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="12"
                                         Text="{Binding SelectedNetworkInterface.DhcpLeaseExpires}"
                                         Visibility="{Binding SelectedNetworkInterface.DhcpEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="13"
                                           Text="{x:Static localization:Strings.IPv6ProtocolAvailable}" />
                                <TextBox Grid.Column="2" Grid.Row="13"
                                         Text="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToStringConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="14"
                                           Text="{x:Static localization:Strings.IPv6AddressLinkLocal}"
                                           Visibility="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="14"
                                         Text="{Binding SelectedNetworkInterface.IPv6AddressLinkLocal, Converter={StaticResource IPAddressArrayToStringConverter}}"
                                         Visibility="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="15"
                                           Text="{x:Static localization:Strings.IPv6Address}"
                                           Visibility="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="15"
                                         Text="{Binding SelectedNetworkInterface.IPv6Address, Converter={StaticResource IPAddressArrayToStringConverter}}"
                                         Visibility="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="16"
                                           Text="{x:Static localization:Strings.IPv6DefaultGateway}"
                                           Visibility="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBox Grid.Column="2" Grid.Row="16"
                                         Text="{Binding SelectedNetworkInterface.IPv6Gateway , Converter={StaticResource IPAddressArrayToStringConverter}}"
                                         Visibility="{Binding SelectedNetworkInterface.IPv6ProtocolAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="17"
                                           Text="{x:Static localization:Strings.DNSAutoconfiguration}" />
                                <TextBox Grid.Column="2" Grid.Row="17"
                                         Text="{Binding SelectedNetworkInterface.DNSAutoconfigurationEnabled, Converter={StaticResource BooleanToStringConverter}}" />
                                <TextBlock Grid.Column="0" Grid.Row="18"
                                           Text="{x:Static localization:Strings.DNSSuffix}" />
                                <TextBox Grid.Column="2" Grid.Row="18"
                                         Text="{Binding SelectedNetworkInterface.DNSSuffix}" />
                                <TextBlock Grid.Column="0" Grid.Row="19"
                                           Text="{x:Static localization:Strings.DNSServers}" />
                                <TextBox Grid.Column="2" Grid.Row="19"
                                         Text="{Binding SelectedNetworkInterface.DNSServer, Converter={StaticResource IPAddressArrayToStringConverter}}" />
                            </Grid>
                        </ScrollViewer>
                        <mahAppsControls:MetroProgressBar Grid.Row="4"
                                                          Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                          IsIndeterminate="True" Margin="0,0,0,10">
                            <mahAppsControls:MetroProgressBar.Style>
                                <Style TargetType="{x:Type  mahAppsControls:MetroProgressBar}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConfigurationRunning}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mahAppsControls:MetroProgressBar.Style>
                        </mahAppsControls:MetroProgressBar>
                        <WrapPanel Grid.Row="5" HorizontalAlignment="Left" Orientation="Horizontal">
                            <Button Margin="0,0,10,0" Command="{Binding OpenNetworkConnectionsCommand}"
                                    Style="{StaticResource ImageWithTextButton}">
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Network}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1"
                                                   Text="{x:Static localization:Strings.NetworkConnectionsDots}"
                                                   Style="{StaticResource ButtonWithImageTextBlock}" />
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <Button HorizontalAlignment="Left" Command="{Binding IPScannerCommand}" Margin="0,0,10,0">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsNetworkInterfaceLoading}"
                                                         Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding Path=SelectedNetworkInterface.IPv4ProtocolAvailable}"
                                                Value="False">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:FontAwesome Kind=NetworkWiredSolid}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.IPScanner}"
                                                   Style="{StaticResource ButtonWithImageTextBlock}" />
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <Button HorizontalAlignment="Left" Command="{Binding FlushDNSCommand}"
                                    IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}"
                                    Style="{StaticResource ImageWithTextButton}" Margin="0,0,10,0">
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:Modern Kind=ListDelete}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.FlushDNSCache}"
                                                   Style="{StaticResource ButtonWithImageTextBlock}" />
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <mah:DropDownButton Style="{StaticResource ImageDropDrownButton}" Margin="0,0,10,0">
                                <mah:DropDownButton.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}" Margin="10,4,0,4">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Refresh}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.ReleaseRenew}"
                                                   Style="{StaticResource ButtonWithImageTextBlock}" Margin="10,4" />
                                    </Grid>
                                </mah:DropDownButton.Content>
                                <mah:DropDownButton.Items>
                                    <MenuItem Header="{x:Static localization:Strings.IPv4}">
                                        <MenuItem Header="{x:Static localization:Strings.ReleaseRenew}"
                                                  Command="{Binding ReleaseRenewCommand}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}" />
                                        <Separator />
                                        <MenuItem Header="{x:Static localization:Strings.Release}"
                                                  Command="{Binding ReleaseCommand}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}" />
                                        <MenuItem Header="{x:Static localization:Strings.Renew}"
                                                  Command="{Binding RenewCommand}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}" />
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.IPv6}">
                                        <MenuItem Header="{x:Static localization:Strings.ReleaseRenew}"
                                                  Command="{Binding ReleaseRenew6Command}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}" />
                                        <Separator />
                                        <MenuItem Header="{x:Static localization:Strings.Release}"
                                                  Command="{Binding Release6Command}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}" />
                                        <MenuItem Header="{x:Static localization:Strings.Renew}"
                                                  Command="{Binding Renew6Command}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}" />
                                    </MenuItem>
                                </mah:DropDownButton.Items>
                            </mah:DropDownButton>
                            <Button Command="{Binding Path=ExportCommand}"
                                    HorizontalAlignment="Left">
                                <Button.Style>
                                    <Style TargetType="{x:Type TypeName=Button}"
                                           BasedOn="{StaticResource ResourceKey=ImageWithTextButton}" />
                                </Button.Style>
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0" Grid.Row="0"
                                                   Style="{StaticResource ResourceKey=ButtonWithImageRectangle}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:Material Kind=Export}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Grid.Row="0"
                                                   Text="{x:Static Member=localization:Strings.ExportDots}"
                                                   Style="{StaticResource ResourceKey=ButtonWithImageTextBlock}" />
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </WrapPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.Bandwidth}">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Margin="0,0,0,20">
                            <TextBlock Style="{StaticResource HeaderTextBlock}"
                                       Text="{x:Static localization:Strings.Interface}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" ItemsSource="{Binding NetworkInterfaces}"
                                          SelectedItem="{Binding SelectedNetworkInterface}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Rectangle Width="24" Height="24">
                                                    <Rectangle.Resources>
                                                        <VisualBrush x:Key="VisualUp" Stretch="Uniform"
                                                                     Visual="{iconPacks:Modern Kind=Network}" />
                                                        <VisualBrush x:Key="VisualDown" Stretch="Uniform"
                                                                     Visual="{iconPacks:Modern Kind=NetworkDisconnect}" />
                                                    </Rectangle.Resources>
                                                    <Rectangle.Style>
                                                        <Style TargetType="{x:Type Rectangle}">
                                                            <Setter Property="OpacityMask"
                                                                    Value="{StaticResource VisualDown}" />
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsOperational}"
                                                                             Value="True">
                                                                    <Setter Property="OpacityMask"
                                                                            Value="{StaticResource VisualUp}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>
                                                </Rectangle>
                                                <StackPanel Margin="10,0,0,0">
                                                    <TextBlock Text="{Binding Path=Name}" />
                                                    <TextBlock Text="{Binding Path=Description}"
                                                               Foreground="{DynamicResource MahApps.Brushes.Gray3}" />
                                                </StackPanel>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}"
                                               BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ComboBoxItem">
                                                        <Grid Background="{TemplateBinding Background}"
                                                              RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                                            <Border x:Name="Border"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            <Grid Margin="{TemplateBinding BorderThickness}">
                                                                <ContentPresenter x:Name="contentPresenter"
                                                                    Margin="{TemplateBinding Padding}"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                                                                <Setter TargetName="Border" Property="Background"
                                                                        Value="{DynamicResource MahApps.Brushes.Gray9}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background"
                                                                        Value="{DynamicResource MahApps.Brushes.Gray10}" />
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="contentPresenter"
                                                                        Property="Opacity" Value=".55" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                                <Button Grid.Column="1"
                                        Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                        Height="{Binding ElementName=ComboBoxNetworkInterfaceProfiles, Path=ActualHeight}"
                                        Command="{Binding ReloadNetworkInterfacesCommand}"
                                        Style="{StaticResource CleanButton}"
                                        IsEnabled="{Binding IsNetworkInterfaceLoading, Converter={StaticResource BooleanReverseConverter}}"
                                        Margin="10,0,0,0">
                                    <Rectangle Width="24" Height="24">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Refresh}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}"
                                                   BasedOn="{StaticResource ReloadAnimation}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Button>
                            </Grid>
                        </StackPanel>
                        <TextBlock Grid.Row="1" Text="{x:Static localization:Strings.Bandwidth}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderTextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NetworkInterfaces.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <liveChart:CartesianChart Grid.Row="2" Series="{Binding Series}" LegendLocation="Right"
                                                  Margin="0,0,0,20" DisableAnimations="True">
                            <liveChart:CartesianChart.DataTooltip>
                                <controls:LvlChartsBandwidthTooltip Background="Transparent" />
                            </liveChart:CartesianChart.DataTooltip>
                            <liveChart:CartesianChart.AxisX>
                                <liveChart:Axis LabelFormatter="{Binding FormatterDate}">
                                    <liveChart:Axis.Separator>
                                        <liveChart:Separator StrokeThickness="0" />
                                    </liveChart:Axis.Separator>
                                </liveChart:Axis>
                            </liveChart:CartesianChart.AxisX>
                            <liveChart:CartesianChart.AxisY>
                                <liveChart:Axis MinValue="0" LabelFormatter="{Binding FormatterSpeed}">
                                    <liveChart:Axis.Separator>
                                        <liveChart:Separator StrokeThickness="1"
                                                             Stroke="{DynamicResource MahApps.Brushes.Gray8}"
                                                             StrokeDashArray="10" />
                                    </liveChart:Axis.Separator>
                                </liveChart:Axis>
                            </liveChart:CartesianChart.AxisY>
                        </liveChart:CartesianChart>
                        <TextBlock Grid.Row="3" Text="{x:Static localization:Strings.NetworkUsage}"
                                   Style="{StaticResource HeaderTextBlock}" />
                        <Grid Grid.Row="4" Margin="0,0,0,20">
                            <Grid.Resources>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBlockAsTextBox}">
                                    <Setter Property="ContextMenu" Value="{StaticResource CopyContextMenu}" />
                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="4" Background="Transparent"
                                          HorizontalAlignment="Stretch" />
                            <GridSplitter Grid.Column="3" Grid.Row="0" Grid.RowSpan="4" Background="Transparent"
                                          HorizontalAlignment="Stretch" />
                            <GridSplitter Grid.Column="5" Grid.Row="0" Grid.RowSpan="4" Background="Transparent"
                                          HorizontalAlignment="Stretch" />
                            <TextBlock Grid.Column="0" Grid.Row="0"
                                       Text="{x:Static localization:Strings.CurrentDownloadSpeed}" />
                            <TextBox Grid.Column="2" Grid.Row="0"
                                     Text="{Binding BandwidthBytesReceivedSpeed, Converter={StaticResource BandwidthBytesToSpeedConverter}}" />
                            <TextBlock Grid.Column="0" Grid.Row="1"
                                       Text="{x:Static localization:Strings.CurrentUploadSpeed}" />
                            <TextBox Grid.Column="2" Grid.Row="1"
                                     Text="{Binding BandwidthBytesSentSpeed, Converter={StaticResource BandwidthBytesToSpeedConverter}}" />
                            <TextBlock Grid.Column="0" Grid.Row="2"
                                       Text="{x:Static localization:Strings.TotalBytesReceived}" />
                            <TextBox Grid.Column="2" Grid.Row="2"
                                     Text="{Binding BandwidthTotalBytesReceived, Converter={StaticResource BandwidthBytesWithSizeConverter}}" />
                            <TextBlock Grid.Column="0" Grid.Row="3"
                                       Text="{x:Static localization:Strings.TotalBytesSent}" />
                            <TextBox Grid.Column="2" Grid.Row="3"
                                     Text="{Binding BandwidthTotalBytesSent, Converter={StaticResource BandwidthBytesWithSizeConverter}}" />

                            <TextBlock Grid.Column="4" Grid.Row="0" Text="{x:Static localization:Strings.StartTime}" />
                            <TextBox Grid.Column="6" Grid.Row="0" Text="{Binding BandwidthStartTime}" />
                            <TextBlock Grid.Column="4" Grid.Row="1" Text="{x:Static localization:Strings.MeasuredTime}" />
                            <TextBox Grid.Column="6" Grid.Row="1"
                                     Text="{Binding BandwidthMeasuredTime, StringFormat={}{0:hh\\:mm\\:ss}}" />

                            <TextBlock Grid.Column="4" Grid.Row="2"
                                       Text="{x:Static localization:Strings.CurrentlyDownloaded}" />
                            <TextBox Grid.Column="6" Grid.Row="2"
                                     Text="{Binding BandwidthDiffBytesReceived, Converter={StaticResource Bytes1000ToSizeConverter}}" />
                            <TextBlock Grid.Column="4" Grid.Row="3"
                                       Text="{x:Static localization:Strings.CurrentlyUploaded}" />
                            <TextBox Grid.Column="6" Grid.Row="3"
                                     Text="{Binding BandwidthDiffBytesSent, Converter={StaticResource Bytes1000ToSizeConverter}}" />
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.Configure}">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Margin="0,0,0,20">
                                <TextBlock Style="{StaticResource HeaderTextBlock}"
                                           Text="{x:Static localization:Strings.Interface}" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ComboBox Grid.Column="0" Grid.Row="0" ItemsSource="{Binding NetworkInterfaces}"
                                              SelectedItem="{Binding SelectedNetworkInterface}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Rectangle Width="24" Height="24">
                                                        <Rectangle.Resources>
                                                            <VisualBrush x:Key="VisualUp" Stretch="Uniform"
                                                                         Visual="{iconPacks:Modern Kind=Network}" />
                                                            <VisualBrush x:Key="VisualDown" Stretch="Uniform"
                                                                         Visual="{iconPacks:Modern Kind=NetworkDisconnect}" />
                                                        </Rectangle.Resources>
                                                        <Rectangle.Style>
                                                            <Style TargetType="{x:Type Rectangle}">
                                                                <Setter Property="OpacityMask"
                                                                        Value="{StaticResource VisualDown}" />
                                                                <Setter Property="Fill"
                                                                        Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsOperational}"
                                                                        Value="True">
                                                                        <Setter Property="OpacityMask"
                                                                            Value="{StaticResource VisualUp}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Rectangle.Style>
                                                    </Rectangle>
                                                    <StackPanel Margin="10,0,0,0">
                                                        <TextBlock Text="{Binding Path=Name}" />
                                                        <TextBlock Text="{Binding Path=Description}"
                                                                   Foreground="{DynamicResource MahApps.Brushes.Gray3}" />
                                                    </StackPanel>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}"
                                                   BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ComboBoxItem">
                                                            <Grid Background="{TemplateBinding Background}"
                                                                  RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                                                <Border x:Name="Border"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <Grid Margin="{TemplateBinding BorderThickness}">
                                                                    <ContentPresenter x:Name="contentPresenter"
                                                                        Margin="{TemplateBinding Padding}"
                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </Grid>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground"
                                                                            Value="{DynamicResource AccentSelectedColorBrush}" />
                                                                    <Setter TargetName="Border" Property="Background"
                                                                            Value="{DynamicResource MahApps.Brushes.Gray9}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background"
                                                                            Value="{DynamicResource MahApps.Brushes.Gray10}" />
                                                                </MultiTrigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter TargetName="contentPresenter"
                                                                            Property="Opacity" Value=".55" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                    </ComboBox>
                                    <Button Grid.Column="1" Grid.Row="0"
                                            Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                            Height="{Binding ElementName=ComboBoxNetworkInterfaceProfiles, Path=ActualHeight}"
                                            Command="{Binding ReloadNetworkInterfacesCommand}"
                                            Style="{StaticResource CleanButton}"
                                            IsEnabled="{Binding IsNetworkInterfaceLoading, Converter={StaticResource BooleanReverseConverter}}"
                                            Margin="10,0,0,0">
                                        <Rectangle Width="24" Height="24">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:Material Kind=Refresh}" />
                                            </Rectangle.OpacityMask>
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type Rectangle}"
                                                       BasedOn="{StaticResource ReloadAnimation}">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                            Value="True">
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                    </Button>
                                    <TextBlock Grid.Column="0" Grid.Row="1"
                                               Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                               Text="{x:Static localization:Strings.ConnectTheNetworkCardToConfigureIt}"
                                               Visibility="{Binding CanConfigure, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                               Style="{DynamicResource DefaultTextBlock}" Margin="0,10,0,0" />
                                </Grid>
                            </StackPanel>
                            <TextBlock Grid.Row="1" Style="{StaticResource HeaderTextBlock}"
                                       Text="{x:Static localization:Strings.Configure}" />
                            <ScrollViewer Grid.Row="2">
                                <StackPanel>
                                    <RadioButton x:Name="RadioButtonConfigEnableDynamicIPAddress"
                                                 GroupName="IPAddressConfig"
                                                 IsChecked="{Binding ConfigEnableDynamicIPAddress}"
                                                 Content="{x:Static localization:Strings.ObtainAnIPAddressAutomatically}"
                                                 Margin="0,0,0,10" />
                                    <RadioButton x:Name="RadioButtonConfigEnableStaticIPAddress"
                                                 GroupName="IPAddressConfig"
                                                 IsChecked="{Binding ConfigEnableStaticIPAddress}"
                                                 Content="{x:Static localization:Strings.UseTheFollowingIPAddress}"
                                                 Margin="0,0,0,10" />
                                    <GroupBox Width="420" HorizontalAlignment="Left"
                                              IsEnabled="{Binding ConfigEnableStaticIPAddress}"
                                              Style="{DynamicResource WithoutHeaderGroupBox}" Margin="25,0,0,10">
                                        <Grid>
                                            <Grid.Resources>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource CenterTextBlock}" />
                                                <Style TargetType="{x:Type TextBox}"
                                                       BasedOn="{StaticResource DefaultTextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ConfigEnableStaticIPAddress}"
                                                                     Value="False">
                                                            <Setter Property="Validation.ErrorTemplate"
                                                                    Value="{x:Null}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="1*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0"
                                                       Text="{x:Static localization:Strings.IPv4Address}" />
                                            <TextBox x:Name="TextBoxConfigIPAddress" Grid.Column="2" Grid.Row="0"
                                                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Address}">
                                                <TextBox.Text>
                                                    <Binding Path="ConfigIPAddress" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:IPv4AddressValidator
                                                                ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock Grid.Column="0" Grid.Row="2"
                                                       Text="{x:Static localization:Strings.SubnetMask}" />
                                            <ComboBox x:Name="ComboBoxConfigSubnetmask" Grid.Column="2" Grid.Row="2"
                                                      Style="{StaticResource EditableComboBox}"
                                                      mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4SubnetmaskIPv4CIDR}"
                                                      ItemsSource="{x:Static network:Subnetmask.List}">
                                                <ComboBox.Text>
                                                    <Binding Path="ConfigSubnetmask" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:IPv4SubnetmaskOrCIDRValidator
                                                                ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </ComboBox.Text>
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="150" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="25" />
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                                                       Style="{StaticResource DefaultTextBlock}"
                                                                       FontFamily="Consolas"
                                                                       Text="{Binding Path=Subnetmask}" />
                                                            <TextBlock Grid.Column="1" VerticalAlignment="Center"
                                                                       Style="{StaticResource DefaultTextBlock}"
                                                                       Text="{Binding Path=CIDR,StringFormat=/{0}}"
                                                                       Foreground="{DynamicResource GrayBrush2}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                            <TextBlock Grid.Column="0" Grid.Row="4"
                                                       Style="{StaticResource CenterTextBlock}"
                                                       Text="{x:Static localization:Strings.DefaultGateway}" />
                                            <TextBox x:Name="TextBoxConfigGateway" Grid.Column="2" Grid.Row="4"
                                                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Gateway}">
                                                <TextBox.Text>
                                                    <Binding Path="ConfigGateway" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyOrIPv4AddressValidator
                                                                ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </Grid>
                                    </GroupBox>
                                    <RadioButton x:Name="RadioButtonConfigEnableDynamicDNS" GroupName="DNSServerConfig"
                                                 Content="{x:Static localization:Strings.ObtainDNSServerAddressAutomatically}"
                                                 IsChecked="{Binding ConfigEnableDynamicDNS}" FontSize="14"
                                                 Margin="0,0,0,10" IsEnabled="{Binding ConfigEnableDynamicIPAddress}" />
                                    <RadioButton x:Name="RadioButtonConfigEnableStaticDNS" GroupName="DNSServerConfig"
                                                 Content="{x:Static localization:Strings.UseTheFollowingDNSServerAddresses}"
                                                 IsChecked="{Binding ConfigEnableStaticDNS}" FontSize="14"
                                                 Margin="0,0,0,10" />
                                    <GroupBox Width="420" HorizontalAlignment="Left"
                                              IsEnabled="{Binding ConfigEnableStaticDNS}"
                                              Style="{DynamicResource WithoutHeaderGroupBox}" Margin="25,0,0,0">
                                        <Grid>
                                            <Grid.Resources>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource CenterTextBlock}" />
                                                <Style TargetType="{x:Type TextBox}"
                                                       BasedOn="{StaticResource DefaultTextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ConfigEnableStaticDNS}"
                                                                     Value="False">
                                                            <Setter Property="Validation.ErrorTemplate"
                                                                    Value="{x:Null}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="1*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0"
                                                       Text="{x:Static localization:Strings.PrimaryDNSServer}" />
                                            <TextBox x:Name="TextBoxConfigPrimaryDNSServer" Grid.Column="2"
                                                     Grid.Row="0"
                                                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Gateway}">
                                                <TextBox.Text>
                                                    <Binding Path="ConfigPrimaryDNSServer" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyOrIPv4AddressValidator
                                                                ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock Grid.Column="0" Grid.Row="2"
                                                       Text="{x:Static localization:Strings.SecondaryDNSServer}" />
                                            <TextBox x:Name="TextBoxConfigSecondaryDNSServer" Grid.Column="2"
                                                     Grid.Row="2"
                                                     mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4DNSServer}">
                                                <TextBox.Text>
                                                    <Binding Path="ConfigSecondaryDNSServer" Mode="TwoWay"
                                                             UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyOrIPv4AddressValidator
                                                                ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <mahAppsControls:MetroProgressBar Grid.Row="2"
                                                          Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                          IsIndeterminate="True" Margin="0,0,0,10">
                            <mahAppsControls:MetroProgressBar.Style>
                                <Style TargetType="{x:Type  mahAppsControls:MetroProgressBar}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConfigurationRunning}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mahAppsControls:MetroProgressBar.Style>
                        </mahAppsControls:MetroProgressBar>
                        <TextBlock Grid.Row="3" Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                   Text="{Binding StatusMessage}"
                                   Visibility="{Binding IsStatusMessageDisplayed, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                   Style="{DynamicResource StatusMessageTextBlock}" Margin="0,0,0,10" />
                        <Grid Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <WrapPanel Grid.Column="0" HorizontalAlignment="Left" Orientation="Horizontal">
                                <mah:DropDownButton Style="{StaticResource ImageDropDrownButton}">
                                    <mah:DropDownButton.Content>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle Style="{StaticResource ButtonWithImageRectangle}"
                                                       Margin="10,4,0,4">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Material Kind=ExpansionCardVariant}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock Grid.Column="1"
                                                       Text="{x:Static localization:Strings.AdditionalConfigDots}"
                                                       Style="{StaticResource ButtonWithImageTextBlock}" Margin="10,4" />
                                        </Grid>
                                    </mah:DropDownButton.Content>
                                    <mah:DropDownButton.Items>
                                        <MenuItem Header="{x:Static localization:Strings.AddIPv4AddressDots}"
                                                  Command="{Binding AddIPv4AddressCommand}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}">
                                            <MenuItem.Icon>
                                                <Rectangle Width="16" Height="16"
                                                           Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform"
                                                                     Visual="{iconPacks:Modern Kind=ListAddBelow}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{x:Static localization:Strings.RemoveIPv4AddressDots}"
                                                  Command="{Binding RemoveIPv4AddressCommand}"
                                                  IsEnabled="{Binding IsConfigurationRunning, Converter={StaticResource BooleanReverseConverter}}">
                                            <MenuItem.Icon>
                                                <Rectangle Width="16" Height="16"
                                                           Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform"
                                                                     Visual="{iconPacks:Modern Kind=ListDelete}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </mah:DropDownButton.Items>
                                </mah:DropDownButton>
                            </WrapPanel>
                            <Button Grid.Column="2" Command="{Binding ApplyConfigurationCommand}"
                                    VerticalAlignment="Bottom">
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:Material Kind=ContentSave}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Apply}"
                                                   Style="{StaticResource ButtonWithImageTextBlock}" />
                                    </Grid>
                                </Button.Content>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                        <Style.Triggers>
                                            <DataTrigger Value="False">
                                                <DataTrigger.Binding>
                                                    <MultiBinding
                                                        Converter="{StaticResource ValidateNetworkInterfaceConfigConverter}">
                                                        <Binding Path="ConfigEnableDynamicIPAddress" />
                                                        <Binding Path="ConfigEnableStaticIPAddress" />
                                                        <Binding ElementName="TextBoxConfigIPAddress"
                                                                 Path="(Validation.HasError)" />
                                                        <Binding ElementName="ComboBoxConfigSubnetmask"
                                                                 Path="(Validation.HasError)" />
                                                        <Binding ElementName="TextBoxConfigGateway"
                                                                 Path="(Validation.HasError)" />
                                                        <Binding Path="ConfigEnableDynamicDNS" />
                                                        <Binding Path="ConfigEnableStaticDNS" />
                                                        <Binding ElementName="TextBoxConfigPrimaryDNSServer"
                                                                 Path="(Validation.HasError)" />
                                                        <Binding ElementName="TextBoxConfigSecondaryDNSServer"
                                                                 Path="(Validation.HasError)" />
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CanConfigure}" Value="False">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsConfigurationRunning}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
            <GridSplitter Grid.Column="1" Grid.Row="0"
                          Focusable="False"
                          Style="{StaticResource ProfileGridSplitter}" />
            <Expander Grid.Column="2" Grid.Row="0"
                      x:Name="ExpanderProfiles"
                      Header="{x:Static localization:Strings.Profiles}"
                      Style="{StaticResource ProfileExpander}"
                      IsExpanded="{Binding ExpandProfileView}">
                <Grid>
                    <Grid
                        Visibility="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=ProfileManagerIsEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton Grid.Column="0" Grid.Row="0"
                                          IsChecked="{Binding ExpandProfileView}"
                                          Focusable="False">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}"
                                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <ContentPresenter HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      RecognizesAccessKey="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <Rectangle Width="16" Height="16">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ChevronRight}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </ToggleButton>
                            <TextBox x:Name="TextBoxSearch" VerticalAlignment="Center" Grid.Column="2" Grid.Row="0"
                                     Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource SearchTextBox}" />
                            <Button Grid.Column="4" Grid.Row="0"
                                    Focusable="False"
                                    Style="{StaticResource CleanButton}"
                                    Command="{Binding AddProfileCommand}"
                                    ToolTip="{x:Static localization:Strings.AddProfileDots}">
                                <Rectangle Width="16" Height="16">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Button>
                        </Grid>
                        <ListBox Grid.Column="0" Grid.Row="2" ItemsSource="{Binding Profiles}"
                                 Visibility="{Binding IsSearching, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                 SelectedItem="{Binding SelectedProfile}"
                                 Style="{StaticResource ProfileListBox}"
                                 ScrollViewer.CanContentScroll="True"
                                 VirtualizingPanel.IsVirtualizing="True"
                                 VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                 VirtualizingPanel.IsContainerVirtualizable="True"
                                 VirtualizingPanel.VirtualizationMode="Recycling"
                                 VirtualizingPanel.ScrollUnit="Item">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.Resources>
                                <ContextMenu x:Key="ListBoxItemContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                                    <MenuItem Header="{x:Static localization:Strings.Apply}"
                                              Command="{Binding ApplyProfileConfigCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16"
                                                       Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Material Kind=ContentSave}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.EditDots}"
                                              Command="{Binding EditProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16"
                                                       Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Modern Kind=Edit}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.CopyAsDots}"
                                              Command="{Binding CopyAsProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16"
                                                       Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Material Kind=ContentDuplicate}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.Delete}"
                                              Command="{Binding DeleteProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16"
                                                       Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{iconPacks:Material Kind=Close}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListBox.Resources>
                            <ListBox.InputBindings>
                                <KeyBinding Command="{Binding EditProfileCommand}" Key="F2" />
                                <KeyBinding Command="{Binding DeleteProfileCommand}" Key="Delete" />
                            </ListBox.InputBindings>
                            <ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Expander IsExpanded="True"
                                                                  Style="{StaticResource DefaultExpander}">
                                                            <Expander.Header>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                        <ColumnDefinition Width="10" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Rectangle Grid.Column="0" Grid.ColumnSpan="3"
                                                                               Fill="Transparent" />
                                                                    <TextBlock Grid.Column="0"
                                                                               Text="{Binding (CollectionViewGroup.Name)}"
                                                                               Style="{DynamicResource ProfileGroupTextBlock}" />
                                                                    <Button Grid.Column="2"
                                                                            ToolTip="{x:Static localization:Strings.EditGroupDots}"
                                                                            Command="{Binding DataContext.EditGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}"
                                                                            CommandParameter="{Binding (CollectionViewGroup.Name)}"
                                                                            Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                                                            Style="{StaticResource CleanButton}">
                                                                        <Rectangle Width="16" Height="16">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Uniform"
                                                                                    Visual="{iconPacks:Modern Kind=Edit}" />
                                                                            </Rectangle.OpacityMask>
                                                                            <Rectangle.Style>
                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                    <Setter Property="Fill"
                                                                                        Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger
                                                                                            Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                                                            Value="True">
                                                                                            <Setter Property="Fill"
                                                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Rectangle.Style>
                                                                        </Rectangle>
                                                                    </Button>
                                                                </Grid>
                                                            </Expander.Header>
                                                            <ItemsPresenter />
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ListBox.GroupStyle>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}"
                                       BasedOn="{StaticResource MahApps.Styles.ListBoxItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource ListBoxItemContextMenu}" />
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type profiles:ProfileInfo}">
                                    <Grid Background="Transparent">
                                        <Grid.ToolTip>
                                            <ToolTip MinWidth="250">
                                                <StackPanel Margin="10">
                                                    <TextBlock Text="{Binding Host}" Style="{StaticResource DefaultTextBlock}" />
                                                    <Separator Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,10" />
                                                    <TextBlock Text="{Binding Description}" Style="{StaticResource InfoTextBlock}" TextWrapping="Wrap" />
                                                </StackPanel>
                                            </ToolTip>                                        
                                        </Grid.ToolTip>
                                        <TextBlock Text="{Binding Name}" Style="{StaticResource CenterTextBlock}" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <mah:ProgressRing Grid.Row="2" Height="50" Width="50" IsActive="{Binding IsSearching}" />
                        <Grid Grid.Row="2" VerticalAlignment="Center">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Profiles.Count}" Value="0" />
                                                <Condition Binding="{Binding IsSearching}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Button HorizontalAlignment="Center" Focusable="False">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                        <Setter Property="Command" Value="{Binding AddProfileCommand}" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding Search, Converter={StaticResource StringNullOrEmptyToBoolConverter}}"
                                                Value="False">
                                                <Setter Property="Command" Value="{Binding ClearSearchCommand}" />
                                                <Setter Property="ToolTip"
                                                        Value="{x:Static localization:Strings.ClearFilter}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Width="20" Height="20">
                                        <Rectangle.Resources>
                                            <VisualBrush x:Key="VisualPlus" Stretch="Uniform"
                                                         Visual="{iconPacks:Material Kind=Plus}" />
                                            <VisualBrush x:Key="VisualClear" Stretch="Uniform"
                                                         Visual="{iconPacks:Material Kind=FilterRemoveOutline}" />
                                        </Rectangle.Resources>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="OpacityMask" Value="{StaticResource VisualPlus}" />
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Search, Converter={StaticResource StringNullOrEmptyToBoolConverter}}"
                                                        Value="False">
                                                        <Setter Property="OpacityMask"
                                                                Value="{StaticResource VisualClear}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}"
                                                   BasedOn="{StaticResource MessageTextBlock}">
                                                <Setter Property="Text"
                                                        Value="{x:Static localization:Strings.NoProfilesFoundCreateOne}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Search, Converter={StaticResource StringNullOrEmptyToBoolConverter}}"
                                                        Value="False">
                                                        <Setter Property="Text"
                                                                Value="{x:Static localization:Strings.NothingFound}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Grid>
                    </Grid>
                    <Grid
                        Visibility="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=ProfileManagerIsEnabled, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                        <Grid.RowDefinitions>
                            <!-- Adjust the Height without TextBox -->
                            <RowDefinition Height="27" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ToggleButton Grid.Row="0" Grid.Column="0"
                                      IsChecked="{Binding ExpandProfileView}"
                                      HorizontalAlignment="Left"
                                      Focusable="False">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}"
                                       BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  RecognizesAccessKey="True" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <Rectangle Width="16" Height="16">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ChevronRight}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </ToggleButton>
                        <Grid Grid.Column="0" Grid.Row="2">
                            <!-- Unlock profile button -->
                            <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Focusable="False"
                                    Command="{Binding UnlockProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                    Style="{StaticResource CleanButton}"
                                    Visibility="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerShowUnlock, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Grid.Row="0"
                                               Width="20" Height="20">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform"
                                                         Visual="{iconPacks:Modern Kind=InterfacePassword}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" Grid.Row="0"
                                               Text="{x:Static localization:Strings.UnlockTheProfileFileMessage}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}"
                                                   BasedOn="{StaticResource MessageTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                            <!-- Profile Manager error message -->
                            <TextBlock
                                Text="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerErrorMessage}"
                                Visibility="{Binding Source={x:Static Member=settings:ConfigurationManager.Current}, Path=ProfileManagerShowUnlock, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}"
                                Style="{StaticResource ResourceKey=MessageTextBlock}" />
                        </Grid>
                    </Grid>
                </Grid>
            </Expander>
        </Grid>
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                    Visibility="{Binding NetworkInterfaces.Count, Converter={StaticResource IntZeroToVisibilityCollapsedConverter}}"
                    Margin="10">
            <TextBlock Text="{x:Static localization:Strings.NoEnabledNetworkAdaptersFound}"
                       Style="{StaticResource MessageTextBlock}" Margin="0,0,0,10" />
            <Button Command="{Binding OpenNetworkConnectionsCommand}" HorizontalAlignment="Center"
                    Style="{StaticResource ImageWithTextButton}">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Network}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.NetworkConnectionsDots}"
                                   Style="{StaticResource ButtonWithImageTextBlock}" />
                    </Grid>
                </Button.Content>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>