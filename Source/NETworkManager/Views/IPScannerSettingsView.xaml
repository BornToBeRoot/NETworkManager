<UserControl x:Class="NETworkManager.Views.IPScannerSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:utilities="clr-namespace:NETworkManager.Utilities;assembly=NETworkManager.Utilities"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:IPScannerSettingsViewModel}">
    <StackPanel>
        <TextBlock Text="{x:Static localization:Strings.IPScanner}" Style="{StaticResource HeaderTextBlock}" />
        <mah:ToggleSwitch Header="{x:Static localization:Strings.ShowUnreachableIPAddressesAndPorts}"
                          IsOn="{Binding ShowAllResults}" Margin="0,0,0,20" />
        <TextBlock Text="{x:Static localization:Strings.Ping}" Style="{StaticResource HeaderTextBlock}" />
        <TextBlock Text="{x:Static localization:Strings.Attempts}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding ICMPAttempts}" Maximum="10" Minimum="1" Interval="1" Margin="0,0,0,10" />
        <TextBlock Text="{x:Static localization:Strings.TimeoutMS}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding ICMPTimeout}" Maximum="15000" Minimum="100" Interval="100" Margin="0,0,0,10" />
        <TextBlock Text="{x:Static localization:Strings.Buffer}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding ICMPBuffer}" Minimum="1" Maximum="65535" Interval="1" Margin="0,0,0,20" />
        <TextBlock Text="{x:Static localization:Strings.DNS}" Style="{StaticResource HeaderTextBlock}" />
        <mah:ToggleSwitch Header="{x:Static localization:Strings.ResolveHostname}" IsOn="{Binding ResolveHostname}"
                          Margin="0,0,0,20" />
        <TextBlock Text="{x:Static localization:Strings.PortScanner}" Style="{StaticResource HeaderTextBlock}" />
        <mah:ToggleSwitch Header="{x:Static localization:Strings.ScanPorts}" IsOn="{Binding PortScanEnabled}"
                          Margin="0,0,0,10" />
        <TextBlock Text="{x:Static localization:Strings.Ports}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <TextBox mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePortScanRange}" Width="250"
                 HorizontalAlignment="Left" Margin="0,0,0,10">
            <TextBox.Text>
                <Binding Path="PortScanPorts" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        <validators:PortRangeValidator ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock Text="{x:Static localization:Strings.TimeoutMS}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding PortScanTimeout}" Maximum="15000" Minimum="100" Interval="100"
                           Margin="0,0,0,10" />
        <TextBlock Text="{x:Static localization:Strings.NetBIOS}" Style="{StaticResource HeaderTextBlock}" />
        <mah:ToggleSwitch Header="{x:Static localization:Strings.ScanForNetBIOS}" IsOn="{Binding NetBIOSEnabled}"
                          Margin="0,0,0,10" />
        <TextBlock Text="{x:Static localization:Strings.TimeoutMS}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding NetBIOSTimeout}" Maximum="15000" Minimum="100" Interval="100"
                           Margin="0,0,0,20" />
        <TextBlock Text="{x:Static localization:Strings.ARP}" Style="{StaticResource HeaderTextBlock}" />
        <mah:ToggleSwitch Header="{x:Static localization:Strings.ResolveMACAddressAndVendor}"
                          IsOn="{Binding ResolveMACAddress}" Margin="0,0,0,20" />
        <TextBlock Text="{x:Static localization:Strings.CustomCommands}" Style="{StaticResource HeaderTextBlock}" />
        <DataGrid x:Name="DataGridCustomCommands" ItemsSource="{Binding CustomCommands}"
                  SelectedItem="{Binding SelectedCustomCommand}" Height="200" Margin="0,0,0,10">
            <DataGrid.Resources>
                <ContextMenu x:Key="RowContextMenu" Opened="RowContextMenu_OnOpened" MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.EditDots}"
                              Command="{Binding EditCustomCommandCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.Delete}"
                              Command="{Binding DeleteCustomCommandCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static localization:Strings.Name}"
                                    Binding="{Binding (utilities:CustomCommandInfo.Name)}" MinWidth="200" Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.FilePath}"
                                    Binding="{Binding (utilities:CustomCommandInfo.FilePath)}" MinWidth="150"
                                    Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Arguments}"
                                    Binding="{Binding (utilities:CustomCommandInfo.Arguments)}" MinWidth="200"
                                    Width="*" />
            </DataGrid.Columns>
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding EditCustomCommandCommand}" Key="F2" />
                <KeyBinding Command="{Binding DeleteCustomCommandCommand}" Key="Delete" />
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                            Value="1">
                            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <Button Command="{Binding AddCustomCommandCommand}"
                Style="{StaticResource ImageWithTextButton}"
                HorizontalAlignment="Left"
                Margin="0,0,0,10">
            <Button.Content>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.AddDots}"
                               Style="{StaticResource ButtonWithImageTextBlock}" />
                </Grid>
            </Button.Content>
        </Button>
        <TextBlock Text="{x:Static localization:Strings.Multithreading}" Style="{StaticResource HeaderTextBlock}" />
        <TextBlock Text="{x:Static localization:Strings.MaxHostThreads}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding MaxHostThreads}" Maximum="512" Minimum="1" Interval="1" Margin="0,0,0,10" />
        <TextBlock Text="{x:Static localization:Strings.MaxPortThreads}" Style="{StaticResource DefaultTextBlock}"
                   Margin="0,0,0,10" />
        <mah:NumericUpDown Value="{Binding MaxPortThreads}" Maximum="10" Minimum="1" Interval="1" Margin="0,0,0,10" />
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Style="{StaticResource InfoImageRectangle}" Width="24" Height="24"
                       HorizontalAlignment="Right" />
            <TextBlock Grid.Column="2" Text="{x:Static localization:Strings.MaxThreadsOnlyGoToSettingsGeneralGeneral}"
                       TextWrapping="Wrap" Style="{StaticResource InfoTextBlock}" />
        </Grid>
    </StackPanel>
</UserControl>