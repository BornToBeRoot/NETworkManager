<mah:MetroWindow x:Name="MetroMainWindow" x:Class="NETworkManager.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:asf="clr-namespace:AirspaceFixer;assembly=AirspaceFixer"
                 xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
                 xmlns:settings="clr-namespace:NETworkManager.Settings;assembly=NETworkManager.Settings"
                 xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                 xmlns:resources="clr-namespace:NETworkManager.Properties"
                 xmlns:networkManager="clr-namespace:NETworkManager"
                 xmlns:models="clr-namespace:NETworkManager.Models;assembly=NETworkManager.Models"
                 mc:Ignorable="d"
                 Style="{DynamicResource DefaultWindow}"
                 dialogs:DialogParticipation.Register="{Binding}"
                 MinWidth="800" Width="1024" Height="768" MinHeight="600"
                 SaveWindowPosition="True" TitleAlignment="Left"
                 ContentRendered="MetroMainWindow_ContentRendered" StateChanged="MetroWindowMain_StateChanged"
                 Activated="MetroMainWindow_Activated" Closing="MetroWindowMain_Closing"
                 d:DataContext="{d:DesignInstance networkManager:MainWindow}">
    <!-- MetroDialogStyles.xaml must be adjusted if MinWidth/MinHeight is changed -->
    <mah:MetroWindow.Resources>
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:ApplicationNameToTranslatedStringConverter x:Key="ApplicationNameToTranslatedStringConverter" />
        <converters:ApplicationNameToIconConverter x:Key="ApplicationNameToIconConverter" />
        <converters:IntZeroToVisibilityCollapsedConverter x:Key="IntZeroToVisibilityCollapsedConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <!-- ReSharper disable once Xaml.RedundantResource - Used in TrayIcon -->
        <ContextMenu x:Key="ContextMenuNotifyIcon" MinWidth="200" Opened="ContextMenu_Opened" x:Shared="False">
            <MenuItem Header="{x:Static localization:Strings.Show}" Command="{Binding ShowWindowCommand}">
                <MenuItem.Icon>
                    <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=OpenInNew}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static localization:Strings.Status}" Command="{Binding OpenStatusWindowCommand}">
                <MenuItem.Icon>
                    <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Pulse}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static localization:Strings.Settings}" Command="{Binding OpenSettingsFromTrayCommand}">
                <MenuItem.Icon>
                    <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Cog}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static localization:Strings.Close}" Command="{Binding CloseApplicationCommand}">
                <MenuItem.Icon>
                    <Rectangle Width="16" Height="16" Fill="Red">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=WindowClose}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </mah:MetroWindow.Resources>

    <mah:MetroWindow.InputBindings>
        <KeyBinding Command="{Binding OpenRunCommand}" Modifiers="Control+Shift" Key="P" />
    </mah:MetroWindow.InputBindings>
    <mah:MetroWindow.WindowButtonCommands>
        <mah:WindowButtonCommands Template="{DynamicResource MahApps.Templates.WindowButtonCommands.Win10}" />
    </mah:MetroWindow.WindowButtonCommands>
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <!-- Fix some design issues with margin -2 and -1 -->
            <Grid Background="{DynamicResource MahApps.Brushes.Gray10}"
                  Visibility="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=IsAdmin, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                  Margin="-2,-1,0,0">
                <TextBlock Text="Administrator" Foreground="{DynamicResource MahApps.Brushes.Gray3}"
                           Style="{StaticResource CenterTextBlock}" Margin="10,0" />
            </Grid>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button Command="{Binding OpenRunCommand}"
                    Visibility="{Binding Path=FlyoutRunCommandIsOpen, Converter={StaticResource ResourceKey=BooleanReverseToVisibilityCollapsedConverter}}"
                    ToolTip="{x:Static localization:Strings.ToolTip_RunCommandWithHotKey}"
                    Cursor="Hand"
                    Focusable="False">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:FontAwesome Kind=TerminalSolid}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
            </Button>
            <Button Command="{Binding RestartApplicationCommand}"
                    Opacity="1"
                    Visibility="{Binding IsRestartRequired, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                    ToolTip="{x:Static localization:Strings.RestartRequired}"
                    Cursor="Hand">
                <Rectangle Width="20" Height="20"
                           Fill="{DynamicResource MahApps.Brushes.Accent}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ReloadAlert}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Command="{Binding OpenWebsiteCommand}"
                    Opacity="1"
                    Visibility="{Binding IsUpdateAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                    CommandParameter="{Binding UpdateReleaseUrl, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Cursor="Hand"
                    ToolTip="{x:Static localization:Strings.UpdateAvailable}"
                    Focusable="False">
                <Rectangle Width="20" Height="20"
                           Fill="{DynamicResource MahApps.Brushes.Accent}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=RocketLaunchOutline}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Command="{Binding UnlockProfileCommand}"
                    Opacity="1"
                    Visibility="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=ProfileManagerShowUnlock, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                    CommandParameter="{Binding UpdateReleaseUrl, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Cursor="Hand"
                    ToolTip="{x:Static localization:Strings.UnlockProfile}"
                    Focusable="False">
                <Rectangle Width="20" Height="20"
                           Fill="{DynamicResource MahApps.Brushes.Accent}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=InterfacePassword}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <ComboBox ItemsSource="{Binding ProfileFiles}"
                      SelectedItem="{Binding SelectedProfileFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      IsDropDownOpen="{Binding IsProfileFileDropDownOpened}"
                      Background="{DynamicResource MahApps.Brushes.Gray10}"
                      BorderThickness="0"
                      MinWidth="100"
                      HorizontalAlignment="Left"
                      Focusable="False"
                      VerticalAlignment="Center"
                      Height="30">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition MinWidth="70" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Grid.Row="0" Width="20" Height="20"
                                       Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="OpacityMask">
                                            <Setter.Value>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{iconPacks:FontAwesome Kind=UserSolid}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEncrypted}" Value="True">
                                                <Setter Property="OpacityMask">
                                                    <Setter.Value>
                                                        <VisualBrush Stretch="Uniform"
                                                                     Visual="{iconPacks:FontAwesome Kind=UserLockSolid}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding Name}" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Command="{Binding OpenWebsiteCommand}"
                    ToolTip="{x:Static localization:Strings.StarForkTheProjectOnGitHub}"
                    CommandParameter="{x:Static resources:Resources.NETworkManager_RepoUrl}"
                    Cursor="Hand"
                    Focusable="False">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Github}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
            </Button>
            <Button Command="{Binding OpenWebsiteCommand}"
                    ToolTip="{x:Static localization:Strings.ReportAnIssueOrCreateAFeatureRequest}"
                    CommandParameter="{x:Static resources:Resources.NETworkManager_NewIssueUrl}"
                    Cursor="Hand"
                    Focusable="False">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Bug}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
            </Button>
            <Button Command="{Binding OpenDocumentationCommand}"
                    ToolTip="{x:Static localization:Strings.OpenDocumentation}"
                    Cursor="Hand"
                    Focusable="False">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Book}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout IsKeyboardFocusWithinChanged="FlyoutRunCommand_IsKeyboardFocusWithinChanged"
                        IsOpen="{Binding FlyoutRunCommandIsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        AreAnimationsEnabled="False"
                        Visibility="{Binding FlyoutRunCommandIsOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Position="Top"
                        TitleVisibility="Collapsed"
                        CloseButtonVisibility="Collapsed"
                        IsModal="False"
                        Width="600" MaxHeight="400"
                        Theme="Adapt">
                <mah:Flyout.InputBindings>
                    <KeyBinding Command="{Binding RunCommandCloseCommand}" Key="Escape" />
                    <KeyBinding Command="{Binding RunCommandDoCommand}" Key="Enter" />
                </mah:Flyout.InputBindings>
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Grid.Row="0"
                                   Margin="5,0"
                                   Width="20" Height="20"
                                   HorizontalAlignment="Right"
                                   Fill="{DynamicResource MahApps.Brushes.Gray8}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ChevronRight}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBox Grid.Column="1" Grid.Row="0"
                                 FontSize="18"
                                 FontFamily="Consolas"
                                 Text="{Binding RunCommandSearch, UpdateSourceTrigger=PropertyChanged}"
                                 mah:TextBoxHelper.Watermark="{x:Static localization:Strings.Watermark_RunCommand}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                    <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True" />
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                    <ListView Grid.Column="0" Grid.Row="2"
                              ItemsSource="{Binding RunCommands}"
                              SelectedItem="{Binding SelectedRunCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectionMode="Single"
                              PreviewMouseLeftButtonUp="ListViewRunCommand_OnPreviewMouseLeftButtonUp"
                              Style="{StaticResource DefaultListBox}">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="{x:Type networkManager:RunCommandInfo}">
                                <Border BorderThickness="1">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{Binding TranslatedName}"
                                                   Style="{StaticResource BoldTextBlock}" />
                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Style="{StaticResource AccentTextBlock}"
                                                   FontFamily="Consolas"
                                                   Margin="0,5,0,0">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0} {1}">
                                                    <Binding Path="Command" />
                                                    <Binding Path="ExampleArguments" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <TextBlock Grid.Column="0" Grid.Row="2" Margin="32,0,0,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RunCommands.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Text"
                                                Value="{x:Static localization:Strings.NoMatchingCommands}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <Grid>
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SettingsViewIsOpen}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <!-- 1 = Search & ApplicationList, 2 = ApplicationView-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Grid.Row="0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}"
                    BorderThickness="0,0,1,0">
                <Grid x:Name="ApplicationViewGrid">
                    <Grid.RowDefinitions>
                        <!-- 1 = Search, 2 = ApplicationList, 3 = Settings-->
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ApplicationViewIsExpanded}" Value="True">
                                    <Setter Property="MinWidth" Value="250" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ApplicationViewIsOpen}" Value="True" />
                                        <Condition Binding="{Binding TextBoxApplicationSearchIsFocused}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="MinWidth" Value="250" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ApplicationViewIsOpen}" Value="True" />
                                        <Condition Binding="{Binding ApplicationViewIsMouseOver}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="MinWidth" Value="250" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Border Grid.Row="0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}"
                            BorderThickness="0,0,0,1" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="31" />
                            </Grid.RowDefinitions>
                            <Button Grid.Column="0" Grid.Row="0"
                                    Command="{Binding OpenApplicationListCommand}"
                                    ToolTip="{x:Static localization:Strings.ExpandAndOpenSearchDots}"
                                    Focusable="False">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ApplicationViewIsExpanded}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ApplicationViewIsOpen}" Value="False" />
                                                    <Condition Binding="{Binding TextBoxApplicationSearchIsFocused}"
                                                               Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ApplicationViewIsOpen}" Value="False" />
                                                    <Condition Binding="{Binding ApplicationViewIsMouseOver}"
                                                               Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Rectangle Grid.Column="0" Width="16" Height="16" Margin="0,0,-2,0">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform"
                                                     Visual="{iconPacks:Material Kind=ChevronDoubleRight}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Button>
                            <TextBox x:Name="TextBoxApplicationSearch" Grid.Column="0" Grid.Row="0"
                                     VerticalAlignment="Center"
                                     BorderThickness="0"
                                     Text="{Binding ApplicationSearch, UpdateSourceTrigger=PropertyChanged}"
                                     mah:TextBoxHelper.Watermark="{x:Static localization:Strings.SearchDots}"
                                     mah:TextBoxHelper.ClearTextButton="True"
                                     CommandManager.PreviewExecuted="TextBoxApplicationSearch_OnPreviewExecuted"
                                     Margin="10,0,0,0">
                                <TextBox.ContextMenu>
                                    <!-- Disable context menu -->
                                    <ContextMenu Visibility="Collapsed" />
                                </TextBox.ContextMenu>
                                <TextBox.Style>
                                    <Style BasedOn="{StaticResource SearchTextBox}" TargetType="{x:Type TextBox}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Setter Property="Width" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ApplicationViewIsExpanded}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="Width" Value="Auto" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ApplicationViewIsOpen}" Value="True" />
                                                    <Condition Binding="{Binding TextBoxApplicationSearchIsFocused}"
                                                               Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Width" Value="Auto" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ApplicationViewIsOpen}" Value="True" />
                                                    <Condition Binding="{Binding ApplicationViewIsMouseOver}"
                                                               Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Width" Value="Auto" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                                <Setter Property="mah:TextBoxHelper.ButtonContentTemplate"
                                                        Value="{x:Null}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                                <interactivity:Interaction.Triggers>
                                    <interactivity:EventTrigger EventName="GotFocus">
                                        <interactivity:InvokeCommandAction
                                            Command="{Binding TextBoxSearchGotFocusCommand}" />
                                    </interactivity:EventTrigger>
                                    <interactivity:EventTrigger EventName="LostFocus">
                                        <interactivity:InvokeCommandAction
                                            Command="{Binding TextBoxSearchLostFocusCommand}" />
                                    </interactivity:EventTrigger>
                                </interactivity:Interaction.Triggers>
                            </TextBox>
                            <ToggleButton Grid.Column="1" Grid.Row="0"
                                          Width="32" Height="32"
                                          IsChecked="{Binding ApplicationViewIsExpanded}"
                                          Focusable="False">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}"
                                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <ContentPresenter HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      RecognizesAccessKey="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ApplicationViewIsExpanded}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ApplicationViewIsOpen}" Value="True" />
                                                    <Condition Binding="{Binding TextBoxApplicationSearchIsFocused}"
                                                               Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ApplicationViewIsOpen}" Value="True" />
                                                    <Condition Binding="{Binding ApplicationViewIsMouseOver}"
                                                               Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                <Rectangle Width="16" Height="16">
                                    <Rectangle.Resources>
                                        <VisualBrush x:Key="VisualPin" Visual="{iconPacks:Modern Kind=Pin}" />
                                    </Rectangle.Resources>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="OpacityMask" Value="{StaticResource VisualPin}" />
                                            <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ApplicationViewIsExpanded}" Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    <Setter Property="OpacityMask" Value="{StaticResource VisualPin}" />
                                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                    <Setter Property="LayoutTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-45" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                            Value="True" />
                                                        <Condition Binding="{Binding ApplicationViewIsExpanded}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource MahApps.Brushes.Accent2}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ScrollViewer Grid.Row="1" ManipulationBoundaryFeedback="ScrollViewer_ManipulationBoundaryFeedback"
                                  Style="{StaticResource FadeOutScrollViewer}">
                        <ListView x:Name="ListViewApplication" ItemsSource="{Binding Applications}"
                                  SelectedItem="{Binding SelectedApplication, Mode=TwoWay}"
                                  SelectionMode="Single"
                                  BorderThickness="0"
                                  dd:DragDrop.IsDragSource="True"
                                  dd:DragDrop.IsDropTarget="True">
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:ApplicationInfo}">
                                    <Grid Height="48" Background="Transparent"
                                          ToolTipService.InitialShowDelay="500"
                                          ToolTipService.IsEnabled="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="48" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="{x:Type ToolTip}">
                                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                                <Setter Property="HasDropShadow" Value="True" />
                                                <Setter Property="Placement" Value="Right" />
                                                <!--Offset to the arrow path-->
                                                <Setter Property="HorizontalOffset" Value="10" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToolTip}">
                                                            <Grid Height="36" Margin="0,6">
                                                                <Border x:Name="border"
                                                                        CornerRadius="3"
                                                                        BorderThickness="1"
                                                                        BorderBrush="{DynamicResource ResourceKey=MahApps.Brushes.Gray8}"
                                                                        Background="{DynamicResource  ResourceKey=MahApps.Brushes.Window.Background}">
                                                                    <TextBlock Text="{TemplateBinding Content}"
                                                                               VerticalAlignment="Center"
                                                                               Margin="10,0,10,0"
                                                                               FontSize="14"
                                                                               Foreground="{DynamicResource MahApps.Brushes.Text}" />
                                                                </Border>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Setter Property="ToolTip"
                                                        Value="{Binding Name, Converter={StaticResource ApplicationNameToTranslatedStringConverter}}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsExpanded}"
                                                        Value="True">
                                                        <Setter Property="ToolTip" Value="{x:Null}" />
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.TextBoxApplicationSearchIsFocused}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="ToolTip" Value="{x:Null}" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                                Value="True" />
                                                            <Condition
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsMouseOver}"
                                                                Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="ToolTip" Value="{x:Null}" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                        Value="True">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Rectangle Grid.Column="0" Width="4" Height="48" HorizontalAlignment="Left">
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type Rectangle}">
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                            Value="True">
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                        <Rectangle Grid.Column="0" Width="24" Height="24" Margin="0,0,-2,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform"
                                                             Visual="{Binding Name, Converter={StaticResource ApplicationNameToIconConverter}}" />
                                            </Rectangle.OpacityMask>
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type Rectangle}">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                            Value="True">
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                        </DataTrigger>
                                                        <DataTrigger
                                                            Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                            Value="True">
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1"
                                                   Text="{Binding Name, Converter={StaticResource ApplicationNameToTranslatedStringConverter}}"
                                                   Margin="2,0,0,0">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource HeaderTextBlock}">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                    <Setter Property="Margin" Value="0" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                            Value="True">
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                        </DataTrigger>
                                                        <DataTrigger
                                                            Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                            Value="True">
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                        </DataTrigger>
                                                        <DataTrigger
                                                            Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsExpanded}"
                                                            Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                            <Setter Property="Margin" Value="0,0,10,0" />
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition
                                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                                    Value="True" />
                                                                <Condition
                                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.TextBoxApplicationSearchIsFocused}"
                                                                    Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Setter Property="Margin" Value="0,0,10,0" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition
                                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                                    Value="True" />
                                                                <Condition
                                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsMouseOver}"
                                                                    Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Setter Property="Margin" Value="0,0,10,0" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Background="Transparent" BorderThickness="0">
                                                    <Grid>
                                                        <ContentPresenter x:Name="contentPresenter" />
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <!-- BUGFIX This has to be set, to enable mouse wheel scrolling -->
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <!-- /BUGFIX-->
                        </ListView>
                    </ScrollViewer>
                    <Grid Grid.Row="1" MaxWidth="{Binding ElementName=ApplicationViewGrid, Path=MinWidth}"
                          VerticalAlignment="Center"
                          Visibility="{Binding Applications.Count, Converter={StaticResource IntZeroToVisibilityCollapsedConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" Command="{Binding ClearSearchCommand}"
                                Style="{StaticResource CleanButton}" Margin="0,0,0,10">
                            <Rectangle Width="24" Height="24">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform"
                                                 Visual="{iconPacks:Material Kind=FilterRemoveOutline}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                        <TextBlock Grid.Row="1" Style="{StaticResource HeaderTextBlock}"
                                   Foreground="{DynamicResource MahApps.Brushes.Gray3}"
                                   Text="{x:Static localization:Strings.SearchedApplicationNotFound}" Margin="10,0"
                                   TextWrapping="Wrap" TextAlignment="Center" />
                    </Grid>
                    <Border Grid.Row="2" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}"
                            BorderThickness="0,1,0,0" Background="Transparent">
                        <Button Height="48" HorizontalContentAlignment="Stretch"
                                Command="{Binding OpenSettingsCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SettingsButton}">
                                    <Setter Property="ToolTip" Value="{x:Static localization:Strings.OpenSettingsDots}" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsExpanded}"
                                            Value="True">
                                            <Setter Property="ToolTip" Value="{x:Null}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                    Value="True" />
                                                <Condition
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.TextBoxApplicationSearchIsFocused}"
                                                    Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="ToolTip" Value="{x:Null}" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                    Value="True" />
                                                <Condition
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsMouseOver}"
                                                    Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="ToolTip" Value="{x:Null}" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Width="24" Height="24" Margin="0,0,-2,0">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Cog}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Settings}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource HeaderTextBlock}">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Setter Property="Margin" Value="0" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                    Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsExpanded}"
                                                    Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Margin" Value="0,0,10,0" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.TextBoxApplicationSearchIsFocused}"
                                                    Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Margin" Value="0,0,10,0" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsOpen}"
                                                            Value="True" />
                                                        <Condition
                                                            Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ApplicationViewIsMouseOver}"
                                                            Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Margin" Value="0,0,10,0" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button>
                    </Border>
                    <interactivity:Interaction.Triggers>
                        <interactivity:EventTrigger EventName="MouseEnter">
                            <interactivity:InvokeCommandAction Command="{Binding ApplicationListMouseEnterCommand}" />
                        </interactivity:EventTrigger>
                        <interactivity:EventTrigger EventName="MouseLeave">
                            <interactivity:InvokeCommandAction Command="{Binding ApplicationListMouseLeaveCommand}" />
                        </interactivity:EventTrigger>
                    </interactivity:Interaction.Triggers>
                </Grid>
            </Border>
            <asf:AirspacePanel Grid.Column="1" Grid.Row="0"
                               FixAirspace="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=FixAirspace}">
                <ContentControl x:Name="ContentControlApplication" />
            </asf:AirspacePanel>
        </Grid>
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SettingsViewIsOpen}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="49" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}" BorderThickness="0,0,0,1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Grid.Row="0"
                                Command="{Binding CloseSettingsCommand}"
                                Style="{StaticResource CleanButton}"
                                Focusable="False"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="10,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Width="16" Height="16">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform"
                                                     Visual="{iconPacks:MaterialLight Kind=ArrowLeft}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Fill"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Back}"
                                           VerticalAlignment="Center" Margin="10,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource DefaultTextBlock}">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button>
                        <!--<TextBlock Grid.Column="1" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Settings}" Foreground="{DynamicResource MahApps.Brushes.Gray3}" Margin="10,0" /> -->
                    </Grid>
                </Border>
                <ContentControl Grid.Row="1" x:Name="ContentControlSettings" />
            </Grid>
        </Grid>
    </Grid>
</mah:MetroWindow>