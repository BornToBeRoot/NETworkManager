<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:networkManager="clr-namespace:NETworkManager">
    <!--
        Source: https://github.com/BornToBeRoot/NETworkManager/issues/2949
    -->
    <Style x:Key="LoadingIndicatorArcsStyleKey" TargetType="{x:Type networkManager:LoadingIndicator}">
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type networkManager:LoadingIndicator}">
                    <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SizeStates">
                                <VisualState x:Name="Large" />
                                <VisualState x:Name="Small" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive"/>
                                <VisualState x:Name="Active">
                                    <Storyboard SpeedRatio="{TemplateBinding SpeedRatio}">
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:3.000" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:2.000" Value="-360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border.Resources>
                            <Style TargetType="{x:Type Canvas}">
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>

                        <Grid Background="Transparent">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                    <TranslateTransform X="10" Y="10"/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Canvas x:Name="PART_Canvas0" Opacity="1.0">
                                <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="10">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Transform>
                                                <TranslateTransform X="20" Y="-20"/>
                                            </PathGeometry.Transform>
                                            <PathGeometry.Figures>
                                                <PathFigureCollection>
                                                    <PathFigure StartPoint="0,0">
                                                        <PathFigure.Segments>
                                                            <PathSegmentCollection>
                                                                <ArcSegment Size="40,40" IsLargeArc="True" SweepDirection="CounterClockwise" Point="40,40" />
                                                            </PathSegmentCollection>
                                                        </PathFigure.Segments>
                                                    </PathFigure>
                                                </PathFigureCollection>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </Canvas>

                            <Canvas x:Name="PART_Canvas1" Opacity="0.3">
                                <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="10">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Transform>
                                                <TranslateTransform X="-7" Y="7"/>
                                            </PathGeometry.Transform>
                                            <PathGeometry.Figures>
                                                <PathFigureCollection>
                                                    <PathFigure StartPoint="0,0">
                                                        <PathFigure.Segments>
                                                            <PathSegmentCollection>
                                                                <ArcSegment Size="30,30" IsLargeArc="True" SweepDirection="Clockwise" Point="40,40" />
                                                            </PathSegmentCollection>
                                                        </PathFigure.Segments>
                                                    </PathFigure>
                                                </PathFigureCollection>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LoadingIndicatorArcsStyle" TargetType="{x:Type networkManager:LoadingIndicator}" BasedOn="{StaticResource LoadingIndicatorArcsStyleKey}"/>
</ResourceDictionary>
