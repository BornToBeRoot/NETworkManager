//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NETworkManager.Localization.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NETworkManager.Localization.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Steel ähnelt.
        /// </summary>
        public static string Accen_Steel {
            get {
                return ResourceManager.GetString("Accen_Steel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accent ähnelt.
        /// </summary>
        public static string Accent {
            get {
                return ResourceManager.GetString("Accent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Amber ähnelt.
        /// </summary>
        public static string Accent_Amber {
            get {
                return ResourceManager.GetString("Accent_Amber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Black ähnelt.
        /// </summary>
        public static string Accent_Black {
            get {
                return ResourceManager.GetString("Accent_Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blue ähnelt.
        /// </summary>
        public static string Accent_Blue {
            get {
                return ResourceManager.GetString("Accent_Blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Brown ähnelt.
        /// </summary>
        public static string Accent_Brown {
            get {
                return ResourceManager.GetString("Accent_Brown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cobalt ähnelt.
        /// </summary>
        public static string Accent_Cobalt {
            get {
                return ResourceManager.GetString("Accent_Cobalt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Crimson ähnelt.
        /// </summary>
        public static string Accent_Crimson {
            get {
                return ResourceManager.GetString("Accent_Crimson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cyan ähnelt.
        /// </summary>
        public static string Accent_Cyan {
            get {
                return ResourceManager.GetString("Accent_Cyan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Emerald ähnelt.
        /// </summary>
        public static string Accent_Emerald {
            get {
                return ResourceManager.GetString("Accent_Emerald", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Green ähnelt.
        /// </summary>
        public static string Accent_Green {
            get {
                return ResourceManager.GetString("Accent_Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indigo ähnelt.
        /// </summary>
        public static string Accent_Indigo {
            get {
                return ResourceManager.GetString("Accent_Indigo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lime ähnelt.
        /// </summary>
        public static string Accent_Lime {
            get {
                return ResourceManager.GetString("Accent_Lime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Magenta ähnelt.
        /// </summary>
        public static string Accent_Magenta {
            get {
                return ResourceManager.GetString("Accent_Magenta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mauve ähnelt.
        /// </summary>
        public static string Accent_Mauve {
            get {
                return ResourceManager.GetString("Accent_Mauve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Olive ähnelt.
        /// </summary>
        public static string Accent_Olive {
            get {
                return ResourceManager.GetString("Accent_Olive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Orange ähnelt.
        /// </summary>
        public static string Accent_Orange {
            get {
                return ResourceManager.GetString("Accent_Orange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Purple ähnelt.
        /// </summary>
        public static string Accent_Purple {
            get {
                return ResourceManager.GetString("Accent_Purple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Red ähnelt.
        /// </summary>
        public static string Accent_Red {
            get {
                return ResourceManager.GetString("Accent_Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sienna ähnelt.
        /// </summary>
        public static string Accent_Sienna {
            get {
                return ResourceManager.GetString("Accent_Sienna", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Steel ähnelt.
        /// </summary>
        public static string Accent_Steel {
            get {
                return ResourceManager.GetString("Accent_Steel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Taupe ähnelt.
        /// </summary>
        public static string Accent_Taupe {
            get {
                return ResourceManager.GetString("Accent_Taupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Teal ähnelt.
        /// </summary>
        public static string Accent_Teal {
            get {
                return ResourceManager.GetString("Accent_Teal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pink ähnelt.
        /// </summary>
        public static string Accent_Violet {
            get {
                return ResourceManager.GetString("Accent_Violet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yellow ähnelt.
        /// </summary>
        public static string Accent_Yellow {
            get {
                return ResourceManager.GetString("Accent_Yellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a host to monitor ähnelt.
        /// </summary>
        public static string AddAHostToMonitor {
            get {
                return ResourceManager.GetString("AddAHostToMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform a DNS lookup... ähnelt.
        /// </summary>
        public static string AddATabToPerformADNSLookup {
            get {
                return ResourceManager.GetString("AddATabToPerformADNSLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform a network scan... ähnelt.
        /// </summary>
        public static string AddATabToPerformANetworkScan {
            get {
                return ResourceManager.GetString("AddATabToPerformANetworkScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform an SNMP action... ähnelt.
        /// </summary>
        public static string AddATabToPerformAnSNMPAction {
            get {
                return ResourceManager.GetString("AddATabToPerformAnSNMPAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform a ping... ähnelt.
        /// </summary>
        public static string AddATabToPerformAPing {
            get {
                return ResourceManager.GetString("AddATabToPerformAPing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform a port scan... ähnelt.
        /// </summary>
        public static string AddATabToPerformAPortScan {
            get {
                return ResourceManager.GetString("AddATabToPerformAPortScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform a SNTP lookup... ähnelt.
        /// </summary>
        public static string AddATabToPerformASNTPLookup {
            get {
                return ResourceManager.GetString("AddATabToPerformASNTPLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to perform a trace... ähnelt.
        /// </summary>
        public static string AddATabToPerformATrace {
            get {
                return ResourceManager.GetString("AddATabToPerformATrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to query the IP geolocation... ähnelt.
        /// </summary>
        public static string AddATabToQueryTheIPGeolocation {
            get {
                return ResourceManager.GetString("AddATabToQueryTheIPGeolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a tab to query whois... ähnelt.
        /// </summary>
        public static string AddATabToQueryWhois {
            get {
                return ResourceManager.GetString("AddATabToQueryWhois", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add AWS profile ähnelt.
        /// </summary>
        public static string AddAWSProfile {
            get {
                return ResourceManager.GetString("AddAWSProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add credentials ähnelt.
        /// </summary>
        public static string AddCredentials {
            get {
                return ResourceManager.GetString("AddCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add custom command ähnelt.
        /// </summary>
        public static string AddCustomCommand {
            get {
                return ResourceManager.GetString("AddCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add DNS server ähnelt.
        /// </summary>
        public static string AddDNSServer {
            get {
                return ResourceManager.GetString("AddDNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add DNS suffix (primary) to hostname ähnelt.
        /// </summary>
        public static string AddDNSSuffixToHostname {
            get {
                return ResourceManager.GetString("AddDNSSuffixToHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add... ähnelt.
        /// </summary>
        public static string AddDots {
            get {
                return ResourceManager.GetString("AddDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add entry ähnelt.
        /// </summary>
        public static string AddEntry {
            get {
                return ResourceManager.GetString("AddEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add entry... ähnelt.
        /// </summary>
        public static string AddEntryDots {
            get {
                return ResourceManager.GetString("AddEntryDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add group ähnelt.
        /// </summary>
        public static string AddGroup {
            get {
                return ResourceManager.GetString("AddGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add host ähnelt.
        /// </summary>
        public static string AddHost {
            get {
                return ResourceManager.GetString("AddHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add IPv4 address ähnelt.
        /// </summary>
        public static string AddIPv4Address {
            get {
                return ResourceManager.GetString("AddIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add IPv4 address... ähnelt.
        /// </summary>
        public static string AddIPv4AddressDots {
            get {
                return ResourceManager.GetString("AddIPv4AddressDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional command line ähnelt.
        /// </summary>
        public static string AdditionalCommandLine {
            get {
                return ResourceManager.GetString("AdditionalCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional config... ähnelt.
        /// </summary>
        public static string AdditionalConfigDots {
            get {
                return ResourceManager.GetString("AdditionalConfigDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additionals ähnelt.
        /// </summary>
        public static string Additionals {
            get {
                return ResourceManager.GetString("Additionals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add OID profile ähnelt.
        /// </summary>
        public static string AddOIDProfile {
            get {
                return ResourceManager.GetString("AddOIDProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add port profile ähnelt.
        /// </summary>
        public static string AddPortProfile {
            get {
                return ResourceManager.GetString("AddPortProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add profile ähnelt.
        /// </summary>
        public static string AddProfile {
            get {
                return ResourceManager.GetString("AddProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add profile... ähnelt.
        /// </summary>
        public static string AddProfileDots {
            get {
                return ResourceManager.GetString("AddProfileDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add profile file ähnelt.
        /// </summary>
        public static string AddProfileFile {
            get {
                return ResourceManager.GetString("AddProfileFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add server ähnelt.
        /// </summary>
        public static string AddServer {
            get {
                return ResourceManager.GetString("AddServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add SNTP server ähnelt.
        /// </summary>
        public static string AddSNTPServer {
            get {
                return ResourceManager.GetString("AddSNTPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add tab ähnelt.
        /// </summary>
        public static string AddTab {
            get {
                return ResourceManager.GetString("AddTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add tab... ähnelt.
        /// </summary>
        public static string AddTabDots {
            get {
                return ResourceManager.GetString("AddTabDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust screen ähnelt.
        /// </summary>
        public static string AdjustScreen {
            get {
                return ResourceManager.GetString("AdjustScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust screen automatically ähnelt.
        /// </summary>
        public static string AdjustScreenAutomatically {
            get {
                return ResourceManager.GetString("AdjustScreenAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Administrator ähnelt.
        /// </summary>
        public static string Administrator {
            get {
                return ResourceManager.GetString("Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All settings can be changed later in the settings! ähnelt.
        /// </summary>
        public static string AllSettingsCanBeChangedLaterInTheSettings {
            get {
                return ResourceManager.GetString("AllSettingsCanBeChangedLaterInTheSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always show icon in tray ähnelt.
        /// </summary>
        public static string AlwaysShowIconInTray {
            get {
                return ResourceManager.GetString("AlwaysShowIconInTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Amber ähnelt.
        /// </summary>
        public static string Amber {
            get {
                return ResourceManager.GetString("Amber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An AWS region named &quot;{0}&quot; does not exist! ähnelt.
        /// </summary>
        public static string AnAWSRegionNamedXDoesNotExist {
            get {
                return ResourceManager.GetString("AnAWSRegionNamedXDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while exporting the data. See error message for details: ähnelt.
        /// </summary>
        public static string AnErrorOccurredWhileExportingTheData {
            get {
                return ResourceManager.GetString("AnErrorOccurredWhileExportingTheData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Answers ähnelt.
        /// </summary>
        public static string Answers {
            get {
                return ResourceManager.GetString("Answers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appearance ähnelt.
        /// </summary>
        public static string Appearance {
            get {
                return ResourceManager.GetString("Appearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ARP Table ähnelt.
        /// </summary>
        public static string ApplicationName_ARPTable {
            get {
                return ResourceManager.GetString("ApplicationName_ARPTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS Session Manager ähnelt.
        /// </summary>
        public static string ApplicationName_AWSSessionManager {
            get {
                return ResourceManager.GetString("ApplicationName_AWSSessionManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bit Calculator ähnelt.
        /// </summary>
        public static string ApplicationName_BitCalculator {
            get {
                return ResourceManager.GetString("ApplicationName_BitCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connections ähnelt.
        /// </summary>
        public static string ApplicationName_Connections {
            get {
                return ResourceManager.GetString("ApplicationName_Connections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dashboard ähnelt.
        /// </summary>
        public static string ApplicationName_Dashboard {
            get {
                return ResourceManager.GetString("ApplicationName_Dashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Discovery Protocol ähnelt.
        /// </summary>
        public static string ApplicationName_DiscoveryProtocol {
            get {
                return ResourceManager.GetString("ApplicationName_DiscoveryProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS Lookup ähnelt.
        /// </summary>
        public static string ApplicationName_DNSLookup {
            get {
                return ResourceManager.GetString("ApplicationName_DNSLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HTTP Headers ähnelt.
        /// </summary>
        public static string ApplicationName_HTTPHeaders {
            get {
                return ResourceManager.GetString("ApplicationName_HTTPHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP Geolocation ähnelt.
        /// </summary>
        public static string ApplicationName_IPGeolocation {
            get {
                return ResourceManager.GetString("ApplicationName_IPGeolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP Scanner ähnelt.
        /// </summary>
        public static string ApplicationName_IPScanner {
            get {
                return ResourceManager.GetString("ApplicationName_IPScanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Listeners ähnelt.
        /// </summary>
        public static string ApplicationName_Listeners {
            get {
                return ResourceManager.GetString("ApplicationName_Listeners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lookup ähnelt.
        /// </summary>
        public static string ApplicationName_Lookup {
            get {
                return ResourceManager.GetString("ApplicationName_Lookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Interface ähnelt.
        /// </summary>
        public static string ApplicationName_NetworkInterface {
            get {
                return ResourceManager.GetString("ApplicationName_NetworkInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ping ähnelt.
        /// </summary>
        public static string ApplicationName_Ping {
            get {
                return ResourceManager.GetString("ApplicationName_Ping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ping Monitor ähnelt.
        /// </summary>
        public static string ApplicationName_PingMonitor {
            get {
                return ResourceManager.GetString("ApplicationName_PingMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port Scanner ähnelt.
        /// </summary>
        public static string ApplicationName_PortScanner {
            get {
                return ResourceManager.GetString("ApplicationName_PortScanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PowerShell ähnelt.
        /// </summary>
        public static string ApplicationName_PowerShell {
            get {
                return ResourceManager.GetString("ApplicationName_PowerShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PuTTY ähnelt.
        /// </summary>
        public static string ApplicationName_PuTTY {
            get {
                return ResourceManager.GetString("ApplicationName_PuTTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote Desktop ähnelt.
        /// </summary>
        public static string ApplicationName_RemoteDesktop {
            get {
                return ResourceManager.GetString("ApplicationName_RemoteDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SNMP ähnelt.
        /// </summary>
        public static string ApplicationName_SNMP {
            get {
                return ResourceManager.GetString("ApplicationName_SNMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SNTP Lookup ähnelt.
        /// </summary>
        public static string ApplicationName_SNTPLookup {
            get {
                return ResourceManager.GetString("ApplicationName_SNTPLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet Calculator ähnelt.
        /// </summary>
        public static string ApplicationName_SubnetCalculator {
            get {
                return ResourceManager.GetString("ApplicationName_SubnetCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TigerVNC ähnelt.
        /// </summary>
        public static string ApplicationName_TigerVNC {
            get {
                return ResourceManager.GetString("ApplicationName_TigerVNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Traceroute ähnelt.
        /// </summary>
        public static string ApplicationName_Traceroute {
            get {
                return ResourceManager.GetString("ApplicationName_Traceroute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wake on LAN ähnelt.
        /// </summary>
        public static string ApplicationName_WakeOnLAN {
            get {
                return ResourceManager.GetString("ApplicationName_WakeOnLAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Web Console ähnelt.
        /// </summary>
        public static string ApplicationName_WebConsole {
            get {
                return ResourceManager.GetString("ApplicationName_WebConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whois ähnelt.
        /// </summary>
        public static string ApplicationName_Whois {
            get {
                return ResourceManager.GetString("ApplicationName_Whois", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WiFi ähnelt.
        /// </summary>
        public static string ApplicationName_WiFi {
            get {
                return ResourceManager.GetString("ApplicationName_WiFi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applications ähnelt.
        /// </summary>
        public static string Applications {
            get {
                return ResourceManager.GetString("Applications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The application will be restarted afterwards! ähnelt.
        /// </summary>
        public static string ApplicationWillBeRestartedAfterwards {
            get {
                return ResourceManager.GetString("ApplicationWillBeRestartedAfterwards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply ähnelt.
        /// </summary>
        public static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply theme to PowerShell console ähnelt.
        /// </summary>
        public static string ApplyThemeToPowerShellConsole {
            get {
                return ResourceManager.GetString("ApplyThemeToPowerShellConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Windows key combinations ähnelt.
        /// </summary>
        public static string ApplyWindowsKeyCombinations {
            get {
                return ResourceManager.GetString("ApplyWindowsKeyCombinations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Windows key combinations (e.g. ALT+TAB): ähnelt.
        /// </summary>
        public static string ApplyWindowsKeyCombinationsLikeAltTab {
            get {
                return ResourceManager.GetString("ApplyWindowsKeyCombinationsLikeAltTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure? ähnelt.
        /// </summary>
        public static string AreYouSure {
            get {
                return ResourceManager.GetString("AreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arguments ähnelt.
        /// </summary>
        public static string Arguments {
            get {
                return ResourceManager.GetString("Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ARP ähnelt.
        /// </summary>
        public static string ARP {
            get {
                return ResourceManager.GetString("ARP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ARP Table ähnelt.
        /// </summary>
        public static string ARPTable {
            get {
                return ResourceManager.GetString("ARPTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ASN ähnelt.
        /// </summary>
        public static string ASN {
            get {
                return ResourceManager.GetString("ASN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AS Name ähnelt.
        /// </summary>
        public static string ASName {
            get {
                return ResourceManager.GetString("ASName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one application must be visible! ähnelt.
        /// </summary>
        public static string AtLeastOneApplicationMustBeVisible {
            get {
                return ResourceManager.GetString("AtLeastOneApplicationMustBeVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempts ähnelt.
        /// </summary>
        public static string Attempts {
            get {
                return ResourceManager.GetString("Attempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auth ähnelt.
        /// </summary>
        public static string Auth {
            get {
                return ResourceManager.GetString("Auth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication ähnelt.
        /// </summary>
        public static string Authentication {
            get {
                return ResourceManager.GetString("Authentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication level ähnelt.
        /// </summary>
        public static string AuthenticationLevel {
            get {
                return ResourceManager.GetString("AuthenticationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authorities ähnelt.
        /// </summary>
        public static string Authorities {
            get {
                return ResourceManager.GetString("Authorities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically update every ähnelt.
        /// </summary>
        public static string AutomaticallyUpdateEvery {
            get {
                return ResourceManager.GetString("AutomaticallyUpdateEvery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Autostart ähnelt.
        /// </summary>
        public static string Autostart {
            get {
                return ResourceManager.GetString("Autostart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Average time ähnelt.
        /// </summary>
        public static string AverageTime {
            get {
                return ResourceManager.GetString("AverageTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS CLI v2 is installed! ähnelt.
        /// </summary>
        public static string AWSCLIv2IsInstalled {
            get {
                return ResourceManager.GetString("AWSCLIv2IsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS CLI v2 is not installed! ähnelt.
        /// </summary>
        public static string AWSCLIv2IsNotInstalled {
            get {
                return ResourceManager.GetString("AWSCLIv2IsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS Session Manager ähnelt.
        /// </summary>
        public static string AWSSessionManager {
            get {
                return ResourceManager.GetString("AWSSessionManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS Session Manager Plugin is installed! ähnelt.
        /// </summary>
        public static string AWSSessionManagerPluginIsInstalled {
            get {
                return ResourceManager.GetString("AWSSessionManagerPluginIsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS Session Manager Plugin is not installed! ähnelt.
        /// </summary>
        public static string AWSSessionManagerPluginIsNotInstalled {
            get {
                return ResourceManager.GetString("AWSSessionManagerPluginIsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die back ähnelt.
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background job ähnelt.
        /// </summary>
        public static string BackgroundJob {
            get {
                return ResourceManager.GetString("BackgroundJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string Backup {
            get {
                return ResourceManager.GetString("Backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bandwidth ähnelt.
        /// </summary>
        public static string Bandwidth {
            get {
                return ResourceManager.GetString("Bandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Baud ähnelt.
        /// </summary>
        public static string Baud {
            get {
                return ResourceManager.GetString("Baud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Baud rate ähnelt.
        /// </summary>
        public static string BaudRate {
            get {
                return ResourceManager.GetString("BaudRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beacon interval ähnelt.
        /// </summary>
        public static string BeaconInterval {
            get {
                return ResourceManager.GetString("BeaconInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bit Calculator ähnelt.
        /// </summary>
        public static string BitCalculator {
            get {
                return ResourceManager.GetString("BitCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bits ähnelt.
        /// </summary>
        public static string Bits {
            get {
                return ResourceManager.GetString("Bits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Black ähnelt.
        /// </summary>
        public static string Black {
            get {
                return ResourceManager.GetString("Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blue ähnelt.
        /// </summary>
        public static string Blue {
            get {
                return ResourceManager.GetString("Blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Broadcast ähnelt.
        /// </summary>
        public static string Broadcast {
            get {
                return ResourceManager.GetString("Broadcast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Brown ähnelt.
        /// </summary>
        public static string Brown {
            get {
                return ResourceManager.GetString("Brown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browser ähnelt.
        /// </summary>
        public static string Browser {
            get {
                return ResourceManager.GetString("Browser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BSSID ähnelt.
        /// </summary>
        public static string BSSID {
            get {
                return ResourceManager.GetString("BSSID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Buffer ähnelt.
        /// </summary>
        public static string Buffer {
            get {
                return ResourceManager.GetString("Buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bypass for local addresses ähnelt.
        /// </summary>
        public static string BypassForLocalAddresses {
            get {
                return ResourceManager.GetString("BypassForLocalAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bytes ähnelt.
        /// </summary>
        public static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculate ähnelt.
        /// </summary>
        public static string Calculate {
            get {
                return ResourceManager.GetString("Calculate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculator ähnelt.
        /// </summary>
        public static string Calculator {
            get {
                return ResourceManager.GetString("Calculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation has been canceled by the user! ähnelt.
        /// </summary>
        public static string CanceledByUserMessage {
            get {
                return ResourceManager.GetString("CanceledByUserMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host cannot be set while other hosts are being added. Please wait until the process is complete and try again. ähnelt.
        /// </summary>
        public static string CannotSetHostWhileRunningMessage {
            get {
                return ResourceManager.GetString("CannotSetHostWhileRunningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Caps lock is enabled! ähnelt.
        /// </summary>
        public static string CapsLockIsEnabled {
            get {
                return ResourceManager.GetString("CapsLockIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capture ähnelt.
        /// </summary>
        public static string Capture {
            get {
                return ResourceManager.GetString("Capture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capture network packets to view LLDP or CDP information! ähnelt.
        /// </summary>
        public static string CaptureNetworkPacketsToViewLLDPorCDPInformation {
            get {
                return ResourceManager.GetString("CaptureNetworkPacketsToViewLLDPorCDPInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capturing network packages... ähnelt.
        /// </summary>
        public static string CapturingNetworkPackagesDots {
            get {
                return ResourceManager.GetString("CapturingNetworkPackagesDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change master password ähnelt.
        /// </summary>
        public static string ChangeMasterPassword {
            get {
                return ResourceManager.GetString("ChangeMasterPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Master Password... ähnelt.
        /// </summary>
        public static string ChangeMasterPasswordDots {
            get {
                return ResourceManager.GetString("ChangeMasterPasswordDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Channel ähnelt.
        /// </summary>
        public static string Channel {
            get {
                return ResourceManager.GetString("Channel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Channels ähnelt.
        /// </summary>
        public static string Channels {
            get {
                return ResourceManager.GetString("Channels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chassis Id ähnelt.
        /// </summary>
        public static string ChassisId {
            get {
                return ResourceManager.GetString("ChassisId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check ähnelt.
        /// </summary>
        public static string Check {
            get {
                return ResourceManager.GetString("Check", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check DNS resolver ähnelt.
        /// </summary>
        public static string CheckDNSResolver {
            get {
                return ResourceManager.GetString("CheckDNSResolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for pre-releases ähnelt.
        /// </summary>
        public static string CheckForPreReleases {
            get {
                return ResourceManager.GetString("CheckForPreReleases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates ähnelt.
        /// </summary>
        public static string CheckForUpdates {
            get {
                return ResourceManager.GetString("CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates at startup ähnelt.
        /// </summary>
        public static string CheckForUpdatesAtStartup {
            get {
                return ResourceManager.GetString("CheckForUpdatesAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking DNS resolver... ähnelt.
        /// </summary>
        public static string CheckingDNSResolverDots {
            get {
                return ResourceManager.GetString("CheckingDNSResolverDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking IP geolocation... ähnelt.
        /// </summary>
        public static string CheckingIPGeolocationDots {
            get {
                return ResourceManager.GetString("CheckingIPGeolocationDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking WPS... ähnelt.
        /// </summary>
        public static string CheckingWPSDots {
            get {
                return ResourceManager.GetString("CheckingWPSDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check IP geolocation ähnelt.
        /// </summary>
        public static string CheckIPGeolocation {
            get {
                return ResourceManager.GetString("CheckIPGeolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check is disabled! ähnelt.
        /// </summary>
        public static string CheckIsDisabled {
            get {
                return ResourceManager.GetString("CheckIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check your network adapter configuration (dns) and if your dns server is configured correctly. ähnelt.
        /// </summary>
        public static string CheckNetworkAdapterConfigurationAndDNSServerConfigurationMessage {
            get {
                return ResourceManager.GetString("CheckNetworkAdapterConfigurationAndDNSServerConfigurationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check your network adapter configuration (dhcp, static ip) and if you are connected to a network. ähnelt.
        /// </summary>
        public static string CheckNetworkAdapterConfigurationAndNetworkConnectionMessage {
            get {
                return ResourceManager.GetString("CheckNetworkAdapterConfigurationAndNetworkConnectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check your network connection and try again in a few seconds. ähnelt.
        /// </summary>
        public static string CheckNetworkConnectionTryAgainMessage {
            get {
                return ResourceManager.GetString("CheckNetworkConnectionTryAgainMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check public IP address ähnelt.
        /// </summary>
        public static string CheckPublicIPAddress {
            get {
                return ResourceManager.GetString("CheckPublicIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CIDR ähnelt.
        /// </summary>
        public static string CIDR {
            get {
                return ResourceManager.GetString("CIDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die City ähnelt.
        /// </summary>
        public static string City {
            get {
                return ResourceManager.GetString("City", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class ähnelt.
        /// </summary>
        public static string Class {
            get {
                return ResourceManager.GetString("Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear filter ähnelt.
        /// </summary>
        public static string ClearFilter {
            get {
                return ResourceManager.GetString("ClearFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Client ähnelt.
        /// </summary>
        public static string Client {
            get {
                return ResourceManager.GetString("Client", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close all ähnelt.
        /// </summary>
        public static string CloseAll {
            get {
                return ResourceManager.GetString("CloseAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closed ähnelt.
        /// </summary>
        public static string Closed {
            get {
                return ResourceManager.GetString("Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close group ähnelt.
        /// </summary>
        public static string CloseGroup {
            get {
                return ResourceManager.GetString("CloseGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closing in {0} seconds... ähnelt.
        /// </summary>
        public static string ClosingInXSecondsDots {
            get {
                return ResourceManager.GetString("ClosingInXSecondsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not export file! See error message: &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string ClouldNotExportFileSeeErrorMessageXX {
            get {
                return ResourceManager.GetString("ClouldNotExportFileSeeErrorMessageXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not import file! See error message: &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string ClouldNotImportFileSeeErrorMessageXX {
            get {
                return ResourceManager.GetString("ClouldNotImportFileSeeErrorMessageXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cobalt ähnelt.
        /// </summary>
        public static string Cobalt {
            get {
                return ResourceManager.GetString("Cobalt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Color depth (bit) ähnelt.
        /// </summary>
        public static string ColorDepthBit {
            get {
                return ResourceManager.GetString("ColorDepthBit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command ähnelt.
        /// </summary>
        public static string Command {
            get {
                return ResourceManager.GetString("Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command Line Arguments ähnelt.
        /// </summary>
        public static string CommandLineArguments {
            get {
                return ResourceManager.GetString("CommandLineArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Community ähnelt.
        /// </summary>
        public static string Community {
            get {
                return ResourceManager.GetString("Community", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer ähnelt.
        /// </summary>
        public static string Computer {
            get {
                return ResourceManager.GetString("Computer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computer name ähnelt.
        /// </summary>
        public static string ComputerName {
            get {
                return ResourceManager.GetString("ComputerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure ähnelt.
        /// </summary>
        public static string Configure {
            get {
                return ResourceManager.GetString("Configure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the path to PowerShell in the settings... ähnelt.
        /// </summary>
        public static string ConfigureThePathToPowerShellInTheSettingsDots {
            get {
                return ResourceManager.GetString("ConfigureThePathToPowerShellInTheSettingsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the path to PuTTY in the settings... ähnelt.
        /// </summary>
        public static string ConfigureThePathToPuTTYInTheSettingsDots {
            get {
                return ResourceManager.GetString("ConfigureThePathToPuTTYInTheSettingsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the path to TigerVNC in the settings... ähnelt.
        /// </summary>
        public static string ConfigureThePathToTigerVNCInTheSettingsDots {
            get {
                return ResourceManager.GetString("ConfigureThePathToTigerVNCInTheSettingsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm ähnelt.
        /// </summary>
        public static string Confirm {
            get {
                return ResourceManager.GetString("Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Confirm close ähnelt.
        /// </summary>
        public static string ConfirmClose {
            get {
                return ResourceManager.GetString("ConfirmClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Are you sure you want to close the application? ähnelt.
        /// </summary>
        public static string ConfirmCloseMessage {
            get {
                return ResourceManager.GetString("ConfirmCloseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect ähnelt.
        /// </summary>
        public static string Connect {
            get {
                return ResourceManager.GetString("Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect as ähnelt.
        /// </summary>
        public static string ConnectAs {
            get {
                return ResourceManager.GetString("ConnectAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect as... ähnelt.
        /// </summary>
        public static string ConnectAsDots {
            get {
                return ResourceManager.GetString("ConnectAsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect automatically ähnelt.
        /// </summary>
        public static string ConnectAutomatically {
            get {
                return ResourceManager.GetString("ConnectAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect... ähnelt.
        /// </summary>
        public static string ConnectDots {
            get {
                return ResourceManager.GetString("ConnectDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connected ähnelt.
        /// </summary>
        public static string Connected {
            get {
                return ResourceManager.GetString("Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect external ähnelt.
        /// </summary>
        public static string ConnectExternal {
            get {
                return ResourceManager.GetString("ConnectExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting... ähnelt.
        /// </summary>
        public static string ConnectingDots {
            get {
                return ResourceManager.GetString("ConnectingDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connecting to {0}... ähnelt.
        /// </summary>
        public static string ConnectingToXXX {
            get {
                return ResourceManager.GetString("ConnectingToXXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection ähnelt.
        /// </summary>
        public static string Connection {
            get {
                return ResourceManager.GetString("Connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connections ähnelt.
        /// </summary>
        public static string Connections {
            get {
                return ResourceManager.GetString("Connections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string ConnectionState_Error {
            get {
                return ResourceManager.GetString("ConnectionState_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string ConnectionState_OK {
            get {
                return ResourceManager.GetString("ConnectionState_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string ConnectionState_Warning {
            get {
                return ResourceManager.GetString("ConnectionState_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect the network card to a network to configure it! ähnelt.
        /// </summary>
        public static string ConnectTheNetworkCardToConfigureIt {
            get {
                return ResourceManager.GetString("ConnectTheNetworkCardToConfigureIt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect to {0} ähnelt.
        /// </summary>
        public static string ConnectToXXX {
            get {
                return ResourceManager.GetString("ConnectToXXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Continent ähnelt.
        /// </summary>
        public static string Continent {
            get {
                return ResourceManager.GetString("Continent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Continue ähnelt.
        /// </summary>
        public static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy ähnelt.
        /// </summary>
        public static string Copy {
            get {
                return ResourceManager.GetString("Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy as... ähnelt.
        /// </summary>
        public static string CopyAsDots {
            get {
                return ResourceManager.GetString("CopyAsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy... ähnelt.
        /// </summary>
        public static string CopyDots {
            get {
                return ResourceManager.GetString("CopyDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy ähnelt.
        /// </summary>
        public static string CopyNoun {
            get {
                return ResourceManager.GetString("CopyNoun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy profile ähnelt.
        /// </summary>
        public static string CopyProfile {
            get {
                return ResourceManager.GetString("CopyProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not connect to &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string CouldNotConnectToXXXMessage {
            get {
                return ResourceManager.GetString("CouldNotConnectToXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not connect to {0} ({1})! ähnelt.
        /// </summary>
        public static string CouldNotConnectToXXXReasonXXX {
            get {
                return ResourceManager.GetString("CouldNotConnectToXXXReasonXXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not detect gateway ip address! ähnelt.
        /// </summary>
        public static string CouldNotDetectGatewayIPAddressMessage {
            get {
                return ResourceManager.GetString("CouldNotDetectGatewayIPAddressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not detect local ip address! ähnelt.
        /// </summary>
        public static string CouldNotDetectLocalIPAddressMessage {
            get {
                return ResourceManager.GetString("CouldNotDetectLocalIPAddressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not detect subnetmask! ähnelt.
        /// </summary>
        public static string CouldNotDetectSubnetmask {
            get {
                return ResourceManager.GetString("CouldNotDetectSubnetmask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find the application &quot;{0}&quot;. Maybe the application was hidden in the settings? ähnelt.
        /// </summary>
        public static string CouldNotFindApplicationXXXMessage {
            get {
                return ResourceManager.GetString("CouldNotFindApplicationXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not get public ip address via WebRequest (http/https) from &quot;{0}&quot;! Check your network connection (firewall, proxy, etc.). ähnelt.
        /// </summary>
        public static string CouldNotGetPublicIPAddressFromXXXMessage {
            get {
                return ResourceManager.GetString("CouldNotGetPublicIPAddressFromXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not parse public ip address from &quot;{0}&quot;! Try another service or use the default...  ähnelt.
        /// </summary>
        public static string CouldNotParsePublicIPAddressFromXXXMessage {
            get {
                return ResourceManager.GetString("CouldNotParsePublicIPAddressFromXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not resolve hostname for: &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string CouldNotResolveHostnameFor {
            get {
                return ResourceManager.GetString("CouldNotResolveHostnameFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not resolve ip address for: &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string CouldNotResolveIPAddressFor {
            get {
                return ResourceManager.GetString("CouldNotResolveIPAddressFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not send keystroke! ähnelt.
        /// </summary>
        public static string CouldNotSendKeystroke {
            get {
                return ResourceManager.GetString("CouldNotSendKeystroke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Country ähnelt.
        /// </summary>
        public static string Country {
            get {
                return ResourceManager.GetString("Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credential ähnelt.
        /// </summary>
        public static string Credential {
            get {
                return ResourceManager.GetString("Credential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credentials ähnelt.
        /// </summary>
        public static string Credentials {
            get {
                return ResourceManager.GetString("Credentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credential Security Support Provider ähnelt.
        /// </summary>
        public static string CredentialSecuritySupportProvider {
            get {
                return ResourceManager.GetString("CredentialSecuritySupportProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Crimson ähnelt.
        /// </summary>
        public static string Crimson {
            get {
                return ResourceManager.GetString("Crimson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl+Alt+Del ähnelt.
        /// </summary>
        public static string CtrlAltDel {
            get {
                return ResourceManager.GetString("CtrlAltDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Currency ähnelt.
        /// </summary>
        public static string Currency {
            get {
                return ResourceManager.GetString("Currency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current download speed ähnelt.
        /// </summary>
        public static string CurrentDownloadSpeed {
            get {
                return ResourceManager.GetString("CurrentDownloadSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Currently downloaded ähnelt.
        /// </summary>
        public static string CurrentlyDownloaded {
            get {
                return ResourceManager.GetString("CurrentlyDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Currently uploaded ähnelt.
        /// </summary>
        public static string CurrentlyUploaded {
            get {
                return ResourceManager.GetString("CurrentlyUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current password ähnelt.
        /// </summary>
        public static string CurrentPassword {
            get {
                return ResourceManager.GetString("CurrentPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current upload speed ähnelt.
        /// </summary>
        public static string CurrentUploadSpeed {
            get {
                return ResourceManager.GetString("CurrentUploadSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom ähnelt.
        /// </summary>
        public static string Custom {
            get {
                return ResourceManager.GetString("Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom: ähnelt.
        /// </summary>
        public static string CustomColon {
            get {
                return ResourceManager.GetString("CustomColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom commands ähnelt.
        /// </summary>
        public static string CustomCommands {
            get {
                return ResourceManager.GetString("CustomCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom screen size: ähnelt.
        /// </summary>
        public static string CustomScreenSize {
            get {
                return ResourceManager.GetString("CustomScreenSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom themes ähnelt.
        /// </summary>
        public static string CustomThemes {
            get {
                return ResourceManager.GetString("CustomThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cut ähnelt.
        /// </summary>
        public static string Cut {
            get {
                return ResourceManager.GetString("Cut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cyan ähnelt.
        /// </summary>
        public static string Cyan {
            get {
                return ResourceManager.GetString("Cyan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dashboard ähnelt.
        /// </summary>
        public static string Dashboard {
            get {
                return ResourceManager.GetString("Dashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data ähnelt.
        /// </summary>
        public static string Data {
            get {
                return ResourceManager.GetString("Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data has been updated! ähnelt.
        /// </summary>
        public static string DataHasBeenUpdated {
            get {
                return ResourceManager.GetString("DataHasBeenUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credentials must be decrypted and loaded to manage them. ähnelt.
        /// </summary>
        public static string DecryptAndLoadCredentialsMessage {
            get {
                return ResourceManager.GetString("DecryptAndLoadCredentialsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt and load... ähnelt.
        /// </summary>
        public static string DecryptAndLoadDots {
            get {
                return ResourceManager.GetString("DecryptAndLoadDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decryption error ähnelt.
        /// </summary>
        public static string DecryptionError {
            get {
                return ResourceManager.GetString("DecryptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not decrypt file. You may report this issue on GitHub. ähnelt.
        /// </summary>
        public static string DecryptionErrorMessage {
            get {
                return ResourceManager.GetString("DecryptionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default application ähnelt.
        /// </summary>
        public static string DefaultApplication {
            get {
                return ResourceManager.GetString("DefaultApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default-Gateway ähnelt.
        /// </summary>
        public static string DefaultGateway {
            get {
                return ResourceManager.GetString("DefaultGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default port: ähnelt.
        /// </summary>
        public static string DefaultPort {
            get {
                return ResourceManager.GetString("DefaultPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default profile ähnelt.
        /// </summary>
        public static string DefaultProfile {
            get {
                return ResourceManager.GetString("DefaultProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default region ähnelt.
        /// </summary>
        public static string DefaultRegion {
            get {
                return ResourceManager.GetString("DefaultRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete AWS profile ähnelt.
        /// </summary>
        public static string DeleteAWSProfile {
            get {
                return ResourceManager.GetString("DeleteAWSProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected AWS profile is permanently deleted.
        ///
        ///The profile is not removed from the ~\.aws\credentials file. ähnelt.
        /// </summary>
        public static string DeleteAWSProfileMessage {
            get {
                return ResourceManager.GetString("DeleteAWSProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected credential will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteCredentialMessage {
            get {
                return ResourceManager.GetString("DeleteCredentialMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete credentials ähnelt.
        /// </summary>
        public static string DeleteCredentials {
            get {
                return ResourceManager.GetString("DeleteCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete custom command ähnelt.
        /// </summary>
        public static string DeleteCustomCommand {
            get {
                return ResourceManager.GetString("DeleteCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected custom command will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteCustomCommandMessage {
            get {
                return ResourceManager.GetString("DeleteCustomCommandMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete DNS server ähnelt.
        /// </summary>
        public static string DeleteDNSServer {
            get {
                return ResourceManager.GetString("DeleteDNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected DNS server will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteDNSServerMessage {
            get {
                return ResourceManager.GetString("DeleteDNSServerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete... ähnelt.
        /// </summary>
        public static string DeleteDots {
            get {
                return ResourceManager.GetString("DeleteDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete entry ähnelt.
        /// </summary>
        public static string DeleteEntry {
            get {
                return ResourceManager.GetString("DeleteEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete group ähnelt.
        /// </summary>
        public static string DeleteGroup {
            get {
                return ResourceManager.GetString("DeleteGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected group and all profiles inside this group will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteGroupMessage {
            get {
                return ResourceManager.GetString("DeleteGroupMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete OID profile ähnelt.
        /// </summary>
        public static string DeleteOIDProfile {
            get {
                return ResourceManager.GetString("DeleteOIDProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected OID profile will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteOIDProfileMessage {
            get {
                return ResourceManager.GetString("DeleteOIDProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete port profile ähnelt.
        /// </summary>
        public static string DeletePortProfile {
            get {
                return ResourceManager.GetString("DeletePortProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected port profile will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeletePortProfileMessage {
            get {
                return ResourceManager.GetString("DeletePortProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete profile ähnelt.
        /// </summary>
        public static string DeleteProfile {
            get {
                return ResourceManager.GetString("DeleteProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete profile file ähnelt.
        /// </summary>
        public static string DeleteProfileFile {
            get {
                return ResourceManager.GetString("DeleteProfileFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected profile file will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteProfileFileMessage {
            get {
                return ResourceManager.GetString("DeleteProfileFileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected profile will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteProfileMessage {
            get {
                return ResourceManager.GetString("DeleteProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete profiles ähnelt.
        /// </summary>
        public static string DeleteProfiles {
            get {
                return ResourceManager.GetString("DeleteProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected profiles will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteProfilesMessage {
            get {
                return ResourceManager.GetString("DeleteProfilesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete SNTP server ähnelt.
        /// </summary>
        public static string DeleteSNTPServer {
            get {
                return ResourceManager.GetString("DeleteSNTPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected SNTP server will be deleted permanently. ähnelt.
        /// </summary>
        public static string DeleteSNTPServerMessage {
            get {
                return ResourceManager.GetString("DeleteSNTPServerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete table ähnelt.
        /// </summary>
        public static string DeleteTable {
            get {
                return ResourceManager.GetString("DeleteTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Design ähnelt.
        /// </summary>
        public static string Design {
            get {
                return ResourceManager.GetString("Design", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Desktop background ähnelt.
        /// </summary>
        public static string DesktopBackground {
            get {
                return ResourceManager.GetString("DesktopBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Desktop composition ähnelt.
        /// </summary>
        public static string DesktopComposition {
            get {
                return ResourceManager.GetString("DesktopComposition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination ähnelt.
        /// </summary>
        public static string Destination {
            get {
                return ResourceManager.GetString("Destination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details ähnelt.
        /// </summary>
        public static string Details {
            get {
                return ResourceManager.GetString("Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detecting  network... ähnelt.
        /// </summary>
        public static string DetectingNetworkDots {
            get {
                return ResourceManager.GetString("DetectingNetworkDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect local ip address and subnetmask ähnelt.
        /// </summary>
        public static string DetectLocalIPAddressAndSubnetmask {
            get {
                return ResourceManager.GetString("DetectLocalIPAddressAndSubnetmask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Developed and maintained by {0} with the help of the ähnelt.
        /// </summary>
        public static string DevelopedAndMaintainedByX {
            get {
                return ResourceManager.GetString("DevelopedAndMaintainedByX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device ähnelt.
        /// </summary>
        public static string Device {
            get {
                return ResourceManager.GetString("Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Device description ähnelt.
        /// </summary>
        public static string DeviceDescription {
            get {
                return ResourceManager.GetString("DeviceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DHCP enabled ähnelt.
        /// </summary>
        public static string DHCPEnabled {
            get {
                return ResourceManager.GetString("DHCPEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DHCP lease expires ähnelt.
        /// </summary>
        public static string DHCPLeaseExpires {
            get {
                return ResourceManager.GetString("DHCPLeaseExpires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DHCP lease obtained ähnelt.
        /// </summary>
        public static string DHCPLeaseObtained {
            get {
                return ResourceManager.GetString("DHCPLeaseObtained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DHCP server ähnelt.
        /// </summary>
        public static string DHCPServer {
            get {
                return ResourceManager.GetString("DHCPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable encryption... ähnelt.
        /// </summary>
        public static string DisableEncryptionDots {
            get {
                return ResourceManager.GetString("DisableEncryptionDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disclaimer ähnelt.
        /// </summary>
        public static string Disclaimer {
            get {
                return ResourceManager.GetString("Disclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnect ähnelt.
        /// </summary>
        public static string Disconnect {
            get {
                return ResourceManager.GetString("Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnected ähnelt.
        /// </summary>
        public static string Disconnected {
            get {
                return ResourceManager.GetString("Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Discovery Protocol ähnelt.
        /// </summary>
        public static string DiscoveryProtocol {
            get {
                return ResourceManager.GetString("DiscoveryProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CDP ähnelt.
        /// </summary>
        public static string DiscoveryProtocol_Cdp {
            get {
                return ResourceManager.GetString("DiscoveryProtocol_Cdp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LLDP ähnelt.
        /// </summary>
        public static string DiscoveryProtocol_Lldp {
            get {
                return ResourceManager.GetString("DiscoveryProtocol_Lldp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LLDP / CDP ähnelt.
        /// </summary>
        public static string DiscoveryProtocol_LldpCdp {
            get {
                return ResourceManager.GetString("DiscoveryProtocol_LldpCdp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string Display {
            get {
                return ResourceManager.GetString("Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die District ähnelt.
        /// </summary>
        public static string District {
            get {
                return ResourceManager.GetString("District", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS ähnelt.
        /// </summary>
        public static string DNS {
            get {
                return ResourceManager.GetString("DNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS autconfiguration ähnelt.
        /// </summary>
        public static string DNSAutoconfiguration {
            get {
                return ResourceManager.GetString("DNSAutoconfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS Lookup ähnelt.
        /// </summary>
        public static string DNSLookup {
            get {
                return ResourceManager.GetString("DNSLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS Lookup... ähnelt.
        /// </summary>
        public static string DNSLookupDots {
            get {
                return ResourceManager.GetString("DNSLookupDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS resolver ähnelt.
        /// </summary>
        public static string DNSResolver {
            get {
                return ResourceManager.GetString("DNSResolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS server ähnelt.
        /// </summary>
        public static string DNSServer {
            get {
                return ResourceManager.GetString("DNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS server(s) ähnelt.
        /// </summary>
        public static string DNSServers {
            get {
                return ResourceManager.GetString("DNSServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A DNS server with this name already exists! ähnelt.
        /// </summary>
        public static string DNSServerWithThisNameAlreadyExists {
            get {
                return ResourceManager.GetString("DNSServerWithThisNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS suffix ähnelt.
        /// </summary>
        public static string DNSSuffix {
            get {
                return ResourceManager.GetString("DNSSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain ähnelt.
        /// </summary>
        public static string Domain {
            get {
                return ResourceManager.GetString("Domain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain name ähnelt.
        /// </summary>
        public static string DomainName {
            get {
                return ResourceManager.GetString("DomainName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Donate ähnelt.
        /// </summary>
        public static string Donate {
            get {
                return ResourceManager.GetString("Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t fragment ähnelt.
        /// </summary>
        public static string DontFragment {
            get {
                return ResourceManager.GetString("DontFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download ähnelt.
        /// </summary>
        public static string Download {
            get {
                return ResourceManager.GetString("Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download Microsoft Edge WebView2 Runtime ähnelt.
        /// </summary>
        public static string DownloadMicrosoftEdgeWebView2Runtime {
            get {
                return ResourceManager.GetString("DownloadMicrosoftEdgeWebView2Runtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drag and drop the applications to reorder them.
        ///Right-click for more options. ähnelt.
        /// </summary>
        public static string DragDropApplicationsToReorderRightClickForMoreOptions {
            get {
                return ResourceManager.GetString("DragDropApplicationsToReorderRightClickForMoreOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duration ähnelt.
        /// </summary>
        public static string Duration {
            get {
                return ResourceManager.GetString("Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duration (s) ähnelt.
        /// </summary>
        public static string DurationS {
            get {
                return ResourceManager.GetString("DurationS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dynamic IPv4 address ähnelt.
        /// </summary>
        public static string DynamicIPv4Address {
            get {
                return ResourceManager.GetString("DynamicIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dynamic IPv4 DNS server ähnelt.
        /// </summary>
        public static string DynamicIPv4DNSServer {
            get {
                return ResourceManager.GetString("DynamicIPv4DNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit AWS profile ähnelt.
        /// </summary>
        public static string EditAWSProfile {
            get {
                return ResourceManager.GetString("EditAWSProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit credentials ähnelt.
        /// </summary>
        public static string EditCredentials {
            get {
                return ResourceManager.GetString("EditCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit custom command ähnelt.
        /// </summary>
        public static string EditCustomCommand {
            get {
                return ResourceManager.GetString("EditCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit DNS server ähnelt.
        /// </summary>
        public static string EditDNSServer {
            get {
                return ResourceManager.GetString("EditDNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit... ähnelt.
        /// </summary>
        public static string EditDots {
            get {
                return ResourceManager.GetString("EditDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit group ähnelt.
        /// </summary>
        public static string EditGroup {
            get {
                return ResourceManager.GetString("EditGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit group... ähnelt.
        /// </summary>
        public static string EditGroupDots {
            get {
                return ResourceManager.GetString("EditGroupDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit OID profile ähnelt.
        /// </summary>
        public static string EditOIDProfile {
            get {
                return ResourceManager.GetString("EditOIDProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit port profile ähnelt.
        /// </summary>
        public static string EditPortProfile {
            get {
                return ResourceManager.GetString("EditPortProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit profile ähnelt.
        /// </summary>
        public static string EditProfile {
            get {
                return ResourceManager.GetString("EditProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit profile file ähnelt.
        /// </summary>
        public static string EditProfileFile {
            get {
                return ResourceManager.GetString("EditProfileFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit SNTP server ähnelt.
        /// </summary>
        public static string EditSNTPServer {
            get {
                return ResourceManager.GetString("EditSNTPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EDNS ähnelt.
        /// </summary>
        public static string EDNS {
            get {
                return ResourceManager.GetString("EDNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Emerald ähnelt.
        /// </summary>
        public static string Emerald {
            get {
                return ResourceManager.GetString("Emerald", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable ähnelt.
        /// </summary>
        public static string Enable {
            get {
                return ResourceManager.GetString("Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable Credential Security Support Provider ähnelt.
        /// </summary>
        public static string EnableCredentialSecuritySupportProvider {
            get {
                return ResourceManager.GetString("EnableCredentialSecuritySupportProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        public static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable encryption... ähnelt.
        /// </summary>
        public static string EnableEncryptionDots {
            get {
                return ResourceManager.GetString("EnableEncryptionDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable gateway server ähnelt.
        /// </summary>
        public static string EnableGatewayServer {
            get {
                return ResourceManager.GetString("EnableGatewayServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable log ähnelt.
        /// </summary>
        public static string EnableLog {
            get {
                return ResourceManager.GetString("EnableLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption ähnelt.
        /// </summary>
        public static string Encryption {
            get {
                return ResourceManager.GetString("Encryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption... ähnelt.
        /// </summary>
        public static string EncryptionDots {
            get {
                return ResourceManager.GetString("EncryptionDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption error ähnelt.
        /// </summary>
        public static string EncryptionError {
            get {
                return ResourceManager.GetString("EncryptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not encrpyt file. You may report this issue on GitHub. ähnelt.
        /// </summary>
        public static string EncryptionErrorMessage {
            get {
                return ResourceManager.GetString("EncryptionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End time ähnelt.
        /// </summary>
        public static string EndTime {
            get {
                return ResourceManager.GetString("EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a domain to query whois... ähnelt.
        /// </summary>
        public static string EnterADomainToQueryWhoisDots {
            get {
                return ResourceManager.GetString("EnterADomainToQueryWhoisDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a number and select a unit to calculate the units... ähnelt.
        /// </summary>
        public static string EnterANumberAndSelectAUnitToCalculateTheUnitsDots {
            get {
                return ResourceManager.GetString("EnterANumberAndSelectAUnitToCalculateTheUnitsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a subnet to calculate it... ähnelt.
        /// </summary>
        public static string EnterASubnetToCalculateItDots {
            get {
                return ResourceManager.GetString("EnterASubnetToCalculateItDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter host to query IP geolocation... ähnelt.
        /// </summary>
        public static string EnterHostToQueryIPGeolocationDots {
            get {
                return ResourceManager.GetString("EnterHostToQueryIPGeolocationDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter location... ähnelt.
        /// </summary>
        public static string EnterLocationDots {
            get {
                return ResourceManager.GetString("EnterLocationDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter master password to unlock the profile file: ähnelt.
        /// </summary>
        public static string EnterMasterPasswordToUnlockProfile {
            get {
                return ResourceManager.GetString("EnterMasterPasswordToUnlockProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter one or more valid IP addresses! ähnelt.
        /// </summary>
        public static string EnterOneOrMoreValidIPAddresses {
            get {
                return ResourceManager.GetString("EnterOneOrMoreValidIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter password... ähnelt.
        /// </summary>
        public static string EnterPasswordDots {
            get {
                return ResourceManager.GetString("EnterPasswordDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter subnet and a new subnet mask to create subnets... ähnelt.
        /// </summary>
        public static string EnterSubnetAndANewSubnetmaskToCreateSubnets {
            get {
                return ResourceManager.GetString("EnterSubnetAndANewSubnetmaskToCreateSubnets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter subnets to create a wide subnet... ähnelt.
        /// </summary>
        public static string EnterSubnetsToCreateAWideSubnet {
            get {
                return ResourceManager.GetString("EnterSubnetsToCreateAWideSubnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid baud! ähnelt.
        /// </summary>
        public static string EnterValidBaud {
            get {
                return ResourceManager.GetString("EnterValidBaud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid domain (like &quot;example.com&quot;)! ähnelt.
        /// </summary>
        public static string EnterValidDomain {
            get {
                return ResourceManager.GetString("EnterValidDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid file name! ähnelt.
        /// </summary>
        public static string EnterValidFileName {
            get {
                return ResourceManager.GetString("EnterValidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid file path! ähnelt.
        /// </summary>
        public static string EnterValidFilePath {
            get {
                return ResourceManager.GetString("EnterValidFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid hostname! ähnelt.
        /// </summary>
        public static string EnterValidHostname {
            get {
                return ResourceManager.GetString("EnterValidHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid hostname and port! ähnelt.
        /// </summary>
        public static string EnterValidHostnameAndPort {
            get {
                return ResourceManager.GetString("EnterValidHostnameAndPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid hostname (like &quot;server-01&quot; or &quot;example.com&quot;) or a valid IP address (like 192.168.178.1)! ähnelt.
        /// </summary>
        public static string EnterValidHostnameOrIPAddress {
            get {
                return ResourceManager.GetString("EnterValidHostnameOrIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter valid hosts (multiple hosts can not end with &quot;;&quot;)! ähnelt.
        /// </summary>
        public static string EnterValidHosts {
            get {
                return ResourceManager.GetString("EnterValidHosts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid IP address! ähnelt.
        /// </summary>
        public static string EnterValidIPAddress {
            get {
                return ResourceManager.GetString("EnterValidIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid IP range! ähnelt.
        /// </summary>
        public static string EnterValidIPScanRange {
            get {
                return ResourceManager.GetString("EnterValidIPScanRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid IPv4 address! ähnelt.
        /// </summary>
        public static string EnterValidIPv4Address {
            get {
                return ResourceManager.GetString("EnterValidIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid IPv6 address! ähnelt.
        /// </summary>
        public static string EnterValidIPv6Address {
            get {
                return ResourceManager.GetString("EnterValidIPv6Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid MAC address (like 00:F1:23:AB:F2:35)! ähnelt.
        /// </summary>
        public static string EnterValidMACAddress {
            get {
                return ResourceManager.GetString("EnterValidMACAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid number! ähnelt.
        /// </summary>
        public static string EnterValidNumber {
            get {
                return ResourceManager.GetString("EnterValidNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid OID! ähnelt.
        /// </summary>
        public static string EnterValidOID {
            get {
                return ResourceManager.GetString("EnterValidOID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid port (1 - 65535)! ähnelt.
        /// </summary>
        public static string EnterValidPort {
            get {
                return ResourceManager.GetString("EnterValidPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid port and/or port range (1 - 65535)! ähnelt.
        /// </summary>
        public static string EnterValidPortOrPortRange {
            get {
                return ResourceManager.GetString("EnterValidPortOrPortRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid subnet (like 192.168.178.133/26)! ähnelt.
        /// </summary>
        public static string EnterValidSubnet {
            get {
                return ResourceManager.GetString("EnterValidSubnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid subnetmask (like 255.255.255.0)! ähnelt.
        /// </summary>
        public static string EnterValidSubnetmask {
            get {
                return ResourceManager.GetString("EnterValidSubnetmask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid subnetmask or CIDR (like 255.255.255.0 or /24)! ähnelt.
        /// </summary>
        public static string EnterValidSubnetmaskOrCIDR {
            get {
                return ResourceManager.GetString("EnterValidSubnetmaskOrCIDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a valid website (like https://example.com/index.html) ähnelt.
        /// </summary>
        public static string EnterValidWebsiteUri {
            get {
                return ResourceManager.GetString("EnterValidWebsiteUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Couldn&apos;t connect to &apos;api.github.com&apos;, check your network connection! ähnelt.
        /// </summary>
        public static string ErrorCheckingApiGithubComVerifyYourNetworkConnection {
            get {
                return ResourceManager.GetString("ErrorCheckingApiGithubComVerifyYourNetworkConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error in response! ähnelt.
        /// </summary>
        public static string ErrorInResponse {
            get {
                return ResourceManager.GetString("ErrorInResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error in response! Check if you have write permissions. ähnelt.
        /// </summary>
        public static string ErrorInResponseCheckIfYouHaveWritePermissions {
            get {
                return ResourceManager.GetString("ErrorInResponseCheckIfYouHaveWritePermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name is already used! ähnelt.
        /// </summary>
        public static string ErrorMessage_NameIsAlreadyUsed {
            get {
                return ResourceManager.GetString("ErrorMessage_NameIsAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings on this page contain errors. Correct them to be able to save. ähnelt.
        /// </summary>
        public static string ErrorMessage_TabPageHasError {
            get {
                return ResourceManager.GetString("ErrorMessage_TabPageHasError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while scanning WiFi adapter &quot;{0}&quot; with error: &quot;{1}&quot; ähnelt.
        /// </summary>
        public static string ErrorWhileScanningWiFiAdapterXXXWithErrorXXX {
            get {
                return ResourceManager.GetString("ErrorWhileScanningWiFiAdapterXXXWithErrorXXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Everything ähnelt.
        /// </summary>
        public static string Everything {
            get {
                return ResourceManager.GetString("Everything", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Linux servers running in AWS... ähnelt.
        /// </summary>
        public static string ExampleGroupDescription {
            get {
                return ResourceManager.GetString("ExampleGroupDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ubuntu Server running Docker with Nextcloud and Traefik... ähnelt.
        /// </summary>
        public static string ExampleProfileDescription {
            get {
                return ResourceManager.GetString("ExampleProfileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Customer 1 ähnelt.
        /// </summary>
        public static string ExampleProfileFileName {
            get {
                return ResourceManager.GetString("ExampleProfileFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Execution Policy ähnelt.
        /// </summary>
        public static string ExecutionPolicy {
            get {
                return ResourceManager.GetString("ExecutionPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expand ähnelt.
        /// </summary>
        public static string Expand {
            get {
                return ResourceManager.GetString("Expand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expand and open search... ähnelt.
        /// </summary>
        public static string ExpandAndOpenSearchDots {
            get {
                return ResourceManager.GetString("ExpandAndOpenSearchDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expand host view ähnelt.
        /// </summary>
        public static string ExpandHostView {
            get {
                return ResourceManager.GetString("ExpandHostView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Experience ähnelt.
        /// </summary>
        public static string Experience {
            get {
                return ResourceManager.GetString("Experience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Experimental ähnelt.
        /// </summary>
        public static string Experimental {
            get {
                return ResourceManager.GetString("Experimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Experimental features ähnelt.
        /// </summary>
        public static string ExperimentalFeatures {
            get {
                return ResourceManager.GetString("ExperimentalFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export ähnelt.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export all ähnelt.
        /// </summary>
        public static string ExportAll {
            get {
                return ResourceManager.GetString("ExportAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export... ähnelt.
        /// </summary>
        public static string ExportDots {
            get {
                return ResourceManager.GetString("ExportDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export selected ähnelt.
        /// </summary>
        public static string ExportSelected {
            get {
                return ResourceManager.GetString("ExportSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP Geolocation API - Fast, accurate, reliable ähnelt.
        /// </summary>
        public static string ExternalService_ip_api_Description {
            get {
                return ResourceManager.GetString("ExternalService_ip_api_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A Simple Public IP Address API ähnelt.
        /// </summary>
        public static string ExternalService_ipify_Description {
            get {
                return ResourceManager.GetString("ExternalService_ipify_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die External services ähnelt.
        /// </summary>
        public static string ExternalServices {
            get {
                return ResourceManager.GetString("ExternalServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Field cannot be empty! ähnelt.
        /// </summary>
        public static string FieldCannotBeEmpty {
            get {
                return ResourceManager.GetString("FieldCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File ähnelt.
        /// </summary>
        public static string File {
            get {
                return ResourceManager.GetString("File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File does not exists! ähnelt.
        /// </summary>
        public static string FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File exported to &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string FileExportedToXX {
            get {
                return ResourceManager.GetString("FileExportedToXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File path ähnelt.
        /// </summary>
        public static string FilePath {
            get {
                return ResourceManager.GetString("FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filter ähnelt.
        /// </summary>
        public static string Filter {
            get {
                return ResourceManager.GetString("Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filter... ähnelt.
        /// </summary>
        public static string FilterDots {
            get {
                return ResourceManager.GetString("FilterDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First usable IP address ähnelt.
        /// </summary>
        public static string FirstUsableIPAddress {
            get {
                return ResourceManager.GetString("FirstUsableIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fixed screen size: ähnelt.
        /// </summary>
        public static string FixedScreenSize {
            get {
                return ResourceManager.GetString("FixedScreenSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flush DNS cache ähnelt.
        /// </summary>
        public static string FlushDNSCache {
            get {
                return ResourceManager.GetString("FlushDNSCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder does not exists! ähnelt.
        /// </summary>
        public static string FolderDoesNotExist {
            get {
                return ResourceManager.GetString("FolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font smoothing ähnelt.
        /// </summary>
        public static string FontSmoothing {
            get {
                return ResourceManager.GetString("FontSmoothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format ähnelt.
        /// </summary>
        public static string Format {
            get {
                return ResourceManager.GetString("Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Found ähnelt.
        /// </summary>
        public static string Found {
            get {
                return ResourceManager.GetString("Found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frequency ähnelt.
        /// </summary>
        public static string Frequency {
            get {
                return ResourceManager.GetString("Frequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (from profile) ähnelt.
        /// </summary>
        public static string FromProfile {
            get {
                return ResourceManager.GetString("FromProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fullscreen ähnelt.
        /// </summary>
        public static string Fullscreen {
            get {
                return ResourceManager.GetString("Fullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gateway ähnelt.
        /// </summary>
        public static string Gateway {
            get {
                return ResourceManager.GetString("Gateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gateway / Router ähnelt.
        /// </summary>
        public static string GatewayRouter {
            get {
                return ResourceManager.GetString("GatewayRouter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gateway server ähnelt.
        /// </summary>
        public static string GatewayServer {
            get {
                return ResourceManager.GetString("GatewayServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Geolocation ähnelt.
        /// </summary>
        public static string Geolocation {
            get {
                return ResourceManager.GetString("Geolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2.4 GHz ähnelt.
        /// </summary>
        public static string GHz2dot4 {
            get {
                return ResourceManager.GetString("GHz2dot4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 5 GHz ähnelt.
        /// </summary>
        public static string GHz5 {
            get {
                return ResourceManager.GetString("GHz5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 6 GHz ähnelt.
        /// </summary>
        public static string GHz6 {
            get {
                return ResourceManager.GetString("GHz6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gigabits ähnelt.
        /// </summary>
        public static string Gigabits {
            get {
                return ResourceManager.GetString("Gigabits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gigabytes ähnelt.
        /// </summary>
        public static string Gigabytes {
            get {
                return ResourceManager.GetString("Gigabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Got &quot;{0}&quot; as public ip address from &quot;{1}&quot;! ähnelt.
        /// </summary>
        public static string GotXXXAsPublicIPAddressFromXXXMessage {
            get {
                return ResourceManager.GetString("GotXXXAsPublicIPAddressFromXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Green ähnelt.
        /// </summary>
        public static string Green {
            get {
                return ResourceManager.GetString("Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group ähnelt.
        /// </summary>
        public static string Group {
            get {
                return ResourceManager.GetString("Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group / domain name ähnelt.
        /// </summary>
        public static string GroupDomainName {
            get {
                return ResourceManager.GetString("GroupDomainName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group name cannot start with &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string GroupNameCannotStartWithX {
            get {
                return ResourceManager.GetString("GroupNameCannotStartWithX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Groups ähnelt.
        /// </summary>
        public static string Groups {
            get {
                return ResourceManager.GetString("Groups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Headers ähnelt.
        /// </summary>
        public static string Headers {
            get {
                return ResourceManager.GetString("Headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Height ähnelt.
        /// </summary>
        public static string Height {
            get {
                return ResourceManager.GetString("Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help ähnelt.
        /// </summary>
        public static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you enable this option, the default PowerShell console settings in the registry under HKCU:\Console are overridden so that the PowerShell console window matches the application theme. This is a global system setting that may affect the appearance of the normal PowerShell window.
        ///
        ///Only the PowerShell consoles configured in the PowerShell and AWS Session Manager settings are modified. Both Windows PowerShell and PWSH (PowerShell 7 and higher) are supported.
        ///
        ///Click in the upper right corner on the help  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string HelpMessage_ApplyThemeToPowerShellConsole {
            get {
                return ResourceManager.GetString("HelpMessage_ApplyThemeToPowerShellConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If not set, the default AWS CLI settings are used. ähnelt.
        /// </summary>
        public static string HelpMessage_AWSCLIDefaultsAreUsedIfNotSet {
            get {
                return ResourceManager.GetString("HelpMessage_AWSCLIDefaultsAreUsedIfNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile which is used by manually created profiles to connect to an EC2 instance via AWS CLI.
        ///
        ///If not set, the default AWS CLI settings are used. ähnelt.
        /// </summary>
        public static string HelpMessage_AWSSessionManagerProfile {
            get {
                return ResourceManager.GetString("HelpMessage_AWSSessionManagerProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To synchronize EC2 instances from AWS, the AWS CLI must be configured on the system. The EC2 instances can be queried for multiple AWS accounts (profiles) and multiple regions. To do this, the profile stored in the file &quot;~/.aws/credentials&quot; must be configured along with the region to query. ähnelt.
        /// </summary>
        public static string HelpMessage_AWSSessionManagerProfilesAndRegionsToSync {
            get {
                return ResourceManager.GetString("HelpMessage_AWSSessionManagerProfilesAndRegionsToSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Region which is used by manually created profiles to connect to an EC2 instance via AWS CLI .
        ///
        ///If not set, the default AWS CLI settings are used. ähnelt.
        /// </summary>
        public static string HelpMessage_AWSSessionManagerRegion {
            get {
                return ResourceManager.GetString("HelpMessage_AWSSessionManagerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The background job will save settings and profiles every x-minutes.
        ///
        ///Value 0 will disable this feature.
        ///
        ///Changes to this value will take effect after restarting the application. ähnelt.
        /// </summary>
        public static string HelpMessage_BackgroundJob {
            get {
                return ResourceManager.GetString("HelpMessage_BackgroundJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The DNS resolver is determined via ip-api.com.
        ///
        ///URL: https://edns.ip-api.com/ ähnelt.
        /// </summary>
        public static string HelpMessage_CheckDNSResolver {
            get {
                return ResourceManager.GetString("HelpMessage_CheckDNSResolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When starting the program, it checks in the background whether a new program version is available on GitHub.
        ///
        ///URL: https://api.github.com/ ähnelt.
        /// </summary>
        public static string HelpMessage_CheckForUpdatesAtStartup {
            get {
                return ResourceManager.GetString("HelpMessage_CheckForUpdatesAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The IP geolocation is determined via ip-api.com.
        ///
        ///URL: http://ip-api.com/ ähnelt.
        /// </summary>
        public static string HelpMessage_CheckIPGeolocation {
            get {
                return ResourceManager.GetString("HelpMessage_CheckIPGeolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The public IP address is determined via ipify.org.
        ///
        ///URL: https://api.ipify.org and https://api6.ipify.org ähnelt.
        /// </summary>
        public static string HelpMessage_CheckPublicIPAddress {
            get {
                return ResourceManager.GetString("HelpMessage_CheckPublicIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt and load your credentials to select them. ähnelt.
        /// </summary>
        public static string HelpMessage_Credentials {
            get {
                return ResourceManager.GetString("HelpMessage_Credentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following variables are available:
        ///
        ///$$ipaddress$$	--&gt;	IP adresse
        ///$$hostname$$	--&gt;	Hostname ähnelt.
        /// </summary>
        public static string HelpMessage_CustomCommandVariables {
            get {
                return ResourceManager.GetString("HelpMessage_CustomCommandVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die URL to a web service that can be reached via http or https and returns an IPv4 address like &quot;xx.xx.xx.xx&quot; as response. ähnelt.
        /// </summary>
        public static string HelpMessage_CustomPublicIPv4AddressAPI {
            get {
                return ResourceManager.GetString("HelpMessage_CustomPublicIPv4AddressAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die URL to a web service that can be reached via http or https and returns an IPv6 address like &quot;xxxx:xx:xxx::xx&quot; as response. ähnelt.
        /// </summary>
        public static string HelpMessage_CustomPublicIPv6AddressAPI {
            get {
                return ResourceManager.GetString("HelpMessage_CustomPublicIPv6AddressAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable experimental features to test new functions. These are not yet complete, contain bugs, can crash the application and may change again until release. ähnelt.
        /// </summary>
        public static string HelpMessage_ExperimentalFeatures {
            get {
                return ResourceManager.GetString("HelpMessage_ExperimentalFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application that is displayed at startup. ähnelt.
        /// </summary>
        public static string HelpMessage_ParameterApplication {
            get {
                return ResourceManager.GetString("HelpMessage_ParameterApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays this dialog. ähnelt.
        /// </summary>
        public static string HelpMessage_ParameterHelp {
            get {
                return ResourceManager.GetString("HelpMessage_ParameterHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resets all application settings. ähnelt.
        /// </summary>
        public static string HelpMessage_ParameterResetSettings {
            get {
                return ResourceManager.GetString("HelpMessage_ParameterResetSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The password is not displayed when editing, but can be overwritten. ähnelt.
        /// </summary>
        public static string HelpMessage_PasswordNotDisplayedCanBeOverwritten {
            get {
                return ResourceManager.GetString("HelpMessage_PasswordNotDisplayedCanBeOverwritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public IPv4 address reachable via ICMP. ähnelt.
        /// </summary>
        public static string HelpMessage_PublicIPv4Address {
            get {
                return ResourceManager.GetString("HelpMessage_PublicIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public IPv6 address reachable via ICMP. ähnelt.
        /// </summary>
        public static string HelpMessage_PublicIPv6Address {
            get {
                return ResourceManager.GetString("HelpMessage_PublicIPv6Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH hostkey to use for the connection (like &quot;71:b8:f2:6e...&quot;). Only available if the mode is &quot;SSH&quot;. ähnelt.
        /// </summary>
        public static string HelpMessage_PuTTYHostkey {
            get {
                return ResourceManager.GetString("HelpMessage_PuTTYHostkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full path to the private key file (like &quot;C:\Users\BornToBeRoot\SSH\private_key.ppk&quot;). Only available if the mode is &quot;SSH&quot;. ähnelt.
        /// </summary>
        public static string HelpMessage_PuTTYPrivateKeyFile {
            get {
                return ResourceManager.GetString("HelpMessage_PuTTYPrivateKeyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username that will be passed into the PuTTY session. Only available if the mode is &quot;SSH&quot;, &quot;Telnet&quot; or &quot;Rlogin&quot;. ähnelt.
        /// </summary>
        public static string HelpMessage_PuTTYUsername {
            get {
                return ResourceManager.GetString("HelpMessage_PuTTYUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [0] If server authentication fails, connect to the computer without warning.
        ///[1] If server authentication fails, do not establish a connection.
        ///[2] If server authentication fails, show a warning and allow me to connect or refuse the connection.
        ///[3] No authentication requirement is specified. ähnelt.
        /// </summary>
        public static string HelpMessage_RDPAuthenticationLevel {
            get {
                return ResourceManager.GetString("HelpMessage_RDPAuthenticationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags help you organize profiles/Profiles by topics/projects. Multiple tags can be used with &quot;;&quot; be separated. Search by tags with &quot;tag=xxx&quot;. ähnelt.
        /// </summary>
        public static string HelpMessage_Tags {
            get {
                return ResourceManager.GetString("HelpMessage_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This setting specifies the minimum number of threads that will be created from the application&apos;s ThreadPool on demand. This can improve the performance for example of the IP scanner or port scanner.
        ///	
        ///The value is added to the default min. threads (number of CPU threads). The value 0 leaves the default settings. If the value is higher than the default max. threads of the ThreadPool, this value is used.
        ///
        ///If the value is too high, performance problems may occur.
        ///
        ///Changes to this value will take effect a [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string HelpMessage_ThreadPoolAdditionalMinThreads {
            get {
                return ResourceManager.GetString("HelpMessage_ThreadPoolAdditionalMinThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hidden applications ähnelt.
        /// </summary>
        public static string HiddenApplications {
            get {
                return ResourceManager.GetString("HiddenApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hidden Network ähnelt.
        /// </summary>
        public static string HiddenNetwork {
            get {
                return ResourceManager.GetString("HiddenNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide ähnelt.
        /// </summary>
        public static string Hide {
            get {
                return ResourceManager.GetString("Hide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Highlight timeouts ähnelt.
        /// </summary>
        public static string HighlightTimeouts {
            get {
                return ResourceManager.GetString("HighlightTimeouts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die History ähnelt.
        /// </summary>
        public static string History {
            get {
                return ResourceManager.GetString("History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hop ähnelt.
        /// </summary>
        public static string Hop {
            get {
                return ResourceManager.GetString("Hop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hops ähnelt.
        /// </summary>
        public static string Hops {
            get {
                return ResourceManager.GetString("Hops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host ähnelt.
        /// </summary>
        public static string Host {
            get {
                return ResourceManager.GetString("Host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hosting ähnelt.
        /// </summary>
        public static string Hosting {
            get {
                return ResourceManager.GetString("Hosting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hostkey ähnelt.
        /// </summary>
        public static string Hostkey {
            get {
                return ResourceManager.GetString("Hostkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hostname ähnelt.
        /// </summary>
        public static string Hostname {
            get {
                return ResourceManager.GetString("Hostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hostname or IP address ähnelt.
        /// </summary>
        public static string HostnameOrIPAddress {
            get {
                return ResourceManager.GetString("HostnameOrIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hosts ähnelt.
        /// </summary>
        public static string Hosts {
            get {
                return ResourceManager.GetString("Hosts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HotKeys ähnelt.
        /// </summary>
        public static string HotKeys {
            get {
                return ResourceManager.GetString("HotKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HTTP Headers ähnelt.
        /// </summary>
        public static string HTTPHeaders {
            get {
                return ResourceManager.GetString("HTTPHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HTTP status code ähnelt.
        /// </summary>
        public static string HTTPStatusCode {
            get {
                return ResourceManager.GetString("HTTPStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ICMPv4 ähnelt.
        /// </summary>
        public static string ICMPv4 {
            get {
                return ResourceManager.GetString("ICMPv4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ICMPv6 ähnelt.
        /// </summary>
        public static string ICMPv6 {
            get {
                return ResourceManager.GetString("ICMPv6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID ähnelt.
        /// </summary>
        public static string ID {
            get {
                return ResourceManager.GetString("ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import ähnelt.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import / Export ähnelt.
        /// </summary>
        public static string ImportExport {
            get {
                return ResourceManager.GetString("ImportExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indigo ähnelt.
        /// </summary>
        public static string Indigo {
            get {
                return ResourceManager.GetString("Indigo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Information ähnelt.
        /// </summary>
        public static string Information {
            get {
                return ResourceManager.GetString("Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Infrastructure ähnelt.
        /// </summary>
        public static string Infrastructure {
            get {
                return ResourceManager.GetString("Infrastructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inherit host from general ähnelt.
        /// </summary>
        public static string InheritHostFromGeneral {
            get {
                return ResourceManager.GetString("InheritHostFromGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        public static string Input {
            get {
                return ResourceManager.GetString("Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input cannot end with a &quot;;&quot;! ähnelt.
        /// </summary>
        public static string InputCannotEndWithSemicolon {
            get {
                return ResourceManager.GetString("InputCannotEndWithSemicolon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input does not contain any text! ähnelt.
        /// </summary>
        public static string InputDoesNotContainAnyText {
            get {
                return ResourceManager.GetString("InputDoesNotContainAnyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instance ID ähnelt.
        /// </summary>
        public static string InstanceId {
            get {
                return ResourceManager.GetString("InstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface ähnelt.
        /// </summary>
        public static string Interface {
            get {
                return ResourceManager.GetString("Interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internet ähnelt.
        /// </summary>
        public static string Internet {
            get {
                return ResourceManager.GetString("Internet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address ähnelt.
        /// </summary>
        public static string IPAddress {
            get {
                return ResourceManager.GetString("IPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP addresses ähnelt.
        /// </summary>
        public static string IPAddresses {
            get {
                return ResourceManager.GetString("IPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP address to detect local ip address based on routing ähnelt.
        /// </summary>
        public static string IPAddressToDetectLocalIPAddressBasedOnRouting {
            get {
                return ResourceManager.GetString("IPAddressToDetectLocalIPAddressBasedOnRouting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ip-api.com rate limit reached (too many requests from your network)!
        ///Try again in a few seconds. ähnelt.
        /// </summary>
        public static string IPApiRateLimitMessage {
            get {
                return ResourceManager.GetString("IPApiRateLimitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP endpoint ähnelt.
        /// </summary>
        public static string IPEndPoint {
            get {
                return ResourceManager.GetString("IPEndPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP geolocation ähnelt.
        /// </summary>
        public static string IPGeolocation {
            get {
                return ResourceManager.GetString("IPGeolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP range ähnelt.
        /// </summary>
        public static string IPRange {
            get {
                return ResourceManager.GetString("IPRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IP Scanner ähnelt.
        /// </summary>
        public static string IPScanner {
            get {
                return ResourceManager.GetString("IPScanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination host unreachable. ähnelt.
        /// </summary>
        public static string IPStatus_DestinationHostUnreachable {
            get {
                return ResourceManager.GetString("IPStatus_DestinationHostUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination network unreachable. ähnelt.
        /// </summary>
        public static string IPStatus_DestinationNetworkUnreachable {
            get {
                return ResourceManager.GetString("IPStatus_DestinationNetworkUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination port unreachable. ähnelt.
        /// </summary>
        public static string IPStatus_DestinationPortUnreachable {
            get {
                return ResourceManager.GetString("IPStatus_DestinationPortUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Success ähnelt.
        /// </summary>
        public static string IPStatus_Success {
            get {
                return ResourceManager.GetString("IPStatus_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Request timed out. ähnelt.
        /// </summary>
        public static string IPStatus_TimedOut {
            get {
                return ResourceManager.GetString("IPStatus_TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TTL expired in transit. ähnelt.
        /// </summary>
        public static string IPStatus_TtlExpired {
            get {
                return ResourceManager.GetString("IPStatus_TtlExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv4 ähnelt.
        /// </summary>
        public static string IPv4 {
            get {
                return ResourceManager.GetString("IPv4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv4 address ähnelt.
        /// </summary>
        public static string IPv4Address {
            get {
                return ResourceManager.GetString("IPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv4-Default-Gateway ähnelt.
        /// </summary>
        public static string IPv4DefaultGateway {
            get {
                return ResourceManager.GetString("IPv4DefaultGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv4 protocol available ähnelt.
        /// </summary>
        public static string IPv4ProtocolAvailable {
            get {
                return ResourceManager.GetString("IPv4ProtocolAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv6 ähnelt.
        /// </summary>
        public static string IPv6 {
            get {
                return ResourceManager.GetString("IPv6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv6 address ähnelt.
        /// </summary>
        public static string IPv6Address {
            get {
                return ResourceManager.GetString("IPv6Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Link-local IPv6 address ähnelt.
        /// </summary>
        public static string IPv6AddressLinkLocal {
            get {
                return ResourceManager.GetString("IPv6AddressLinkLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv6-Default-Gateway ähnelt.
        /// </summary>
        public static string IPv6DefaultGateway {
            get {
                return ResourceManager.GetString("IPv6DefaultGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPv6 protocol available ähnelt.
        /// </summary>
        public static string IPv6ProtocolAvailable {
            get {
                return ResourceManager.GetString("IPv6ProtocolAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is encrypted ähnelt.
        /// </summary>
        public static string IsEncrypted {
            get {
                return ResourceManager.GetString("IsEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISP ähnelt.
        /// </summary>
        public static string ISP {
            get {
                return ResourceManager.GetString("ISP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyboard ähnelt.
        /// </summary>
        public static string Keyboard {
            get {
                return ResourceManager.GetString("Keyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyboard shortcuts ähnelt.
        /// </summary>
        public static string KeyboardShortcuts {
            get {
                return ResourceManager.GetString("KeyboardShortcuts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key must have 8 characters or more! ähnelt.
        /// </summary>
        public static string KeyMustHave8CharactersOrMore {
            get {
                return ResourceManager.GetString("KeyMustHave8CharactersOrMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kilobits ähnelt.
        /// </summary>
        public static string Kilobits {
            get {
                return ResourceManager.GetString("Kilobits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kilobytes ähnelt.
        /// </summary>
        public static string Kilobytes {
            get {
                return ResourceManager.GetString("Kilobytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last scan at {0} ähnelt.
        /// </summary>
        public static string LastScanAtX {
            get {
                return ResourceManager.GetString("LastScanAtX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last usable IP address ähnelt.
        /// </summary>
        public static string LastUsableIPAddress {
            get {
                return ResourceManager.GetString("LastUsableIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Latitude ähnelt.
        /// </summary>
        public static string Latitude {
            get {
                return ResourceManager.GetString("Latitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Libraries ähnelt.
        /// </summary>
        public static string Libraries {
            get {
                return ResourceManager.GetString("Libraries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AirspacePanel fixes all Airspace issues with WPF-hosted Winforms. ähnelt.
        /// </summary>
        public static string Library_AirspaceFixer_Description {
            get {
                return ResourceManager.GetString("Library_AirspaceFixer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AWS SDK for .NET to work with Amazon Elastic Compute Cloud (Amazon EC2) in Amazon Web Services (AWS). ähnelt.
        /// </summary>
        public static string Library_AWSSDKdotEC2_Description {
            get {
                return ResourceManager.GetString("Library_AWSSDKdotEC2_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shared Controlz for WPF and ... more ähnelt.
        /// </summary>
        public static string Library_ControlzEx_Description {
            get {
                return ResourceManager.GetString("Library_ControlzEx_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die C#/WinRT provides packaged WinRT projection support for the C# language. ähnelt.
        /// </summary>
        public static string Library_CsWinRT_Description {
            get {
                return ResourceManager.GetString("Library_CsWinRT_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DnsClient.NET is a simple yet very powerful and high performant open source library for the .NET Framework to do DNS lookups ähnelt.
        /// </summary>
        public static string Library_DnsClientNET_Description {
            get {
                return ResourceManager.GetString("Library_DnsClientNET_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dragable and tearable tab control for WPF ähnelt.
        /// </summary>
        public static string Library_Dragablz_Description {
            get {
                return ResourceManager.GetString("Library_Dragablz_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An easy to use drag&apos;n&apos;drop framework for WPF. ähnelt.
        /// </summary>
        public static string Library_GongSolutionsWpfDragDrop_Description {
            get {
                return ResourceManager.GetString("Library_GongSolutionsWpfDragDrop_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die C# library take care of complex network, IP, IPv4, IPv6, netmask, CIDR, subnet, subnetting, supernet, and supernetting calculation for .NET developers. ähnelt.
        /// </summary>
        public static string Library_IPNetwork_Description {
            get {
                return ResourceManager.GetString("Library_IPNetwork_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simple, flexible, interactive &amp; powerful charts, maps and gauges for .Net ähnelt.
        /// </summary>
        public static string Library_LiveCharts_Description {
            get {
                return ResourceManager.GetString("Library_LiveCharts_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A collection of loading indicators for WPF ähnelt.
        /// </summary>
        public static string Library_LoadingIndicatorsWPF_Description {
            get {
                return ResourceManager.GetString("Library_LoadingIndicatorsWPF_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die log4net is a tool to help the programmer output log statements to a variety of output targets. ähnelt.
        /// </summary>
        public static string Library_log4net_Description {
            get {
                return ResourceManager.GetString("Library_log4net_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A toolkit for creating Metro / Modern UI styled WPF apps. ähnelt.
        /// </summary>
        public static string Library_MahAppsMetro_Description {
            get {
                return ResourceManager.GetString("Library_MahAppsMetro_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Some awesome icons for WPF and UWP all together... ähnelt.
        /// </summary>
        public static string Library_MahAppsMetroIconPacks_Description {
            get {
                return ResourceManager.GetString("Library_MahAppsMetroIconPacks_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Json.NET is a popular high-performance JSON framework for .NET ähnelt.
        /// </summary>
        public static string Library_NewtonsoftJson_Description {
            get {
                return ResourceManager.GetString("Library_NewtonsoftJson_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move a .NET Framework/.NET Core app runtime components and dependencies into a sub-directory and make it beauty. ähnelt.
        /// </summary>
        public static string Library_nulastudioNetBeauty_Description {
            get {
                return ResourceManager.GetString("Library_nulastudioNetBeauty_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A GitHub API client library for .NET ähnelt.
        /// </summary>
        public static string Library_Octokit_Description {
            get {
                return ResourceManager.GetString("Library_Octokit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Runtime for hosting PowerShell ähnelt.
        /// </summary>
        public static string Library_PowerShellSDK_Description {
            get {
                return ResourceManager.GetString("Library_PowerShellSDK_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capture and parse CDP and LLDP packets on local or remote computers ähnelt.
        /// </summary>
        public static string Library_PSDicoveryProtocol_Description {
            get {
                return ResourceManager.GetString("Library_PSDicoveryProtocol_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sharp SNMP Library - Open Source SNMP for .NET and Mono ähnelt.
        /// </summary>
        public static string Library_SharpSNMP_Description {
            get {
                return ResourceManager.GetString("Library_SharpSNMP_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The WebView2 control enables you to embed web technologies (HTML, CSS, and JavaScript) in your native applications powered by Microsoft Edge (Chromium). ähnelt.
        /// </summary>
        public static string Library_WebView2_Description {
            get {
                return ResourceManager.GetString("Library_WebView2_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Easily add interactivity to your apps using XAML Behaviors for WPF. ähnelt.
        /// </summary>
        public static string Library_XamlBehaviorsWpf_Description {
            get {
                return ResourceManager.GetString("Library_XamlBehaviorsWpf_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License ähnelt.
        /// </summary>
        public static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apache License 2.0 ähnelt.
        /// </summary>
        public static string License_ApacheLicense2dot0 {
            get {
                return ResourceManager.GetString("License_ApacheLicense2dot0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BSD-2-Clause ähnelt.
        /// </summary>
        public static string License_BDS2Clause {
            get {
                return ResourceManager.GetString("License_BDS2Clause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BSD-3-Clause ähnelt.
        /// </summary>
        public static string License_BDS3Clause {
            get {
                return ResourceManager.GetString("License_BDS3Clause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft WebView2 License ähnelt.
        /// </summary>
        public static string License_MicrosoftWebView2License {
            get {
                return ResourceManager.GetString("License_MicrosoftWebView2License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MIT License ähnelt.
        /// </summary>
        public static string License_MITLicense {
            get {
                return ResourceManager.GetString("License_MITLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlicense ähnelt.
        /// </summary>
        public static string License_Unlicense {
            get {
                return ResourceManager.GetString("License_Unlicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lime ähnelt.
        /// </summary>
        public static string Lime {
            get {
                return ResourceManager.GetString("Lime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Listeners ähnelt.
        /// </summary>
        public static string Listeners {
            get {
                return ResourceManager.GetString("Listeners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LLDP / CDP ähnelt.
        /// </summary>
        public static string LldpCdp {
            get {
                return ResourceManager.GetString("LldpCdp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local connection ähnelt.
        /// </summary>
        public static string LocalConnection {
            get {
                return ResourceManager.GetString("LocalConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local devices and resources ähnelt.
        /// </summary>
        public static string LocalDevicesAndResources {
            get {
                return ResourceManager.GetString("LocalDevicesAndResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local end time ähnelt.
        /// </summary>
        public static string LocalEndTime {
            get {
                return ResourceManager.GetString("LocalEndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local interface ähnelt.
        /// </summary>
        public static string LocalInterface {
            get {
                return ResourceManager.GetString("LocalInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local IP address ähnelt.
        /// </summary>
        public static string LocalIPAddress {
            get {
                return ResourceManager.GetString("LocalIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local port ähnelt.
        /// </summary>
        public static string LocalPort {
            get {
                return ResourceManager.GetString("LocalPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local start time ähnelt.
        /// </summary>
        public static string LocalStartTime {
            get {
                return ResourceManager.GetString("LocalStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location ähnelt.
        /// </summary>
        public static string Location {
            get {
                return ResourceManager.GetString("Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location cannot be changed in portable version! ähnelt.
        /// </summary>
        public static string LocationCannotBeChangedInThePortableVersion {
            get {
                return ResourceManager.GetString("LocationCannotBeChangedInThePortableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location... ähnelt.
        /// </summary>
        public static string LocationDots {
            get {
                return ResourceManager.GetString("LocationDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location of the import file... ähnelt.
        /// </summary>
        public static string LocationOfTheImport {
            get {
                return ResourceManager.GetString("LocationOfTheImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log ähnelt.
        /// </summary>
        public static string Log {
            get {
                return ResourceManager.GetString("Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log file name ähnelt.
        /// </summary>
        public static string LogFileName {
            get {
                return ResourceManager.GetString("LogFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log mode ähnelt.
        /// </summary>
        public static string LogMode {
            get {
                return ResourceManager.GetString("LogMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logon method ähnelt.
        /// </summary>
        public static string LogonMethod {
            get {
                return ResourceManager.GetString("LogonMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log path ähnelt.
        /// </summary>
        public static string LogPath {
            get {
                return ResourceManager.GetString("LogPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Longitude ähnelt.
        /// </summary>
        public static string Longitude {
            get {
                return ResourceManager.GetString("Longitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lookup ähnelt.
        /// </summary>
        public static string Lookup {
            get {
                return ResourceManager.GetString("Lookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lost ähnelt.
        /// </summary>
        public static string Lost {
            get {
                return ResourceManager.GetString("Lost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MAC Address ähnelt.
        /// </summary>
        public static string MACAddress {
            get {
                return ResourceManager.GetString("MACAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MAC address or vendor ähnelt.
        /// </summary>
        public static string MACAddressOrVendor {
            get {
                return ResourceManager.GetString("MACAddressOrVendor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Magenta ähnelt.
        /// </summary>
        public static string Magenta {
            get {
                return ResourceManager.GetString("Magenta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Magic packet successfully sent! ähnelt.
        /// </summary>
        public static string MagicPacketSentMessage {
            get {
                return ResourceManager.GetString("MagicPacketSentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Management ähnelt.
        /// </summary>
        public static string Management {
            get {
                return ResourceManager.GetString("Management", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Master Password ähnelt.
        /// </summary>
        public static string MasterPassword {
            get {
                return ResourceManager.GetString("MasterPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mauve ähnelt.
        /// </summary>
        public static string Mauve {
            get {
                return ResourceManager.GetString("Mauve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max. concurrent host threads ähnelt.
        /// </summary>
        public static string MaxHostThreads {
            get {
                return ResourceManager.GetString("MaxHostThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum ähnelt.
        /// </summary>
        public static string Maximum {
            get {
                return ResourceManager.GetString("Maximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum hops ähnelt.
        /// </summary>
        public static string MaximumHops {
            get {
                return ResourceManager.GetString("MaximumHops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number ({0}) of hops/router reached! ähnelt.
        /// </summary>
        public static string MaximumNumberOfHopsReached {
            get {
                return ResourceManager.GetString("MaximumNumberOfHopsReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max. concurrent port threads ähnelt.
        /// </summary>
        public static string MaxPortThreads {
            get {
                return ResourceManager.GetString("MaxPortThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These settings only change the maximum number of concurrently executed threads per host/port scan. Go to Settings &gt; General &gt; General to adjust the (min) threads of the application. ähnelt.
        /// </summary>
        public static string MaxThreadsOnlyGoToSettingsGeneralGeneral {
            get {
                return ResourceManager.GetString("MaxThreadsOnlyGoToSettingsGeneralGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Measured time ähnelt.
        /// </summary>
        public static string MeasuredTime {
            get {
                return ResourceManager.GetString("MeasuredTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Megabits ähnelt.
        /// </summary>
        public static string Megabits {
            get {
                return ResourceManager.GetString("Megabits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Megabytes ähnelt.
        /// </summary>
        public static string Megabytes {
            get {
                return ResourceManager.GetString("Megabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Menu and window animation ähnelt.
        /// </summary>
        public static string MenuAndWindowAnimation {
            get {
                return ResourceManager.GetString("MenuAndWindowAnimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge ähnelt.
        /// </summary>
        public static string Merge {
            get {
                return ResourceManager.GetString("Merge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message size ähnelt.
        /// </summary>
        public static string MessageSize {
            get {
                return ResourceManager.GetString("MessageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MIB ähnelt.
        /// </summary>
        public static string MIB {
            get {
                return ResourceManager.GetString("MIB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft Edge WebView2 Runtime is not available! ähnelt.
        /// </summary>
        public static string MicrosoftEdgeWebView2RuntimeIsNotAvailable {
            get {
                return ResourceManager.GetString("MicrosoftEdgeWebView2RuntimeIsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft.Windows.SDK.Contracts is required for this feature but not available on this system (e.g. on Windows Server). ähnelt.
        /// </summary>
        public static string MicrosoftWindowsSDKContractsIsNotAvailable {
            get {
                return ResourceManager.GetString("MicrosoftWindowsSDKContractsIsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrate ähnelt.
        /// </summary>
        public static string Migrate {
            get {
                return ResourceManager.GetString("Migrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimize main window instead of terminating the application ähnelt.
        /// </summary>
        public static string MinimizeInsteadOfTerminating {
            get {
                return ResourceManager.GetString("MinimizeInsteadOfTerminating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimize to tray instead of taskbar ähnelt.
        /// </summary>
        public static string MinimizeToTrayInsteadOfTaskbar {
            get {
                return ResourceManager.GetString("MinimizeToTrayInsteadOfTaskbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum ähnelt.
        /// </summary>
        public static string Minimum {
            get {
                return ResourceManager.GetString("Minimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mobile ähnelt.
        /// </summary>
        public static string Mobile {
            get {
                return ResourceManager.GetString("Mobile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode ähnelt.
        /// </summary>
        public static string Mode {
            get {
                return ResourceManager.GetString("Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model ähnelt.
        /// </summary>
        public static string Model {
            get {
                return ResourceManager.GetString("Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move ähnelt.
        /// </summary>
        public static string Move {
            get {
                return ResourceManager.GetString("Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move &amp; Restart ähnelt.
        /// </summary>
        public static string MoveAndRestart {
            get {
                return ResourceManager.GetString("MoveAndRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multicast ähnelt.
        /// </summary>
        public static string Multicast {
            get {
                return ResourceManager.GetString("Multicast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multiple instances ähnelt.
        /// </summary>
        public static string MultipleInstances {
            get {
                return ResourceManager.GetString("MultipleInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multithreading ähnelt.
        /// </summary>
        public static string Multithreading {
            get {
                return ResourceManager.GetString("Multithreading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetBIOS ähnelt.
        /// </summary>
        public static string NetBIOS {
            get {
                return ResourceManager.GetString("NetBIOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetBIOS scan is disabled! ähnelt.
        /// </summary>
        public static string NetBIOSIsDisabled {
            get {
                return ResourceManager.GetString("NetBIOSIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetBIOS reachable ähnelt.
        /// </summary>
        public static string NetBIOSReachable {
            get {
                return ResourceManager.GetString("NetBIOSReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string Network {
            get {
                return ResourceManager.GetString("Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network address ähnelt.
        /// </summary>
        public static string NetworkAddress {
            get {
                return ResourceManager.GetString("NetworkAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network connections.... ähnelt.
        /// </summary>
        public static string NetworkConnectionsDots {
            get {
                return ResourceManager.GetString("NetworkConnectionsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network connection type ähnelt.
        /// </summary>
        public static string NetworkConnectionType {
            get {
                return ResourceManager.GetString("NetworkConnectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Interface ähnelt.
        /// </summary>
        public static string NetworkInterface {
            get {
                return ResourceManager.GetString("NetworkInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network kind ähnelt.
        /// </summary>
        public static string NetworkKind {
            get {
                return ResourceManager.GetString("NetworkKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The network address cannot be reached. Check if your computer is connected to the network. For information about network troubleshooting, see Windows Help. ähnelt.
        /// </summary>
        public static string NetworkLocationCannotBeReachedMessage {
            get {
                return ResourceManager.GetString("NetworkLocationCannotBeReachedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To analyze network packets, the application must be started with elevated rights! ähnelt.
        /// </summary>
        public static string NetworkPacketsCaptureAdminMessage {
            get {
                return ResourceManager.GetString("NetworkPacketsCaptureAdminMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Networks ähnelt.
        /// </summary>
        public static string Networks {
            get {
                return ResourceManager.GetString("Networks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network time ähnelt.
        /// </summary>
        public static string NetworkTime {
            get {
                return ResourceManager.GetString("NetworkTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network unavailable! ähnelt.
        /// </summary>
        public static string NetworkUnavailable {
            get {
                return ResourceManager.GetString("NetworkUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network usage ähnelt.
        /// </summary>
        public static string NetworkUsage {
            get {
                return ResourceManager.GetString("NetworkUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New connection... ähnelt.
        /// </summary>
        public static string NewConnectionDots {
            get {
                return ResourceManager.GetString("NewConnectionDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New password ähnelt.
        /// </summary>
        public static string NewPassword {
            get {
                return ResourceManager.GetString("NewPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New subnet mask ähnelt.
        /// </summary>
        public static string NewSubnetMask {
            get {
                return ResourceManager.GetString("NewSubnetMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New subnetmask or CIDR ähnelt.
        /// </summary>
        public static string NewSubnetmaskOrCIDR {
            get {
                return ResourceManager.GetString("NewSubnetmaskOrCIDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New tab ähnelt.
        /// </summary>
        public static string NewTab {
            get {
                return ResourceManager.GetString("NewTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No A dns records resolved for &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string NoADNSRecordsResolvedForXXXMessage {
            get {
                return ResourceManager.GetString("NoADNSRecordsResolvedForXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No discovery protocol packages received! ähnelt.
        /// </summary>
        public static string NoDiscoveryProtocolPackagesReceived {
            get {
                return ResourceManager.GetString("NoDiscoveryProtocolPackagesReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No DNS record found for &quot;{0}&quot;! Check your input and the settings. ähnelt.
        /// </summary>
        public static string NoDNSRecordFoundCheckYourInputAndSettings {
            get {
                return ResourceManager.GetString("NoDNSRecordFoundCheckYourInputAndSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No enabled network adapters found! ähnelt.
        /// </summary>
        public static string NoEnabledNetworkAdaptersFound {
            get {
                return ResourceManager.GetString("NoEnabledNetworkAdaptersFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No matching commands! ähnelt.
        /// </summary>
        public static string NoMatchingCommands {
            get {
                return ResourceManager.GetString("NoMatchingCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No open ports found! ähnelt.
        /// </summary>
        public static string NoOpenPortsFound {
            get {
                return ResourceManager.GetString("NoOpenPortsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ports found. Check your input! ähnelt.
        /// </summary>
        public static string NoPortsFoundCheckYourInput {
            get {
                return ResourceManager.GetString("NoPortsFoundCheckYourInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No profiles found!
        ///Create one... ähnelt.
        /// </summary>
        public static string NoProfilesFoundCreateOne {
            get {
                return ResourceManager.GetString("NoProfilesFoundCreateOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No PTR dns record resolved for &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string NoPTRDNSRecordResolvedForXXXMessage {
            get {
                return ResourceManager.GetString("NoPTRDNSRecordResolvedForXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No reachable hosts found! ähnelt.
        /// </summary>
        public static string NoReachableHostsFound {
            get {
                return ResourceManager.GetString("NoReachableHostsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notation ähnelt.
        /// </summary>
        public static string Notation {
            get {
                return ResourceManager.GetString("Notation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (not changed) ähnelt.
        /// </summary>
        public static string NotChanged {
            get {
                return ResourceManager.GetString("NotChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note ähnelt.
        /// </summary>
        public static string Note {
            get {
                return ResourceManager.GetString("Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nothing found! ähnelt.
        /// </summary>
        public static string NothingFound {
            get {
                return ResourceManager.GetString("NothingFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nothing to do. Check your input! ähnelt.
        /// </summary>
        public static string NothingToDoCheckYourInput {
            get {
                return ResourceManager.GetString("NothingToDoCheckYourInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No update available! ähnelt.
        /// </summary>
        public static string NoUpdateAvailable {
            get {
                return ResourceManager.GetString("NoUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No valid file found to import. ähnelt.
        /// </summary>
        public static string NoValidFileFoundToImport {
            get {
                return ResourceManager.GetString("NoValidFileFoundToImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A valid path to PowerShell should end with &quot;pwsh.exe&quot; or &quot;powershell.exe&quot;! ähnelt.
        /// </summary>
        public static string NoValidPowerShellPath {
            get {
                return ResourceManager.GetString("NoValidPowerShellPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A valid path to PuTTY should end with &quot;PuTTY.exe&quot;! ähnelt.
        /// </summary>
        public static string NoValidPuTTYPath {
            get {
                return ResourceManager.GetString("NoValidPuTTYPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A valid path to TigerVNC should end with &quot;vncviewer-*.exe&quot; or &quot;vncviewer64-*.exe&quot;! ähnelt.
        /// </summary>
        public static string NoValidTigerVNCPath {
            get {
                return ResourceManager.GetString("NoValidTigerVNCPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No vendor found. Check your input! ähnelt.
        /// </summary>
        public static string NoVendorFoundCheckYourInput {
            get {
                return ResourceManager.GetString("NoVendorFoundCheckYourInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No WiFi adapters found! ähnelt.
        /// </summary>
        public static string NoWiFiAdaptersFound {
            get {
                return ResourceManager.GetString("NoWiFiAdaptersFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No WiFi networks found! ähnelt.
        /// </summary>
        public static string NoWiFiNetworksFound {
            get {
                return ResourceManager.GetString("NoWiFiNetworksFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of errors after which is canceled: ähnelt.
        /// </summary>
        public static string NumberOfErrorsAfterWhichIsCanceled {
            get {
                return ResourceManager.GetString("NumberOfErrorsAfterWhichIsCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of stored entries ähnelt.
        /// </summary>
        public static string NumberOfStoredEntries {
            get {
                return ResourceManager.GetString("NumberOfStoredEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Obtain an IP address automatically ähnelt.
        /// </summary>
        public static string ObtainAnIPAddressAutomatically {
            get {
                return ResourceManager.GetString("ObtainAnIPAddressAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Obtain DNS server address automatically ähnelt.
        /// </summary>
        public static string ObtainDNSServerAddressAutomatically {
            get {
                return ResourceManager.GetString("ObtainDNSServerAddressAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off ähnelt.
        /// </summary>
        public static string Off {
            get {
                return ResourceManager.GetString("Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Official ähnelt.
        /// </summary>
        public static string Official {
            get {
                return ResourceManager.GetString("Official", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        public static string Offset {
            get {
                return ResourceManager.GetString("Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OID ähnelt.
        /// </summary>
        public static string OID {
            get {
                return ResourceManager.GetString("OID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OID profiles ähnelt.
        /// </summary>
        public static string OIDProfiles {
            get {
                return ResourceManager.GetString("OIDProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Olive ähnelt.
        /// </summary>
        public static string Olive {
            get {
                return ResourceManager.GetString("Olive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On ähnelt.
        /// </summary>
        public static string On {
            get {
                return ResourceManager.GetString("On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only numbers can be entered! ähnelt.
        /// </summary>
        public static string OnlyNumbersCanBeEntered {
            get {
                return ResourceManager.GetString("OnlyNumbersCanBeEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only when using the full screen ähnelt.
        /// </summary>
        public static string OnlyWhenUsingTheFullScreen {
            get {
                return ResourceManager.GetString("OnlyWhenUsingTheFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open ähnelt.
        /// </summary>
        public static string Open {
            get {
                return ResourceManager.GetString("Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open documentation ähnelt.
        /// </summary>
        public static string OpenDocumentation {
            get {
                return ResourceManager.GetString("OpenDocumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open license ähnelt.
        /// </summary>
        public static string OpenLicense {
            get {
                return ResourceManager.GetString("OpenLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open location ähnelt.
        /// </summary>
        public static string OpenLocation {
            get {
                return ResourceManager.GetString("OpenLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open OID profiles... ähnelt.
        /// </summary>
        public static string OpenOIDProfilesDots {
            get {
                return ResourceManager.GetString("OpenOIDProfilesDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open port profiles... ähnelt.
        /// </summary>
        public static string OpenPortProfilesDots {
            get {
                return ResourceManager.GetString("OpenPortProfilesDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open project ähnelt.
        /// </summary>
        public static string OpenProject {
            get {
                return ResourceManager.GetString("OpenProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open settings ähnelt.
        /// </summary>
        public static string OpenSettings {
            get {
                return ResourceManager.GetString("OpenSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open settings... ähnelt.
        /// </summary>
        public static string OpenSettingsDots {
            get {
                return ResourceManager.GetString("OpenSettingsDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open website ähnelt.
        /// </summary>
        public static string OpenWebsite {
            get {
                return ResourceManager.GetString("OpenWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Orange ähnelt.
        /// </summary>
        public static string Orange {
            get {
                return ResourceManager.GetString("Orange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Organization ähnelt.
        /// </summary>
        public static string Organization {
            get {
                return ResourceManager.GetString("Organization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OUI ähnelt.
        /// </summary>
        public static string OUI {
            get {
                return ResourceManager.GetString("OUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die override ähnelt.
        /// </summary>
        public static string Override {
            get {
                return ResourceManager.GetString("Override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Override default settings ähnelt.
        /// </summary>
        public static string OverrideDefaultSettings {
            get {
                return ResourceManager.GetString("OverrideDefaultSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite ähnelt.
        /// </summary>
        public static string Overwrite {
            get {
                return ResourceManager.GetString("Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite? ähnelt.
        /// </summary>
        public static string OverwriteQuestion {
            get {
                return ResourceManager.GetString("OverwriteQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Packet loss ähnelt.
        /// </summary>
        public static string PacketLoss {
            get {
                return ResourceManager.GetString("PacketLoss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Packets transmitted ähnelt.
        /// </summary>
        public static string PacketsTransmitted {
            get {
                return ResourceManager.GetString("PacketsTransmitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter ähnelt.
        /// </summary>
        public static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password ähnelt.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passwords do not match! ähnelt.
        /// </summary>
        public static string PasswordsDoNotMatch {
            get {
                return ResourceManager.GetString("PasswordsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paste ähnelt.
        /// </summary>
        public static string Paste {
            get {
                return ResourceManager.GetString("Paste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Patch ähnelt.
        /// </summary>
        public static string Patch {
            get {
                return ResourceManager.GetString("Patch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path ähnelt.
        /// </summary>
        public static string Path {
            get {
                return ResourceManager.GetString("Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pause ähnelt.
        /// </summary>
        public static string Pause {
            get {
                return ResourceManager.GetString("Pause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performance ähnelt.
        /// </summary>
        public static string Performance {
            get {
                return ResourceManager.GetString("Performance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Persistent bitmap caching ähnelt.
        /// </summary>
        public static string PersistentBitmapCaching {
            get {
                return ResourceManager.GetString("PersistentBitmapCaching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Petabits ähnelt.
        /// </summary>
        public static string Petabits {
            get {
                return ResourceManager.GetString("Petabits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Petabytes ähnelt.
        /// </summary>
        public static string Petabytes {
            get {
                return ResourceManager.GetString("Petabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phy kind ähnelt.
        /// </summary>
        public static string PhyKind {
            get {
                return ResourceManager.GetString("PhyKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PhysicalAddress ähnelt.
        /// </summary>
        public static string PhysicalAddress {
            get {
                return ResourceManager.GetString("PhysicalAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ping ähnelt.
        /// </summary>
        public static string Ping {
            get {
                return ResourceManager.GetString("Ping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ping details ähnelt.
        /// </summary>
        public static string PingDetails {
            get {
                return ResourceManager.GetString("PingDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ping Monitor ähnelt.
        /// </summary>
        public static string PingMonitor {
            get {
                return ResourceManager.GetString("PingMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ping status ähnelt.
        /// </summary>
        public static string PingStatus {
            get {
                return ResourceManager.GetString("PingStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pink ähnelt.
        /// </summary>
        public static string Pink {
            get {
                return ResourceManager.GetString("Pink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port ähnelt.
        /// </summary>
        public static string Port {
            get {
                return ResourceManager.GetString("Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Portable ähnelt.
        /// </summary>
        public static string Portable {
            get {
                return ResourceManager.GetString("Portable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port description ähnelt.
        /// </summary>
        public static string PortDescription {
            get {
                return ResourceManager.GetString("PortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port or service ähnelt.
        /// </summary>
        public static string PortOrService {
            get {
                return ResourceManager.GetString("PortOrService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port profiles ähnelt.
        /// </summary>
        public static string PortProfiles {
            get {
                return ResourceManager.GetString("PortProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ports ähnelt.
        /// </summary>
        public static string Ports {
            get {
                return ResourceManager.GetString("Ports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port scan is disabled! ähnelt.
        /// </summary>
        public static string PortScanIsDisabled {
            get {
                return ResourceManager.GetString("PortScanIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port Scanner ähnelt.
        /// </summary>
        public static string PortScanner {
            get {
                return ResourceManager.GetString("PortScanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closed ähnelt.
        /// </summary>
        public static string PortState_Closed {
            get {
                return ResourceManager.GetString("PortState_Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open ähnelt.
        /// </summary>
        public static string PortState_Open {
            get {
                return ResourceManager.GetString("PortState_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timed out ähnelt.
        /// </summary>
        public static string PortState_TimedOut {
            get {
                return ResourceManager.GetString("PortState_TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port status ähnelt.
        /// </summary>
        public static string PortStatus {
            get {
                return ResourceManager.GetString("PortStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PowerShell ähnelt.
        /// </summary>
        public static string PowerShell {
            get {
                return ResourceManager.GetString("PowerShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The color of the PowerShell console can be changed to the application theme under Settings &gt; General &gt; Appearance ähnelt.
        /// </summary>
        public static string PowerShellConsoleColorCanBeChangedUnderSettingsGeneralApperance {
            get {
                return ResourceManager.GetString("PowerShellConsoleColorCanBeChangedUnderSettingsGeneralApperance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PowerShell process has ended! ähnelt.
        /// </summary>
        public static string PowerShellProcessHasEnded {
            get {
                return ResourceManager.GetString("PowerShellProcessHasEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preferred protocol when resolving hostname: ähnelt.
        /// </summary>
        public static string PreferredProtocolWhenResolvingHostname {
            get {
                return ResourceManager.GetString("PreferredProtocolWhenResolvingHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pre-shared key ähnelt.
        /// </summary>
        public static string PreSharedKey {
            get {
                return ResourceManager.GetString("PreSharedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview ähnelt.
        /// </summary>
        public static string Preview {
            get {
                return ResourceManager.GetString("Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Primary DNS server ähnelt.
        /// </summary>
        public static string PrimaryDNSServer {
            get {
                return ResourceManager.GetString("PrimaryDNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priv ähnelt.
        /// </summary>
        public static string Priv {
            get {
                return ResourceManager.GetString("Priv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Privacy ähnelt.
        /// </summary>
        public static string Privacy {
            get {
                return ResourceManager.GetString("Privacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Private key file ähnelt.
        /// </summary>
        public static string PrivateKeyFile {
            get {
                return ResourceManager.GetString("PrivateKeyFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process ID ähnelt.
        /// </summary>
        public static string ProcessID {
            get {
                return ResourceManager.GetString("ProcessID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process name ähnelt.
        /// </summary>
        public static string ProcessName {
            get {
                return ResourceManager.GetString("ProcessName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process path ähnelt.
        /// </summary>
        public static string ProcessPath {
            get {
                return ResourceManager.GetString("ProcessPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile ähnelt.
        /// </summary>
        public static string Profile {
            get {
                return ResourceManager.GetString("Profile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile files are encrypted on disk using AES with a key size of 256 bits and a block size of 128 bits in CBC mode. The encryption key is derived from a master password using Rfc2898DeriveBytes (PBKDF2) with 1,000,000 iterations. At runtime, passwords are stored as SecureString once the profile file is loaded. For some functions, the password must be converted to a normal string and remains unencrypted in memory until the garbage collector cleans them up.
        ///
        ///First make a backup copy of your profile files be [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string ProfileEncryptionDisclaimer {
            get {
                return ResourceManager.GetString("ProfileEncryptionDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile file ähnelt.
        /// </summary>
        public static string ProfileFile {
            get {
                return ResourceManager.GetString("ProfileFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile file could not be loaded! ähnelt.
        /// </summary>
        public static string ProfileFileCouldNotBeLoaded {
            get {
                return ResourceManager.GetString("ProfileFileCouldNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The profile file could not be loaded and may be corrupted. You can try to restore the file from a backup or delete it.
        ///
        ///If this happens unexpectedly or after an update, please report the error on GitHub.
        ///
        ///
        ///Error message:
        ///&quot;{0}&quot; ähnelt.
        /// </summary>
        public static string ProfileFileCouldNotBeLoadedMessage {
            get {
                return ResourceManager.GetString("ProfileFileCouldNotBeLoadedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile files ähnelt.
        /// </summary>
        public static string ProfileFiles {
            get {
                return ResourceManager.GetString("ProfileFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application ähnelt.
        /// </summary>
        public static string ProfileGroup_Application {
            get {
                return ResourceManager.GetString("ProfileGroup_Application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string ProfileGroup_General {
            get {
                return ResourceManager.GetString("ProfileGroup_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string ProfileName_General {
            get {
                return ResourceManager.GetString("ProfileName_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile name already exists! ähnelt.
        /// </summary>
        public static string ProfileNameAlreadyExists {
            get {
                return ResourceManager.GetString("ProfileNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profiles ähnelt.
        /// </summary>
        public static string Profiles {
            get {
                return ResourceManager.GetString("Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profiles and regions to synchronize ähnelt.
        /// </summary>
        public static string ProfilesAndRegionsToSync {
            get {
                return ResourceManager.GetString("ProfilesAndRegionsToSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profiles reloaded ähnelt.
        /// </summary>
        public static string ProfilesReloaded {
            get {
                return ResourceManager.GetString("ProfilesReloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A profile with this name already exists! ähnelt.
        /// </summary>
        public static string ProfileWithThisNameAlreadyExists {
            get {
                return ResourceManager.GetString("ProfileWithThisNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Program ähnelt.
        /// </summary>
        public static string Program {
            get {
                return ResourceManager.GetString("Program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Protocol ähnelt.
        /// </summary>
        public static string Protocol {
            get {
                return ResourceManager.GetString("Protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Proxy ähnelt.
        /// </summary>
        public static string Proxy {
            get {
                return ResourceManager.GetString("Proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PTR dns record resolved for &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string PTRDNSRecordResolvedForXXXMessage {
            get {
                return ResourceManager.GetString("PTRDNSRecordResolvedForXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PTR record ähnelt.
        /// </summary>
        public static string PTRRecord {
            get {
                return ResourceManager.GetString("PTRRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public IP address check
        ///is disabled! ähnelt.
        /// </summary>
        public static string PublicIPAddressCheckIsDisabled {
            get {
                return ResourceManager.GetString("PublicIPAddressCheckIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public IPv4 address ähnelt.
        /// </summary>
        public static string PublicIPv4Address {
            get {
                return ResourceManager.GetString("PublicIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public IPv6 address ähnelt.
        /// </summary>
        public static string PublicIPv6Address {
            get {
                return ResourceManager.GetString("PublicIPv6Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Purple ähnelt.
        /// </summary>
        public static string Purple {
            get {
                return ResourceManager.GetString("Purple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PuTTY ähnelt.
        /// </summary>
        public static string PuTTY {
            get {
                return ResourceManager.GetString("PuTTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Session log ähnelt.
        /// </summary>
        public static string PuTTYLogMode_SessionLog {
            get {
                return ResourceManager.GetString("PuTTYLogMode_SessionLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH log ähnelt.
        /// </summary>
        public static string PuTTYLogMode_SSHLog {
            get {
                return ResourceManager.GetString("PuTTYLogMode_SSHLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH and Raw log ähnelt.
        /// </summary>
        public static string PuTTYLogMode_SSHRawLog {
            get {
                return ResourceManager.GetString("PuTTYLogMode_SSHRawLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PuTTY process has ended! ähnelt.
        /// </summary>
        public static string PuTTYProcessHasEnded {
            get {
                return ResourceManager.GetString("PuTTYProcessHasEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Query ähnelt.
        /// </summary>
        public static string Query {
            get {
                return ResourceManager.GetString("Query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Query class ähnelt.
        /// </summary>
        public static string QueryClass {
            get {
                return ResourceManager.GetString("QueryClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Questions ähnelt.
        /// </summary>
        public static string Questions {
            get {
                return ResourceManager.GetString("Questions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rate limit reached! Try again in {0} seconds... ähnelt.
        /// </summary>
        public static string RateLimitReachedTryAgainInXSeconds {
            get {
                return ResourceManager.GetString("RateLimitReachedTryAgainInXSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RAW ähnelt.
        /// </summary>
        public static string RAW {
            get {
                return ResourceManager.GetString("RAW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received ähnelt.
        /// </summary>
        public static string Received {
            get {
                return ResourceManager.GetString("Received", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received / Lost ähnelt.
        /// </summary>
        public static string ReceivedLost {
            get {
                return ResourceManager.GetString("ReceivedLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reconnect ähnelt.
        /// </summary>
        public static string Reconnect {
            get {
                return ResourceManager.GetString("Reconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reconnect if the connection is dropped ähnelt.
        /// </summary>
        public static string ReconnectIfTheConnectionIsDropped {
            get {
                return ResourceManager.GetString("ReconnectIfTheConnectionIsDropped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recursion ähnelt.
        /// </summary>
        public static string Recursion {
            get {
                return ResourceManager.GetString("Recursion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Red ähnelt.
        /// </summary>
        public static string Red {
            get {
                return ResourceManager.GetString("Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Redirect clipboard ähnelt.
        /// </summary>
        public static string RedirectClipboard {
            get {
                return ResourceManager.GetString("RedirectClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Redirect devices ähnelt.
        /// </summary>
        public static string RedirectDevices {
            get {
                return ResourceManager.GetString("RedirectDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Redirect drives ähnelt.
        /// </summary>
        public static string RedirectDrives {
            get {
                return ResourceManager.GetString("RedirectDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Redirect ports ähnelt.
        /// </summary>
        public static string RedirectPorts {
            get {
                return ResourceManager.GetString("RedirectPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Redirect printers ähnelt.
        /// </summary>
        public static string RedirectPrinters {
            get {
                return ResourceManager.GetString("RedirectPrinters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Redirect smartcards ähnelt.
        /// </summary>
        public static string RedirectSmartcards {
            get {
                return ResourceManager.GetString("RedirectSmartcards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Region ähnelt.
        /// </summary>
        public static string Region {
            get {
                return ResourceManager.GetString("Region", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release ähnelt.
        /// </summary>
        public static string Release {
            get {
                return ResourceManager.GetString("Release", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Release &amp; Renew ähnelt.
        /// </summary>
        public static string ReleaseRenew {
            get {
                return ResourceManager.GetString("ReleaseRenew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reload ähnelt.
        /// </summary>
        public static string Reload {
            get {
                return ResourceManager.GetString("Reload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remaining time ähnelt.
        /// </summary>
        public static string RemainingTime {
            get {
                return ResourceManager.GetString("RemainingTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote audio ähnelt.
        /// </summary>
        public static string RemoteAudio {
            get {
                return ResourceManager.GetString("RemoteAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote audio playback ähnelt.
        /// </summary>
        public static string RemoteAudioPlayback {
            get {
                return ResourceManager.GetString("RemoteAudioPlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote audio recording ähnelt.
        /// </summary>
        public static string RemoteAudioRecording {
            get {
                return ResourceManager.GetString("RemoteAudioRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote console ähnelt.
        /// </summary>
        public static string RemoteConsole {
            get {
                return ResourceManager.GetString("RemoteConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote Desktop ähnelt.
        /// </summary>
        public static string RemoteDesktop {
            get {
                return ResourceManager.GetString("RemoteDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not record ähnelt.
        /// </summary>
        public static string RemoteDesktopAudioCaptureRedirectionMode_DoNotRecord {
            get {
                return ResourceManager.GetString("RemoteDesktopAudioCaptureRedirectionMode_DoNotRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Record from this computer ähnelt.
        /// </summary>
        public static string RemoteDesktopAudioCaptureRedirectionMode_RecordFromThisComputer {
            get {
                return ResourceManager.GetString("RemoteDesktopAudioCaptureRedirectionMode_RecordFromThisComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not play ähnelt.
        /// </summary>
        public static string RemoteDesktopAudioRedirectionMode_DoNotPlay {
            get {
                return ResourceManager.GetString("RemoteDesktopAudioRedirectionMode_DoNotPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Play on remote computer ähnelt.
        /// </summary>
        public static string RemoteDesktopAudioRedirectionMode_PlayOnRemoteComputer {
            get {
                return ResourceManager.GetString("RemoteDesktopAudioRedirectionMode_PlayOnRemoteComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Play on this computer ähnelt.
        /// </summary>
        public static string RemoteDesktopAudioRedirectionMode_PlayOnThisComputer {
            get {
                return ResourceManager.GetString("RemoteDesktopAudioRedirectionMode_PlayOnThisComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer due to one of the following reasons:  1) The requested Remote Desktop Gateway server address and the server SSL certificate subject name do not match. 2) The certificate is expired or revoked. 3) The certificate root authority does not trust the certificate.  Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331651 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331651", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This computer can&apos;t verify the identity of the RD Gateway &quot;&quot;. It&apos;s not safe to connect to servers that can&apos;t be identified. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331653 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331653", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server address requested and the certificate subject name do not match. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331654 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331654", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server&apos;s certificate has expired or has been revoked. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331655 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331655", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while sending data to the Remote Desktop Gateway server. The server is temporarily unavailable or a network connection is down. Try again later, or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331657 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331657", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while receiving data from the Remote Desktop Gateway server. Either the server is temporarily unavailable or a network connection is down. Try again later, or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331658 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331658", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server address is unreachable or incorrect. Type a valid Remote Desktop Gateway server address. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331660 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331660", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server is temporarily unavailable. Try reconnecting later or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331661 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331661", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server is running low on server resources and is temporarily unavailable. Try reconnecting later or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331663 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331663", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Remote Desktop Gateway server has ended the connection. Try reconnecting later or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331672 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331672", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Remote Desktop Gateway server administrator has ended the connection. Try reconnecting later or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331673 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331673", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote Desktop can&apos;t connect to the remote computer &quot;&quot; for one of these reasons:  1) Your user account is not listed in the RD Gateway&apos;s permission list 2) You might have specified the remote computer in NetBIOS format (for example, computer1), but the RD Gateway is expecting an FQDN or IP address format (for example, computer1.fabrikam.com or 157.60.0.1).  Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331675 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331675", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote Desktop can&apos;t connect to the remote computer &quot;&quot; for one of these reasons:  1) Your user account is not authorized to access the RD Gateway &quot;&quot; 2) Your computer is not authorized to access the RD Gateway &quot;&quot; 3) You are using an incompatible authentication method (for example, the RD Gateway might be expecting a smart card but you provided a password)  Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331676 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331676", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because your network administrator has restricted access to this RD Gateway server. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331679 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331679", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the web proxy server requires authentication. To allow unauthenticated traffic to an RD Gateway server through your web proxy server, contact your network administrator. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331680 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331680", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server reached its maximum allowed connections. Try reconnecting later or contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331682 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331682", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server does not support the request. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331683 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331683", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the client does not support one of the Remote Desktop Gateway&apos;s capabilities. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331684 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331684", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server and this computer are incompatible. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331685 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331685", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because no certificate was configured to use at the Remote Desktop Gateway server. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331688 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331688", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the RD Gateway server that you are trying to connect to is not allowed by your computer administrator. If you are the administrator, add this Remote Desktop Gateway server name to the trusted Remote Desktop Gateway server list on your computer and then try connecting again. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331689 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331689", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because your computer or device did not meet the Network Access Protection requirements set by your network administrator, for one of the following reasons:  1) The Remote Desktop Gateway server name and the server&apos;s public key certificate subject name do not match. 2) The certificate has expired or has been revoked. 3) The certificate root authority does not trust the certificate. 4) The certificate key extension does not support encryption. 5) Your comput [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331690 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331690", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because a user name and password are required to authenticate to the Remote Desktop Gateway server instead of smart card credentials. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331691 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331691", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because smart card credentials are required to authenticate to the Remote Desktop Gateway server instead of a user name and password. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331692 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331692", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because an invalid cookie was sent to the Remote Desktop Gateway server. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331700 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331700", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the cookie was rejected by the Remote Desktop Gateway server. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331701 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331701", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway server is expecting an authentication method different from the one attempted. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331703 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331703", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The RD Gateway connection ended because periodic user authentication failed. Try reconnecting with a correct user name and password. If the reconnection fails, contact your network administrator for further assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331704 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331704", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The RD Gateway connection ended because periodic user authorization failed. Try reconnecting with a correct user name and password. If the reconnection fails, contact your network administrator for further assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331705 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331705", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your computer can&apos;t connect to the remote computer because the Remote Desktop Gateway and the remote computer are unable to exchange policies. This could happen due to one of the following reasons:     1. The remote computer is not capable of exchanging policies with the Remote Desktop Gateway.     2. The remote computer&apos;s configuration does not permit a new connection.     3. The connection between the Remote Desktop Gateway and the remote computer ended.    Contact your network administrator for assistanc [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331707 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331707", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The RD Gateway connection ended because periodic user authorization failed. Your computer or device didn&apos;t pass the Network Access Protection (NAP) requirements set by your network administrator. Contact your network administrator for assistance. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_50331713 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_50331713", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Socket closed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_AtClientWinsockFDCLOSE {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_AtClientWinsockFDCLOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote disconnect by server. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_ByServer {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_ByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompression error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_ClientDecompressionError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_ClientDecompressionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection timed out. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_ConnectionTimedOut {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_ConnectionTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decryption error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_DecryptionError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_DecryptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS name lookup failure. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_DNSLookupFailed {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_DNSLookupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DNS lookup failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_DNSLookupFailed2 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_DNSLookupFailed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_EncryptionError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_EncryptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Sockets gethostbyname call failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_GetHostByNameFailed {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_GetHostByNameFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Host not found. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_HostNotFound {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_HostNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InternalError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal security error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InternalSecurityError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InternalSecurityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal security error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InternalSecurityError2 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InternalSecurityError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The encryption method specified is not valid. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InvalidEncryption {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InvalidEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad IP address specified. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InvalidIP {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InvalidIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The IP address specified is not valid. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InvalidIPAddr {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InvalidIPAddr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security data is not valid. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InvalidSecurityData {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InvalidSecurityData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server security data is not valid. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_InvalidServerSecurityInfo {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_InvalidServerSecurityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License negotiation failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_LicensingFailed {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_LicensingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Licensing time-out. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_LicensingTimeout {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_LicensingTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local disconnection. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_LocalNotError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_LocalNotError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No information is available. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_NoInfo {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_NoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Out of memory. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_OutOfMemory {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_OutOfMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Out of memory. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_OutOfMemory2 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_OutOfMemory2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Out of memory. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_OutOfMemory3 {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_OutOfMemory3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote disconnect by user. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_RemoteByUser {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_RemoteByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to unpack server certificate. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_ServerCertificateUnpackErr {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_ServerCertificateUnpackErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Sockets connect failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SocketConnectFailed {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SocketConnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Sockets recv call failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SocketRecvFailed {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SocketRecvFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The account is disabled. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrAccountDisabled {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrAccountDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The account is expired. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrAccountExpired {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrAccountExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The account is locked out. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrAccountLockedOut {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrAccountLockedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The account is restricted. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrAccountRestriction {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrAccountRestriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The received certificate is expired. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrCertExpired {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrCertExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The policy does not support delegation of credentials to the target server. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrDelegationPolicy {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrDelegationPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The server authentication policy does not allow connection requests using saved credentials. The user must enter new credentials. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrFreshCredRequiredByServer {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrFreshCredRequiredByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Login failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrLogonFailure {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrLogonFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No authority could be contacted for authentication. The domain name of the authenticating party could be wrong, the domain could be unreachable, or there might have been a trust relationship failure. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrNoAuthenticatingAuthority {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrNoAuthenticatingAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified user has no account. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrNoSuchUser {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrNoSuchUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The password is expired. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrPasswordExpired {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrPasswordExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The user password must be changed before logging on for the first time. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrPasswordMustChange {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrPasswordMustChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delegation of credentials to the target server is not allowed unless mutual authentication has been achieved. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrPolicyNTLMOnly {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrPolicyNTLMOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The smart card is blocked. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrSmartcardCardBlocked {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrSmartcardCardBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An incorrect PIN was presented to the smart card. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_SslErrSmartcardWrongPIN {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_SslErrSmartcardWrongPIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timeout occurred. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_TimeoutOccurred {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_TimeoutOccurred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal timer error. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_TimerError {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_TimerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The remote session ended because the total login time limit was reached. This limit is set by the server administrator or by network policies. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_TotalLoginTimeLimitReached {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_TotalLoginTimeLimitReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to reconnect to the remote session. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_UnableToReconnectToRemoteSession {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_UnableToReconnectToRemoteSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows Sockets send call failed. ähnelt.
        /// </summary>
        public static string RemoteDesktopDisconnectReason_WinsockSendFailed {
            get {
                return ResourceManager.GetString("RemoteDesktopDisconnectReason_WinsockSendFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow me to select later ähnelt.
        /// </summary>
        public static string RemoteDesktopGatewayServerLogonMethod_Any {
            get {
                return ResourceManager.GetString("RemoteDesktopGatewayServerLogonMethod_Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Smart card or Windows Hello for Business ähnelt.
        /// </summary>
        public static string RemoteDesktopGatewayServerLogonMethod_Smartcard {
            get {
                return ResourceManager.GetString("RemoteDesktopGatewayServerLogonMethod_Smartcard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ask for password (NTLM) ähnelt.
        /// </summary>
        public static string RemoteDesktopGatewayServerLogonMethod_Userpass {
            get {
                return ResourceManager.GetString("RemoteDesktopGatewayServerLogonMethod_Userpass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On the remote computer ähnelt.
        /// </summary>
        public static string RemoteDesktopKeyboardHookMode_OnTheRemoteComputer {
            get {
                return ResourceManager.GetString("RemoteDesktopKeyboardHookMode_OnTheRemoteComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On this computer ähnelt.
        /// </summary>
        public static string RemoteDesktopKeyboardHookMode_OnThisComputer {
            get {
                return ResourceManager.GetString("RemoteDesktopKeyboardHookMode_OnThisComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die High-speed broadband (2 Mbps - 10 Mbps) ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_BroadbandHigh {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_BroadbandHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Low-speed broadband (256 kbps - 2 Mbps) ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_BroadbandLow {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_BroadbandLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect connection quality automatically ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_DetectAutomatically {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_DetectAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LAN (10 Mbps or higher) ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_LAN {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_LAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modem (56 kbps) ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_Modem {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_Modem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Satellite (2 Mbps - 16 Mbps with high latency) ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_Satellite {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_Satellite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WAN (10 Mbps or higher with high latency) ähnelt.
        /// </summary>
        public static string RemoteDesktopNetworkConnectionType_WAN {
            get {
                return ResourceManager.GetString("RemoteDesktopNetworkConnectionType_WAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote hostname ähnelt.
        /// </summary>
        public static string RemoteHostname {
            get {
                return ResourceManager.GetString("RemoteHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote IP address ähnelt.
        /// </summary>
        public static string RemoteIPAddress {
            get {
                return ResourceManager.GetString("RemoteIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote port ähnelt.
        /// </summary>
        public static string RemotePort {
            get {
                return ResourceManager.GetString("RemotePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove IPv4 address ähnelt.
        /// </summary>
        public static string RemoveIPv4Address {
            get {
                return ResourceManager.GetString("RemoveIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove IPv4 address... ähnelt.
        /// </summary>
        public static string RemoveIPv4AddressDots {
            get {
                return ResourceManager.GetString("RemoveIPv4AddressDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename ähnelt.
        /// </summary>
        public static string Rename {
            get {
                return ResourceManager.GetString("Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renew ähnelt.
        /// </summary>
        public static string Renew {
            get {
                return ResourceManager.GetString("Renew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repeat ähnelt.
        /// </summary>
        public static string Repeat {
            get {
                return ResourceManager.GetString("Repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string ReportAnIssueOrCreateAFeatureRequest {
            get {
                return ResourceManager.GetString("ReportAnIssueOrCreateAFeatureRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Report on GitHub ähnelt.
        /// </summary>
        public static string ReportOnGitHub {
            get {
                return ResourceManager.GetString("ReportOnGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset ähnelt.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All profiles in this profile file will be permanently deleted! ähnelt.
        /// </summary>
        public static string ResetProfilesMessage {
            get {
                return ResourceManager.GetString("ResetProfilesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset settings? ähnelt.
        /// </summary>
        public static string ResetSettingsQuestion {
            get {
                return ResourceManager.GetString("ResetSettingsQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resize ähnelt.
        /// </summary>
        public static string Resize {
            get {
                return ResourceManager.GetString("Resize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve CNAME on ANY requests ähnelt.
        /// </summary>
        public static string ResolveCNAMEOnANYRequests {
            get {
                return ResourceManager.GetString("ResolveCNAMEOnANYRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolved &quot;{0}&quot; as hostname for ip address &quot;{1}&quot;! ähnelt.
        /// </summary>
        public static string ResolvedXXXAsHostnameForIPAddressXXXMessage {
            get {
                return ResourceManager.GetString("ResolvedXXXAsHostnameForIPAddressXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve hostname ähnelt.
        /// </summary>
        public static string ResolveHostname {
            get {
                return ResourceManager.GetString("ResolveHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve Hostname is disabled! ähnelt.
        /// </summary>
        public static string ResolveHostnameIsDisabled {
            get {
                return ResourceManager.GetString("ResolveHostnameIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve IP address for this host (IPv4 is preferred) ähnelt.
        /// </summary>
        public static string ResolveIPAddressForThisHost {
            get {
                return ResourceManager.GetString("ResolveIPAddressForThisHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve IPv4 address for this host ähnelt.
        /// </summary>
        public static string ResolveIPv4AddressForThisHost {
            get {
                return ResourceManager.GetString("ResolveIPv4AddressForThisHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve MAC address and vendor ähnelt.
        /// </summary>
        public static string ResolveMACAddressAndVendor {
            get {
                return ResourceManager.GetString("ResolveMACAddressAndVendor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve MAC address is disabled! ähnelt.
        /// </summary>
        public static string ResolveMACAddressIsDisabled {
            get {
                return ResourceManager.GetString("ResolveMACAddressIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolve PTR ähnelt.
        /// </summary>
        public static string ResolvePTR {
            get {
                return ResourceManager.GetString("ResolvePTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A collection of all country flags in SVG ähnelt.
        /// </summary>
        public static string Resource_Flag_Description {
            get {
                return ResourceManager.GetString("Resource_Flag_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List of Top-Level-Domains from iana.org, which is used to query whois servers of the TLD from whois.iana.org via port 43 ähnelt.
        /// </summary>
        public static string Resource_ListTLD_Description {
            get {
                return ResourceManager.GetString("Resource_ListTLD_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OUI data from ieee.org. ähnelt.
        /// </summary>
        public static string Resource_OUI_Description {
            get {
                return ResourceManager.GetString("Resource_OUI_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service Name and Transport Protocol Port Number Registry from iana.org. ähnelt.
        /// </summary>
        public static string Resource_ServiceNamePortNumber_Description {
            get {
                return ResourceManager.GetString("Resource_ServiceNamePortNumber_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resources ähnelt.
        /// </summary>
        public static string Resources {
            get {
                return ResourceManager.GetString("Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Responses ähnelt.
        /// </summary>
        public static string Responses {
            get {
                return ResourceManager.GetString("Responses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart ähnelt.
        /// </summary>
        public static string Restart {
            get {
                return ResourceManager.GetString("Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart as Administrator ähnelt.
        /// </summary>
        public static string RestartAsAdmin {
            get {
                return ResourceManager.GetString("RestartAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart now ähnelt.
        /// </summary>
        public static string RestartNow {
            get {
                return ResourceManager.GetString("RestartNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart required ähnelt.
        /// </summary>
        public static string RestartRequired {
            get {
                return ResourceManager.GetString("RestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart session ähnelt.
        /// </summary>
        public static string RestartSession {
            get {
                return ResourceManager.GetString("RestartSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart the application to change the language! ähnelt.
        /// </summary>
        public static string RestartTheApplicationToChangeTheLanguage {
            get {
                return ResourceManager.GetString("RestartTheApplicationToChangeTheLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore defaults ähnelt.
        /// </summary>
        public static string RestoreDefaults {
            get {
                return ResourceManager.GetString("RestoreDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        public static string Result {
            get {
                return ResourceManager.GetString("Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume ähnelt.
        /// </summary>
        public static string Resume {
            get {
                return ResourceManager.GetString("Resume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retries ähnelt.
        /// </summary>
        public static string Retries {
            get {
                return ResourceManager.GetString("Retries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rlogin ähnelt.
        /// </summary>
        public static string Rlogin {
            get {
                return ResourceManager.GetString("Rlogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rlogin port ähnelt.
        /// </summary>
        public static string RloginPort {
            get {
                return ResourceManager.GetString("RloginPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round trip delay ähnelt.
        /// </summary>
        public static string RoundTripDelay {
            get {
                return ResourceManager.GetString("RoundTripDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Route ähnelt.
        /// </summary>
        public static string Route {
            get {
                return ResourceManager.GetString("Route", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Routing ähnelt.
        /// </summary>
        public static string Routing {
            get {
                return ResourceManager.GetString("Routing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run background job every x-minute ähnelt.
        /// </summary>
        public static string RunBackgroundJobEveryXMinute {
            get {
                return ResourceManager.GetString("RunBackgroundJobEveryXMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save settings in the application folder ähnelt.
        /// </summary>
        public static string SaveSettingsInApplicationFolder {
            get {
                return ResourceManager.GetString("SaveSettingsInApplicationFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan ähnelt.
        /// </summary>
        public static string Scan {
            get {
                return ResourceManager.GetString("Scan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan for NetBIOS ähnelt.
        /// </summary>
        public static string ScanForNetBIOS {
            get {
                return ResourceManager.GetString("ScanForNetBIOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanned ähnelt.
        /// </summary>
        public static string Scanned {
            get {
                return ResourceManager.GetString("Scanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan ports ähnelt.
        /// </summary>
        public static string ScanPorts {
            get {
                return ResourceManager.GetString("ScanPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search ähnelt.
        /// </summary>
        public static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search... ähnelt.
        /// </summary>
        public static string SearchDots {
            get {
                return ResourceManager.GetString("SearchDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searched application not found! ähnelt.
        /// </summary>
        public static string SearchedApplicationNotFound {
            get {
                return ResourceManager.GetString("SearchedApplicationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searched language not found! ähnelt.
        /// </summary>
        public static string SearchedLanguageNotFound {
            get {
                return ResourceManager.GetString("SearchedLanguageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searched setting not found! ähnelt.
        /// </summary>
        public static string SearchedSettingNotFound {
            get {
                return ResourceManager.GetString("SearchedSettingNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching for networks... ähnelt.
        /// </summary>
        public static string SearchingForNetworksDots {
            get {
                return ResourceManager.GetString("SearchingForNetworksDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching for WiFi adapters... ähnelt.
        /// </summary>
        public static string SearchingWiFiAdaptersDots {
            get {
                return ResourceManager.GetString("SearchingWiFiAdaptersDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Secondary DNS server ähnelt.
        /// </summary>
        public static string SecondaryDNSServer {
            get {
                return ResourceManager.GetString("SecondaryDNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Security ähnelt.
        /// </summary>
        public static string Security {
            get {
                return ResourceManager.GetString("Security", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a profile... ähnelt.
        /// </summary>
        public static string SelectAProfileDots {
            get {
                return ResourceManager.GetString("SelectAProfileDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a screen resolution ähnelt.
        /// </summary>
        public static string SelectAScreenResolution {
            get {
                return ResourceManager.GetString("SelectAScreenResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected ähnelt.
        /// </summary>
        public static string Selected {
            get {
                return ResourceManager.GetString("Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select OID profile ähnelt.
        /// </summary>
        public static string SelectOIDProfile {
            get {
                return ResourceManager.GetString("SelectOIDProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select port profile ähnelt.
        /// </summary>
        public static string SelectPortProfile {
            get {
                return ResourceManager.GetString("SelectPortProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send ähnelt.
        /// </summary>
        public static string Send {
            get {
                return ResourceManager.GetString("Send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serial ähnelt.
        /// </summary>
        public static string Serial {
            get {
                return ResourceManager.GetString("Serial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serial line ähnelt.
        /// </summary>
        public static string SerialLine {
            get {
                return ResourceManager.GetString("SerialLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server ähnelt.
        /// </summary>
        public static string Server {
            get {
                return ResourceManager.GetString("Server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server name ähnelt.
        /// </summary>
        public static string ServerName {
            get {
                return ResourceManager.GetString("ServerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server(s) ähnelt.
        /// </summary>
        public static string Servers {
            get {
                return ResourceManager.GetString("Servers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Service ähnelt.
        /// </summary>
        public static string Service {
            get {
                return ResourceManager.GetString("Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set default ähnelt.
        /// </summary>
        public static string SetDefault {
            get {
                return ResourceManager.GetString("SetDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Master Password ähnelt.
        /// </summary>
        public static string SetMasterPassword {
            get {
                return ResourceManager.GetString("SetMasterPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Master Password... ähnelt.
        /// </summary>
        public static string SetMasterPasswordDots {
            get {
                return ResourceManager.GetString("SetMasterPasswordDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings will be reset and the application will be restarted afterwards! ähnelt.
        /// </summary>
        public static string SettingsAreResetAndApplicationWillBeRestartedMessage {
            get {
                return ResourceManager.GetString("SettingsAreResetAndApplicationWillBeRestartedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The found settings file was corrupted or is not compatible with this version! You may report this issue on GitHub.
        ///
        ///A backup of the settings file was created in the settings folder and the settings were reset.
        ///
        ///Profile files are not affected! ähnelt.
        /// </summary>
        public static string SettingsFileFoundWasCorruptOrNotCompatibleMessage {
            get {
                return ResourceManager.GetString("SettingsFileFoundWasCorruptOrNotCompatibleMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applications ähnelt.
        /// </summary>
        public static string SettingsGroup_Application {
            get {
                return ResourceManager.GetString("SettingsGroup_Application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string SettingsGroup_General {
            get {
                return ResourceManager.GetString("SettingsGroup_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings have been reset! ähnelt.
        /// </summary>
        public static string SettingsHaveBeenReset {
            get {
                return ResourceManager.GetString("SettingsHaveBeenReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appearance ähnelt.
        /// </summary>
        public static string SettingsName_Appearance {
            get {
                return ResourceManager.GetString("SettingsName_Appearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Autostart ähnelt.
        /// </summary>
        public static string SettingsName_Autostart {
            get {
                return ResourceManager.GetString("SettingsName_Autostart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string SettingsName_General {
            get {
                return ResourceManager.GetString("SettingsName_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HotKeys ähnelt.
        /// </summary>
        public static string SettingsName_HotKeys {
            get {
                return ResourceManager.GetString("SettingsName_HotKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string SettingsName_Language {
            get {
                return ResourceManager.GetString("SettingsName_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        public static string SettingsName_Network {
            get {
                return ResourceManager.GetString("SettingsName_Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profiles ähnelt.
        /// </summary>
        public static string SettingsName_Profiles {
            get {
                return ResourceManager.GetString("SettingsName_Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string SettingsName_Settings {
            get {
                return ResourceManager.GetString("SettingsName_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string SettingsName_Status {
            get {
                return ResourceManager.GetString("SettingsName_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update ähnelt.
        /// </summary>
        public static string SettingsName_Update {
            get {
                return ResourceManager.GetString("SettingsName_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Window ähnelt.
        /// </summary>
        public static string SettingsName_Window {
            get {
                return ResourceManager.GetString("SettingsName_Window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings reset! ähnelt.
        /// </summary>
        public static string SettingsResetExclamationMark {
            get {
                return ResourceManager.GetString("SettingsResetExclamationMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Share Gateway credentials with remote computer ähnelt.
        /// </summary>
        public static string ShareGatewayCredentialsWithRemoteComputer {
            get {
                return ResourceManager.GetString("ShareGatewayCredentialsWithRemoteComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show ähnelt.
        /// </summary>
        public static string Show {
            get {
                return ResourceManager.GetString("Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show address bar ähnelt.
        /// </summary>
        public static string ShowAddressBar {
            get {
                return ResourceManager.GetString("ShowAddressBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show closed ports ähnelt.
        /// </summary>
        public static string ShowClosedPorts {
            get {
                return ResourceManager.GetString("ShowClosedPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show current application title ähnelt.
        /// </summary>
        public static string ShowCurrentApplicationTitle {
            get {
                return ResourceManager.GetString("ShowCurrentApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show error message ähnelt.
        /// </summary>
        public static string ShowErrorMessage {
            get {
                return ResourceManager.GetString("ShowErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show local licenses ähnelt.
        /// </summary>
        public static string ShowLocalLicenses {
            get {
                return ResourceManager.GetString("ShowLocalLicenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show only most common query types ähnelt.
        /// </summary>
        public static string ShowOnlyMostCommonQueryTypes {
            get {
                return ResourceManager.GetString("ShowOnlyMostCommonQueryTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show SplashScreen on start ähnelt.
        /// </summary>
        public static string ShowSplashScreenOnStart {
            get {
                return ResourceManager.GetString("ShowSplashScreenOnStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show statistics ähnelt.
        /// </summary>
        public static string ShowStatistics {
            get {
                return ResourceManager.GetString("ShowStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show status window on network change ähnelt.
        /// </summary>
        public static string ShowStatusWindowOnNetworkChange {
            get {
                return ResourceManager.GetString("ShowStatusWindowOnNetworkChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show the following application on startup: ähnelt.
        /// </summary>
        public static string ShowTheFollowingApplicationOnStartup {
            get {
                return ResourceManager.GetString("ShowTheFollowingApplicationOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show unreachable IP addresses and ports ähnelt.
        /// </summary>
        public static string ShowUnreachableIPAddressesAndPorts {
            get {
                return ResourceManager.GetString("ShowUnreachableIPAddressesAndPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show window contents while dragging ähnelt.
        /// </summary>
        public static string ShowWindowContentsWhileDragging {
            get {
                return ResourceManager.GetString("ShowWindowContentsWhileDragging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sienna ähnelt.
        /// </summary>
        public static string Sienna {
            get {
                return ResourceManager.GetString("Sienna", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Signal strength ähnelt.
        /// </summary>
        public static string SignalStrength {
            get {
                return ResourceManager.GetString("SignalStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A powerful tool for managing networks and troubleshoot network problems! ähnelt.
        /// </summary>
        public static string Slogan {
            get {
                return ResourceManager.GetString("Slogan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SNMP ähnelt.
        /// </summary>
        public static string SNMP {
            get {
                return ResourceManager.GetString("SNMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication failed. Please check the community string! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_AuthorizationError {
            get {
                return ResourceManager.GetString("SNMPErrorCode_AuthorizationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A read-write or write-only object was set to an inconsistent value! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_BadValue {
            get {
                return ResourceManager.GetString("SNMPErrorCode_BadValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred during the set operation! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_CommitFailed {
            get {
                return ResourceManager.GetString("SNMPErrorCode_CommitFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred for which no specific message is available! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_GenError {
            get {
                return ResourceManager.GetString("SNMPErrorCode_GenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object&apos;s state is inconsistent, preventing the set operation! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_InconsistentName {
            get {
                return ResourceManager.GetString("SNMPErrorCode_InconsistentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The MIB variable is currently in an inconsistent state and cannot be modified! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_InconsistentValue {
            get {
                return ResourceManager.GetString("SNMPErrorCode_InconsistentValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested object is not accessible for modification! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_NoAccess {
            get {
                return ResourceManager.GetString("SNMPErrorCode_NoAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested object does not exist and cannot be created! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_NoCreation {
            get {
                return ResourceManager.GetString("SNMPErrorCode_NoCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation was successful without any errors. ähnelt.
        /// </summary>
        public static string SNMPErrorCode_NoError {
            get {
                return ResourceManager.GetString("SNMPErrorCode_NoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested OID could not be found! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_NoSuchName {
            get {
                return ResourceManager.GetString("SNMPErrorCode_NoSuchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested object is not writable and cannot be modified! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_NotWritable {
            get {
                return ResourceManager.GetString("SNMPErrorCode_NotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested OID does not exist and is not writable! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_ReadOnly {
            get {
                return ResourceManager.GetString("SNMPErrorCode_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no available system resources to perform the requested operation! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_ResourceUnavailable {
            get {
                return ResourceManager.GetString("SNMPErrorCode_ResourceUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The response to your request was too large to fit into a single response! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_TooBig {
            get {
                return ResourceManager.GetString("SNMPErrorCode_TooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A set operation failed, and previous changes could not be rolled back! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_UndoFailed {
            get {
                return ResourceManager.GetString("SNMPErrorCode_UndoFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The encoding used for the object is incorrect! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_WrongEncoding {
            get {
                return ResourceManager.GetString("SNMPErrorCode_WrongEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value assigned to the object exceeds its maximum length! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_WrongLength {
            get {
                return ResourceManager.GetString("SNMPErrorCode_WrongLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object was set to an incompatible data type! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_WrongType {
            get {
                return ResourceManager.GetString("SNMPErrorCode_WrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value assigned to the object is not a valid choice! ähnelt.
        /// </summary>
        public static string SNMPErrorCode_WrongValue {
            get {
                return ResourceManager.GetString("SNMPErrorCode_WrongValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication failure (incorrect password, community or key). ähnelt.
        /// </summary>
        public static string SNMPV3ErrorCode_AuthenticationFailed {
            get {
                return ResourceManager.GetString("SNMPV3ErrorCode_AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown user name. ähnelt.
        /// </summary>
        public static string SNMPV3ErrorCode_UnknownUserName {
            get {
                return ResourceManager.GetString("SNMPV3ErrorCode_UnknownUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SNTP Lookup ähnelt.
        /// </summary>
        public static string SNTPLookup {
            get {
                return ResourceManager.GetString("SNTPLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SNTP server ähnelt.
        /// </summary>
        public static string SNTPServer {
            get {
                return ResourceManager.GetString("SNTPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SNTP server(s) ähnelt.
        /// </summary>
        public static string SNTPServers {
            get {
                return ResourceManager.GetString("SNTPServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An SNTP server with this name already exists! ähnelt.
        /// </summary>
        public static string SNTPServerWithThisNameAlreadyExists {
            get {
                return ResourceManager.GetString("SNTPServerWithThisNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Socket ähnelt.
        /// </summary>
        public static string Socket {
            get {
                return ResourceManager.GetString("Socket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spaces are not allowed! ähnelt.
        /// </summary>
        public static string SpacesAreNotAllowed {
            get {
                return ResourceManager.GetString("SpacesAreNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed ähnelt.
        /// </summary>
        public static string Speed {
            get {
                return ResourceManager.GetString("Speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SplashScreen ähnelt.
        /// </summary>
        public static string SplashScreen {
            get {
                return ResourceManager.GetString("SplashScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH ähnelt.
        /// </summary>
        public static string SSH {
            get {
                return ResourceManager.GetString("SSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH log ähnelt.
        /// </summary>
        public static string SSHLog {
            get {
                return ResourceManager.GetString("SSHLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH port ähnelt.
        /// </summary>
        public static string SSHPort {
            get {
                return ResourceManager.GetString("SSHPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH Raw log ähnelt.
        /// </summary>
        public static string SSHRawLog {
            get {
                return ResourceManager.GetString("SSHRawLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSID ähnelt.
        /// </summary>
        public static string SSID {
            get {
                return ResourceManager.GetString("SSID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string StarForkTheProjectOnGitHub {
            get {
                return ResourceManager.GetString("StarForkTheProjectOnGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start minimized in tray ähnelt.
        /// </summary>
        public static string StartMinimizedInTray {
            get {
                return ResourceManager.GetString("StartMinimizedInTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start time ähnelt.
        /// </summary>
        public static string StartTime {
            get {
                return ResourceManager.GetString("StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start with Windows (current user) ähnelt.
        /// </summary>
        public static string StartWithWindows {
            get {
                return ResourceManager.GetString("StartWithWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die State ähnelt.
        /// </summary>
        public static string State {
            get {
                return ResourceManager.GetString("State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Static IPv4 address ähnelt.
        /// </summary>
        public static string StaticIPv4Address {
            get {
                return ResourceManager.GetString("StaticIPv4Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Static IPv4 DNS server ähnelt.
        /// </summary>
        public static string StaticIPv4DNSServer {
            get {
                return ResourceManager.GetString("StaticIPv4DNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Statistics ähnelt.
        /// </summary>
        public static string Statistics {
            get {
                return ResourceManager.GetString("Statistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status change ähnelt.
        /// </summary>
        public static string StatusChange {
            get {
                return ResourceManager.GetString("StatusChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status window ähnelt.
        /// </summary>
        public static string StatusWindow {
            get {
                return ResourceManager.GetString("StatusWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Steel ähnelt.
        /// </summary>
        public static string Steel {
            get {
                return ResourceManager.GetString("Steel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet ähnelt.
        /// </summary>
        public static string Subnet {
            get {
                return ResourceManager.GetString("Subnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet 1 ähnelt.
        /// </summary>
        public static string Subnet1 {
            get {
                return ResourceManager.GetString("Subnet1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet 2 ähnelt.
        /// </summary>
        public static string Subnet2 {
            get {
                return ResourceManager.GetString("Subnet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet Calculator ähnelt.
        /// </summary>
        public static string SubnetCalculator {
            get {
                return ResourceManager.GetString("SubnetCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnet mask ähnelt.
        /// </summary>
        public static string SubnetMask {
            get {
                return ResourceManager.GetString("SubnetMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subnetting ähnelt.
        /// </summary>
        public static string Subnetting {
            get {
                return ResourceManager.GetString("Subnetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Success! ähnelt.
        /// </summary>
        public static string Success {
            get {
                return ResourceManager.GetString("Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully connected to {0}! ähnelt.
        /// </summary>
        public static string SuccessfullyConnectedToXXX {
            get {
                return ResourceManager.GetString("SuccessfullyConnectedToXXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronize all EC2 instances from AWS ähnelt.
        /// </summary>
        public static string SyncAllEC2InstancesFromAWS {
            get {
                return ResourceManager.GetString("SyncAllEC2InstancesFromAWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronize EC2 instances from AWS ähnelt.
        /// </summary>
        public static string SyncEC2InstancesFromAWS {
            get {
                return ResourceManager.GetString("SyncEC2InstancesFromAWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronize group EC2 instances from AWS ähnelt.
        /// </summary>
        public static string SyncGroupEC2InstancesFromAWS {
            get {
                return ResourceManager.GetString("SyncGroupEC2InstancesFromAWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronization is disabled! ähnelt.
        /// </summary>
        public static string SyncIsDisabled {
            get {
                return ResourceManager.GetString("SyncIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronize only running EC2 instances from AWS ähnelt.
        /// </summary>
        public static string SyncOnlyRunningEC2InstancesFromAWS {
            get {
                return ResourceManager.GetString("SyncOnlyRunningEC2InstancesFromAWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags ähnelt.
        /// </summary>
        public static string Tags {
            get {
                return ResourceManager.GetString("Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Taupe ähnelt.
        /// </summary>
        public static string Taupe {
            get {
                return ResourceManager.GetString("Taupe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TCP/IP stack is available. &quot;{0}&quot; is reachable via ICMP! ähnelt.
        /// </summary>
        public static string TCPIPStackIsAvailableMessage {
            get {
                return ResourceManager.GetString("TCPIPStackIsAvailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TCP/IP stack is not available... &quot;{0}&quot; is not reachable via ICMP! ähnelt.
        /// </summary>
        public static string TCPIPStackIsNotAvailableMessage {
            get {
                return ResourceManager.GetString("TCPIPStackIsNotAvailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closed ähnelt.
        /// </summary>
        public static string TcpState_Closed {
            get {
                return ResourceManager.GetString("TcpState_Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CloseWait ähnelt.
        /// </summary>
        public static string TcpState_CloseWait {
            get {
                return ResourceManager.GetString("TcpState_CloseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Closing ähnelt.
        /// </summary>
        public static string TcpState_Closing {
            get {
                return ResourceManager.GetString("TcpState_Closing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DeleteTcb ähnelt.
        /// </summary>
        public static string TcpState_DeleteTcb {
            get {
                return ResourceManager.GetString("TcpState_DeleteTcb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Established ähnelt.
        /// </summary>
        public static string TcpState_Established {
            get {
                return ResourceManager.GetString("TcpState_Established", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FinWait1 ähnelt.
        /// </summary>
        public static string TcpState_FinWait1 {
            get {
                return ResourceManager.GetString("TcpState_FinWait1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FinWait2 ähnelt.
        /// </summary>
        public static string TcpState_FinWait2 {
            get {
                return ResourceManager.GetString("TcpState_FinWait2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LastAck ähnelt.
        /// </summary>
        public static string TcpState_LastAck {
            get {
                return ResourceManager.GetString("TcpState_LastAck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Listen ähnelt.
        /// </summary>
        public static string TcpState_Listen {
            get {
                return ResourceManager.GetString("TcpState_Listen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SynReceived ähnelt.
        /// </summary>
        public static string TcpState_SynReceived {
            get {
                return ResourceManager.GetString("TcpState_SynReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SynSent ähnelt.
        /// </summary>
        public static string TcpState_SynSent {
            get {
                return ResourceManager.GetString("TcpState_SynSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TimeWait ähnelt.
        /// </summary>
        public static string TcpState_TimeWait {
            get {
                return ResourceManager.GetString("TcpState_TimeWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unkown ähnelt.
        /// </summary>
        public static string TcpState_Unknown {
            get {
                return ResourceManager.GetString("TcpState_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Teal ähnelt.
        /// </summary>
        public static string Teal {
            get {
                return ResourceManager.GetString("Teal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Telnet ähnelt.
        /// </summary>
        public static string Telnet {
            get {
                return ResourceManager.GetString("Telnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Telnet port ähnelt.
        /// </summary>
        public static string TelnetPort {
            get {
                return ResourceManager.GetString("TelnetPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terabits ähnelt.
        /// </summary>
        public static string Terabits {
            get {
                return ResourceManager.GetString("Terabits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terabytes ähnelt.
        /// </summary>
        public static string Terabytes {
            get {
                return ResourceManager.GetString("Terabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The application can be started without parameters! ähnelt.
        /// </summary>
        public static string TheApplicationCanBeStartedWithoutParameters {
            get {
                return ResourceManager.GetString("TheApplicationCanBeStartedWithoutParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The application will be restarted... ähnelt.
        /// </summary>
        public static string TheApplicationWillBeRestarted {
            get {
                return ResourceManager.GetString("TheApplicationWillBeRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following hostnames could not be resolved: ähnelt.
        /// </summary>
        public static string TheFollowingHostnamesCouldNotBeResolved {
            get {
                return ResourceManager.GetString("TheFollowingHostnamesCouldNotBeResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following parameters are available: ähnelt.
        /// </summary>
        public static string TheFollowingParametersAreAvailable {
            get {
                return ResourceManager.GetString("TheFollowingParametersAreAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The following parameters can not be processed: ähnelt.
        /// </summary>
        public static string TheFollowingParametersCanNotBeProcesses {
            get {
                return ResourceManager.GetString("TheFollowingParametersCanNotBeProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Theme ähnelt.
        /// </summary>
        public static string Theme {
            get {
                return ResourceManager.GetString("Theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dark ähnelt.
        /// </summary>
        public static string Theme_Dark {
            get {
                return ResourceManager.GetString("Theme_Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Light ähnelt.
        /// </summary>
        public static string Theme_Light {
            get {
                return ResourceManager.GetString("Theme_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The process can take up some time and resources (CPU / RAM). ähnelt.
        /// </summary>
        public static string TheProcessCanTakeUpSomeTimeAndResources {
            get {
                return ResourceManager.GetString("TheProcessCanTakeUpSomeTimeAndResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings location is not affected! ähnelt.
        /// </summary>
        public static string TheSettingsLocationIsNotAffected {
            get {
                return ResourceManager.GetString("TheSettingsLocationIsNotAffected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will reset all settings! ähnelt.
        /// </summary>
        public static string ThisWillResetAllSettings {
            get {
                return ResourceManager.GetString("ThisWillResetAllSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ThreadPool additional min. threads ähnelt.
        /// </summary>
        public static string ThreadPoolAdditionalMinThreads {
            get {
                return ResourceManager.GetString("ThreadPoolAdditionalMinThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Threads ähnelt.
        /// </summary>
        public static string Threads {
            get {
                return ResourceManager.GetString("Threads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TigerVNC ähnelt.
        /// </summary>
        public static string TigerVNC {
            get {
                return ResourceManager.GetString("TigerVNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TigerVNC process has ended! ähnelt.
        /// </summary>
        public static string TigerVNCProcessHasEnded {
            get {
                return ResourceManager.GetString("TigerVNCProcessHasEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time ähnelt.
        /// </summary>
        public static string Time {
            get {
                return ResourceManager.GetString("Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time 1 ähnelt.
        /// </summary>
        public static string Time1 {
            get {
                return ResourceManager.GetString("Time1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time 2 ähnelt.
        /// </summary>
        public static string Time2 {
            get {
                return ResourceManager.GetString("Time2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time 3 ähnelt.
        /// </summary>
        public static string Time3 {
            get {
                return ResourceManager.GetString("Time3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time in seconds how long the status window is shown ähnelt.
        /// </summary>
        public static string TimeInSecondsHowLongTheStatusWindowIsShown {
            get {
                return ResourceManager.GetString("TimeInSecondsHowLongTheStatusWindowIsShown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time (ms) to wait between each ping ähnelt.
        /// </summary>
        public static string TimeMSToWaitBetweenEachPing {
            get {
                return ResourceManager.GetString("TimeMSToWaitBetweenEachPing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timeout ähnelt.
        /// </summary>
        public static string Timeout {
            get {
                return ResourceManager.GetString("Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timeout (ms) ähnelt.
        /// </summary>
        public static string TimeoutMS {
            get {
                return ResourceManager.GetString("TimeoutMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timeout on SNMP query. Maybe the host is not reachable or the community / password is wrong. ähnelt.
        /// </summary>
        public static string TimeoutOnSNMPQuery {
            get {
                return ResourceManager.GetString("TimeoutOnSNMPQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timeout (s) ähnelt.
        /// </summary>
        public static string TimeoutS {
            get {
                return ResourceManager.GetString("TimeoutS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timeout when querying the DNS server with the IP address &quot;{0}&quot;! ähnelt.
        /// </summary>
        public static string TimeoutWhenQueryingDNSServerMessage {
            get {
                return ResourceManager.GetString("TimeoutWhenQueryingDNSServerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timestamp ähnelt.
        /// </summary>
        public static string Timestamp {
            get {
                return ResourceManager.GetString("Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time to live ähnelt.
        /// </summary>
        public static string TimeToLive {
            get {
                return ResourceManager.GetString("TimeToLive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hour(s) ähnelt.
        /// </summary>
        public static string TimeUnit_Hour {
            get {
                return ResourceManager.GetString("TimeUnit_Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minute(s) ähnelt.
        /// </summary>
        public static string TimeUnit_Minute {
            get {
                return ResourceManager.GetString("TimeUnit_Minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second(s) ähnelt.
        /// </summary>
        public static string TimeUnit_Second {
            get {
                return ResourceManager.GetString("TimeUnit_Second", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Timezone ähnelt.
        /// </summary>
        public static string Timezone {
            get {
                return ResourceManager.GetString("Timezone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Follow or contact me via X. ähnelt.
        /// </summary>
        public static string ToolTip_ContactOrContactMeViaX {
            get {
                return ResourceManager.GetString("ToolTip_ContactOrContactMeViaX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string ToolTip_GithubDocumentationUrl {
            get {
                return ResourceManager.GetString("ToolTip_GithubDocumentationUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string ToolTip_GithubNewIssueUrl {
            get {
                return ResourceManager.GetString("ToolTip_GithubNewIssueUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string ToolTip_GitHubProjectUrl {
            get {
                return ResourceManager.GetString("ToolTip_GitHubProjectUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help translate the project on Transifex. ähnelt.
        /// </summary>
        public static string ToolTip_HelpTranslateOnTransifex {
            get {
                return ResourceManager.GetString("ToolTip_HelpTranslateOnTransifex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open the documentation. ähnelt.
        /// </summary>
        public static string ToolTip_OpenTheDocumentation {
            get {
                return ResourceManager.GetString("ToolTip_OpenTheDocumentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Report an issue or create a feature request. ähnelt.
        /// </summary>
        public static string ToolTip_ReportIssueOrCreateFeatureRequest {
            get {
                return ResourceManager.GetString("ToolTip_ReportIssueOrCreateFeatureRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run command... (Ctrl+Shift+P) ähnelt.
        /// </summary>
        public static string ToolTip_RunCommandWithHotKey {
            get {
                return ResourceManager.GetString("ToolTip_RunCommandWithHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Star/Fork the Project on GitHub. ähnelt.
        /// </summary>
        public static string ToolTip_StarForkProjectOnGitHub {
            get {
                return ResourceManager.GetString("ToolTip_StarForkProjectOnGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Support this project with a donation. ähnelt.
        /// </summary>
        public static string ToolTip_SupportThisProjectWithADonation {
            get {
                return ResourceManager.GetString("ToolTip_SupportThisProjectWithADonation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string ToolTip_TransifexProjectUrl {
            get {
                return ResourceManager.GetString("ToolTip_TransifexProjectUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string ToolTip_TwitterContactUrl {
            get {
                return ResourceManager.GetString("ToolTip_TwitterContactUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total bytes received ähnelt.
        /// </summary>
        public static string TotalBytesReceived {
            get {
                return ResourceManager.GetString("TotalBytesReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total bytes sent ähnelt.
        /// </summary>
        public static string TotalBytesSent {
            get {
                return ResourceManager.GetString("TotalBytesSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total download ähnelt.
        /// </summary>
        public static string TotalDownload {
            get {
                return ResourceManager.GetString("TotalDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total upload ähnelt.
        /// </summary>
        public static string TotalUpload {
            get {
                return ResourceManager.GetString("TotalUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trace ähnelt.
        /// </summary>
        public static string Trace {
            get {
                return ResourceManager.GetString("Trace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Traceroute ähnelt.
        /// </summary>
        public static string Traceroute {
            get {
                return ResourceManager.GetString("Traceroute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tray ähnelt.
        /// </summary>
        public static string Tray {
            get {
                return ResourceManager.GetString("Tray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TTL ähnelt.
        /// </summary>
        public static string TTL {
            get {
                return ResourceManager.GetString("TTL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unit ähnelt.
        /// </summary>
        public static string Unit {
            get {
                return ResourceManager.GetString("Unit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unkown error! ähnelt.
        /// </summary>
        public static string UnkownError {
            get {
                return ResourceManager.GetString("UnkownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlock profile ähnelt.
        /// </summary>
        public static string UnlockProfile {
            get {
                return ResourceManager.GetString("UnlockProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlock profile file ähnelt.
        /// </summary>
        public static string UnlockProfileFile {
            get {
                return ResourceManager.GetString("UnlockProfileFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unlock the profile file to use the profiles! ähnelt.
        /// </summary>
        public static string UnlockTheProfileFileMessage {
            get {
                return ResourceManager.GetString("UnlockTheProfileFileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Untray / Bring window to foreground ähnelt.
        /// </summary>
        public static string UntrayBringWindowToForeground {
            get {
                return ResourceManager.GetString("UntrayBringWindowToForeground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update ähnelt.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update available! ähnelt.
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload ähnelt.
        /// </summary>
        public static string Upload {
            get {
                return ResourceManager.GetString("Upload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uptime ähnelt.
        /// </summary>
        public static string Uptime {
            get {
                return ResourceManager.GetString("Uptime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die URL ähnelt.
        /// </summary>
        public static string URL {
            get {
                return ResourceManager.GetString("URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use cache ähnelt.
        /// </summary>
        public static string UseCache {
            get {
                return ResourceManager.GetString("UseCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use credentials ähnelt.
        /// </summary>
        public static string UseCredentials {
            get {
                return ResourceManager.GetString("UseCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the current view size as the screen size ähnelt.
        /// </summary>
        public static string UseCurrentViewSize {
            get {
                return ResourceManager.GetString("UseCurrentViewSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use custom DNS server ähnelt.
        /// </summary>
        public static string UseCustomDNSServer {
            get {
                return ResourceManager.GetString("UseCustomDNSServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use custom DNS suffix ähnelt.
        /// </summary>
        public static string UseCustomDNSSuffix {
            get {
                return ResourceManager.GetString("UseCustomDNSSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use custom IPv4 address API ähnelt.
        /// </summary>
        public static string UseCustomIPv4AddressAPI {
            get {
                return ResourceManager.GetString("UseCustomIPv4AddressAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use custom IPv6 address API ähnelt.
        /// </summary>
        public static string UseCustomIPv6AddressAPI {
            get {
                return ResourceManager.GetString("UseCustomIPv6AddressAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use custom themes ähnelt.
        /// </summary>
        public static string UseCustomThemes {
            get {
                return ResourceManager.GetString("UseCustomThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use gateway credentials ähnelt.
        /// </summary>
        public static string UseGatewayCredentials {
            get {
                return ResourceManager.GetString("UseGatewayCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use only TCP ähnelt.
        /// </summary>
        public static string UseOnlyTCP {
            get {
                return ResourceManager.GetString("UseOnlyTCP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use other ähnelt.
        /// </summary>
        public static string UseOther {
            get {
                return ResourceManager.GetString("UseOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use resolver cache ähnelt.
        /// </summary>
        public static string UseResolverCache {
            get {
                return ResourceManager.GetString("UseResolverCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User interface locked! ähnelt.
        /// </summary>
        public static string UserInterfaceLocked {
            get {
                return ResourceManager.GetString("UserInterfaceLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username ähnelt.
        /// </summary>
        public static string Username {
            get {
                return ResourceManager.GetString("Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the following DNS server addresses: ähnelt.
        /// </summary>
        public static string UseTheFollowingDNSServerAddresses {
            get {
                return ResourceManager.GetString("UseTheFollowingDNSServerAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the following IP address: ähnelt.
        /// </summary>
        public static string UseTheFollowingIPAddress {
            get {
                return ResourceManager.GetString("UseTheFollowingIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die v1/v2c ähnelt.
        /// </summary>
        public static string v1v2c {
            get {
                return ResourceManager.GetString("v1v2c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die v3 ähnelt.
        /// </summary>
        public static string v3 {
            get {
                return ResourceManager.GetString("v3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Validate ähnelt.
        /// </summary>
        public static string Validate {
            get {
                return ResourceManager.GetString("Validate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Validation failed! ähnelt.
        /// </summary>
        public static string ValidationFailed {
            get {
                return ResourceManager.GetString("ValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        public static string Value {
            get {
                return ResourceManager.GetString("Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vendor ähnelt.
        /// </summary>
        public static string Vendor {
            get {
                return ResourceManager.GetString("Vendor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version {0} is available! ähnelt.
        /// </summary>
        public static string VersionxxIsAvailable {
            get {
                return ResourceManager.GetString("VersionxxIsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Violet ähnelt.
        /// </summary>
        public static string Violet {
            get {
                return ResourceManager.GetString("Violet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visible applications ähnelt.
        /// </summary>
        public static string VisibleApplications {
            get {
                return ResourceManager.GetString("VisibleApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visible applications in the bar: ähnelt.
        /// </summary>
        public static string VisibleApplicationsInTheBar {
            get {
                return ResourceManager.GetString("VisibleApplicationsInTheBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visual styles ähnelt.
        /// </summary>
        public static string VisualStyles {
            get {
                return ResourceManager.GetString("VisualStyles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VLAN ähnelt.
        /// </summary>
        public static string VLAN {
            get {
                return ResourceManager.GetString("VLAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wake on LAN ähnelt.
        /// </summary>
        public static string WakeOnLAN {
            get {
                return ResourceManager.GetString("WakeOnLAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wake up ähnelt.
        /// </summary>
        public static string WakeUp {
            get {
                return ResourceManager.GetString("WakeUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Walk mode ähnelt.
        /// </summary>
        public static string WalkMode {
            get {
                return ResourceManager.GetString("WalkMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not resolve ip address for hostname! ähnelt.
        /// </summary>
        public static string WarningMessage_CouldNotResolveIPAddressForHostname {
            get {
                return ResourceManager.GetString("WarningMessage_CouldNotResolveIPAddressForHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current profile file is not encrypted and passwords will stored unencrypted on disk! 
        ///
        ///Enable profile file encryption in Settings&gt;Profile to store credentials securely. ähnelt.
        /// </summary>
        public static string WarningMessage_ProfileFileNotEncryptedStoringPasswords {
            get {
                return ResourceManager.GetString("WarningMessage_ProfileFileNotEncryptedStoringPasswords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabling this setting is not recommended. Multiple instances of the application share the same settings and profile files. The last instance to be closed may overwrite changes made by other instances. ähnelt.
        /// </summary>
        public static string WarnMessage_MultipleInstances {
            get {
                return ResourceManager.GetString("WarnMessage_MultipleInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run command... ähnelt.
        /// </summary>
        public static string Watermark_RunCommand {
            get {
                return ResourceManager.GetString("Watermark_RunCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run command... (Ctrl+Shift+P) ähnelt.
        /// </summary>
        public static string Watermark_RunCommandWithHotKey {
            get {
                return ResourceManager.GetString("Watermark_RunCommandWithHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Web Console ähnelt.
        /// </summary>
        public static string WebConsole {
            get {
                return ResourceManager.GetString("WebConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Website ähnelt.
        /// </summary>
        public static string Website {
            get {
                return ResourceManager.GetString("Website", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The WebView control (Microsoft Edge) cannot connect to websites with an invalid certificate! ähnelt.
        /// </summary>
        public static string WebViewControlCertificateIsInvalidMessage {
            get {
                return ResourceManager.GetString("WebViewControlCertificateIsInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Welcome ähnelt.
        /// </summary>
        public static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thank you for using NETworkManager!
        ///
        ///If you like this tool, please leave a star on GitHub and recommend it to others. ähnelt.
        /// </summary>
        public static string WelcomeMessage {
            get {
                return ResourceManager.GetString("WelcomeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To provide additional features, third party services are used that are not operated by me. You can deselect them below. No data is transferred to me at any time. ähnelt.
        /// </summary>
        public static string WelcomePrivacyMessage {
            get {
                return ResourceManager.GetString("WelcomePrivacyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die White ähnelt.
        /// </summary>
        public static string White {
            get {
                return ResourceManager.GetString("White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whois ähnelt.
        /// </summary>
        public static string Whois {
            get {
                return ResourceManager.GetString("Whois", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whois server not found for the domain: &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string WhoisServerNotFoundForTheDomain {
            get {
                return ResourceManager.GetString("WhoisServerNotFoundForTheDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wide Subnet ähnelt.
        /// </summary>
        public static string WideSubnet {
            get {
                return ResourceManager.GetString("WideSubnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Width ähnelt.
        /// </summary>
        public static string Width {
            get {
                return ResourceManager.GetString("Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WiFi ähnelt.
        /// </summary>
        public static string WiFi {
            get {
                return ResourceManager.GetString("WiFi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Access to the Wi-Fi adapter is not permitted by Windows.
        ///
        ///Open the Windows settings and allow Wi-Fi access for this application.
        ///
        ///Restart the application afterwards to use this feature. ähnelt.
        /// </summary>
        public static string WiFiAccessNotAvailableMessage {
            get {
                return ResourceManager.GetString("WiFiAccessNotAvailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Access to the network has been revoked ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_AccessRevoked {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_AccessRevoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid credentials ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_InvalidCredential {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_InvalidCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network not available ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_NetworkNotAvailable {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_NetworkNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successful ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_Success {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection attempt timed out ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_Timeout {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -/- ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_UnspecifiedFailure {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_UnspecifiedFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authentication protocol is not supported! ähnelt.
        /// </summary>
        public static string WiFiConnectionStatus_UnsupportedAuthenticationProtocol {
            get {
                return ResourceManager.GetString("WiFiConnectionStatus_UnsupportedAuthenticationProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Window ähnelt.
        /// </summary>
        public static string Window {
            get {
                return ResourceManager.GetString("Window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows DNS settings ähnelt.
        /// </summary>
        public static string WindowsDNSSettings {
            get {
                return ResourceManager.GetString("WindowsDNSSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WPS ähnelt.
        /// </summary>
        public static string WPS {
            get {
                return ResourceManager.GetString("WPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong password! ähnelt.
        /// </summary>
        public static string WrongPassword {
            get {
                return ResourceManager.GetString("WrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Profile file could not be decrypted with the given password. ähnelt.
        /// </summary>
        public static string WrongPasswordDecryptionFailedMessage {
            get {
                return ResourceManager.GetString("WrongPasswordDecryptionFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The entered password is wrong. ähnelt.
        /// </summary>
        public static string WrongPasswordMessage {
            get {
                return ResourceManager.GetString("WrongPasswordMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; A dns records resolved for &quot;{1}&quot;! ähnelt.
        /// </summary>
        public static string XADNSRecordsResolvedForXXXMessage {
            get {
                return ResourceManager.GetString("XADNSRecordsResolvedForXXXMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} seconds remaining... ähnelt.
        /// </summary>
        public static string XXSecondsRemainingDots {
            get {
                return ResourceManager.GetString("XXSecondsRemainingDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; detected as gateway ip address! ähnelt.
        /// </summary>
        public static string XXXDetectedAsGatewayIPAddress {
            get {
                return ResourceManager.GetString("XXXDetectedAsGatewayIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; detected as local ip address! ähnelt.
        /// </summary>
        public static string XXXDetectedAsLocalIPAddressMessage {
            get {
                return ResourceManager.GetString("XXXDetectedAsLocalIPAddressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} disconnected! ähnelt.
        /// </summary>
        public static string XXXDisconnected {
            get {
                return ResourceManager.GetString("XXXDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is not reachable via ICMP! ähnelt.
        /// </summary>
        public static string XXXIsNotReachableViaICMPMessage {
            get {
                return ResourceManager.GetString("XXXIsNotReachableViaICMPMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is reachable via ICMP! ähnelt.
        /// </summary>
        public static string XXXIsReachableViaICMPMessage {
            get {
                return ResourceManager.GetString("XXXIsReachableViaICMPMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yellow ähnelt.
        /// </summary>
        public static string Yellow {
            get {
                return ResourceManager.GetString("Yellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your system OS is incompatible with the latest release! ähnelt.
        /// </summary>
        public static string YourSystemOSIsIncompatibleWithTheLatestRelease {
            get {
                return ResourceManager.GetString("YourSystemOSIsIncompatibleWithTheLatestRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zip ähnelt.
        /// </summary>
        public static string ZipCode {
            get {
                return ResourceManager.GetString("ZipCode", resourceCulture);
            }
        }
    }
}
